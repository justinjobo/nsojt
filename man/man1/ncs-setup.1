'\" t
.\"     Title: ncs-setup
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 05/14/2024
.\"    Manual: NCS Manual
.\"    Source: Cisco Systems, Inc.
.\"  Language: English
.\"
.TH "NCS\-SETUP" "1" "05/14/2024" "Cisco Systems, Inc." "NCS Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
ncs-setup \- Command to create an initial NCS setup
.SH "SYNOPSIS"
.HP \w'\fBncs\-setup\fR\ 'u
\fBncs\-setup\fR \-\-dest\ \fIDirectory\fR [\-\-netsim\-dir\ \fIDirectory\fR] \-\-force\-generic [\-\-package\ \fIDir\fR|\fIName\fR...] [\-\-generate\-ssh\-keys] [\-\-use\-copy] [\-\-no\-netsim]
.HP \w'\fBncs\-setup\fR\ 'u
\fBncs\-setup\fR \-\-eclipse\-setup [\-\-dest\ \fIDirectory\fR]
.HP \w'\fBncs\-setup\fR\ 'u
\fBncs\-setup\fR \-\-reset [\-\-dest\ \fIDirectory\fR]
.SH "DESCRIPTION"
.PP
The
\fBncs\-setup\fR
command is used to create an initial execution environment for a "local install" of NCS\&. It does so by generating a set of files and directories together with an ncs\&.conf file\&. The files and directories are created in the \-\-dest Directory, and NCS can be launched in that self\-contained directory\&. For production, it is recommended to instead use a "system install" \- see the
\m[blue]\fBncs\-installer(1)\fR\m[]\&.
.PP
Without any options an NCS setup without any default packages is created\&. Using the
\fB\-\-netsim\-dir\fR
and
\fB\-\-package\fR
options, initial environments for using NCS towards simulated devices, real devices, or a combination thereof can be created\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
.PP
This command is not included by default in a "system install" of NCS (see
\m[blue]\fBncs\-installer(1)\fR\m[]), since it is not usable in such an installation\&. The (single) execution environment is created by the NCS installer when it is invoked with the
\fB\-\-system\-install\fR
option\&.
.sp .5v
.RE
.SH "OPTIONS"
.PP
\fB\-\-dest\fR Directory
.RS 4
ncs\-setup generates files and directories, all files are written into the \-\-dest directory\&. The directory is created if non existent\&.
.RE
.PP
\fB\-\-netsim\-dir\fR Directory
.RS 4
If you have an existing ncs\-netsim simulation environment, that environment consists of a set of devices\&. These devices may be NETCONF, CLI or SNMP devices and the ncs\-netsim tool can be used to create, control and manipulate that simulation network\&.
.sp
A common developer use case with ncs\-setup is that we wish to use NCS to control a simulated network\&. The option \-\-netsim\-dir sets up NCS to manage all the devices in that simulated network\&. All hosts in the simulated network are assumed to run on the same host as ncs\&. ncs\-setup will generate an XML initialization file for all devices in the simulated network\&.
.RE
.PP
\fB\-\-force\-generic\fR
.RS 4
Generic devices used in a simulated netsim network will normally be run as netconf devices\&. Use this option if the generic devices should be forced to be run as generic devices\&.
.RE
.PP
\fB\-\-package\fR Directory | Name
.RS 4
When you want to create an execution environment where NCS is used to control real, actual managed devices we can use the \-\-package option\&. The option can be given more than once to add more packages at the same time\&.
.sp
The main purpose of this option is to creates symbolic links in \&./packages to the NED (or other) package(s) indicated to the command\&. This makes sure that NCS finds the packages when it starts\&.
.sp
For all NED packages that ship together with NCS, i\&.e packages that are found under $NCS_DIR/packages/neds we can just provide the name of the NED\&. We can also give the path to a NED package\&.
.if n \{\
.sp
.\}
.RS 4
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.ps +1
\fBNote\fR
.ps -1
.br
The script also accepts the alias
\fB\-\-ned\-package\fR
(to be backwards compatible)\&. Both options do the same thing, create links to your package regardless of what kind of package it is\&.
.sp .5v
.RE
To setup NCS to manage Juniper and Cisco routers we execute:
.sp
.if n \{\
.RS 4
.\}
.nf
   $ ncs\-setup \-\-package juniper \-\-package ios
          
.fi
.if n \{\
.RE
.\}
If we have developed our own NED package to control our own ACME router, we can do:
.sp
.if n \{\
.RS 4
.\}
.nf
   $ ncs\-setup \-\-package /path/to/acme\-package
          
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fB\-\-generate\-ssh\-keys\fR
.RS 4
This option generates fresh ssh keys\&. By default the keys in
${NCS_DIR}/etc/ncs/ssh
are used\&. This is useful so that the ssh keys don\*(Aqt change when a new NCS release is installed\&. Each NCS release comes with newly generated SSH keys\&.
.RE
.PP
\fB\-\-use\-copy\fR
.RS 4
By default, ncs\-setup will create relative symbolic links in the \&./packages directory\&. This option copies the packages instead\&.
.RE
.PP
\fB\-\-no\-netsim\fR
.RS 4
By default, ncs\-setup searches upward in the directory hierarchy for a netsim directory\&. The chosen netsim directory will be used to populate the initial CDB data for the managed devices\&. This option disables this behavior\&.
.RE
.PP
Once the initial execution environment is set up, these two options can be used to assist setting up an Eclipse environment or cleaning up an existing environment\&.
.PP
\fB\-\-eclipse\-setup\fR
.RS 4
When developing the Java code for an NCS application, this command can be used to setup eclipse \&.project and \&.classpath appropriately\&. The \&.classpath will also contain that source path to all of the NCS Java libraries\&.
.RE
.PP
\fB\-\-reset\fR
.RS 4
This option resets all data in NCS to "factory defaults" assuming that the layout of the NCS execution environment is created by
ncs\-setup\&. All CDB database files and all log files are removed\&. The daemon is also stopped
.RE
.SH "SIMULATION EXAMPLE"
.PP
If we have a NETCONF device (which has a set of YANG files and we wish to create a simulation environment for those devices we may combine the three tools \*(Aqncs\-make\-package\*(Aq, \*(Aqncs\-netsim\*(Aq and \*(Aqncs\-setup\*(Aq to achieve this\&. Assume all the yang files for the device resides in
/path/to/yang
we need to
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Create a package for the YANG files\&.
.sp
.if n \{\
.RS 4
.\}
.nf
  $ ncs\-make\-package   \-\-netconf\-ned /path/to/yang acme
            
.fi
.if n \{\
.RE
.\}
This creates a package in \&./acme
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Setup a network simulation environment\&. We choose to create a simulation network with 5 routers named r0 to r4 with the ncs\-netsim tool\&.
.sp
.if n \{\
.RS 4
.\}
.nf
  $ ncs\-netsim create\-network \&./acme 5 r
            
.fi
.if n \{\
.RE
.\}
The network simulation environment will be created in \&./netsim
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Finally create a directory where we execute NCS
.sp
.if n \{\
.RS 4
.\}
.nf
$ ncs\-setup \-\-netsim\-dir netsim \-\-dest \&./acme_nms \e
            \-\-generate\-ssh\-keys
$ cd \&./acme_nms; ncs\-setup \-\-eclipse\-setup
          
.fi
.if n \{\
.RE
.\}
.RE
.PP
This results in a simulation environment that looks like:
.sp
.if n \{\
.RS 4
.\}
.nf
           \-\-\-\-\-\-
           | NCS |
           \-\-\-\-\-\-\-
              |
              |
              |
 \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
   |      |      |       |      |
   |      |      |       |      |
 \-\-\-\-    \-\-\-\-   \-\-\-\-    \-\-\-\-   \-\-\-\-
 |r0 |   |r1|   |r2|    |r3|   |r4|
 \-\-\-\-    \-\-\-\-   \-\-\-\-    \-\-\-\-   \-\-\-\-

    
.fi
.if n \{\
.RE
.\}
.PP
with NCS managing 5 simulated NETCONF routers, all running ConfD on localhost (on different ports) and all running the YANG models from
/path/to/yang
.SH "AUTHOR"
.br
.RS 4
Author.
.RE
.SH "COPYRIGHT"
.br
Copyright \(co 2021, 2022, 2023, 2024 Cisco Systems, Inc. All rights reserved.
.br
