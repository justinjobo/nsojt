'\" t
.\"     Title: ncs-project-update
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 05/14/2024
.\"    Manual: NCS Manual
.\"    Source: Cisco Systems, Inc.
.\"  Language: English
.\"
.TH "NCS\-PROJECT\-UPDATE" "1" "05/14/2024" "Cisco Systems, Inc." "NCS Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
ncs-project-update \- Command to update and maintain an NCS project
.SH "SYNOPSIS"
.HP \w'\fBncs\-project\ update\ \fR\ 'u
\fBncs\-project update \fR [OPTIONS] project\-name
.SH "DESCRIPTION"
.PP
Update and maintain an NCS project\&. This involves fetching packages as defined in
project\-meta\-data\&.xml, and/or update already fetched packages\&.
.PP
For packages, specified to origin from a git repository, a number of git commands will be performed to get it up to date\&. First a
\fIgit stash\fR
will be performed in order to protect from potential data loss of any local changes made\&. Then a
\fIgit fetch\fR
will be made to bring in the latest commits from the origin (remote) git repository\&. Finally, the local branch, tag or commit hash will be restored, with a
\fIgit reset\fR, according to the specification in the
project\-meta\-data\&.xml
file\&.
.PP
Any package specified as
\fIlocal\fR
will be left unaffected\&.
.PP
Any package which, in its
package\-meta\-data\&.xml
file, has a required dependency, will have that dependency resolved\&. First, if a
\fIpackages\-store\fR
has been defined in the
project\-meta\-data\&.xml
file\&. The dependent package will be search for in that location\&. If this fails, an attempt to checkout the dependent package via git will be attempted\&.
.PP
The
\fIncs\-project update\fR
command is intended to be called as soon as you want to bring your project up to date\&. Each time called, the command will recreate the
setup\&.mk
include file which is intended to be included by the top Makefile\&. This file will contain make targets for compiling the packages and to setup any netsim devices\&.
.SH "OPTIONS"
.PP
\fB\-h, \-\-help\fR
.RS 4
Print a short help text and exit\&.
.RE
.PP
\fB\-v\fR
.RS 4
Print information messages about what is being done\&.
.RE
.PP
\fB\-y\fR
.RS 4
Answer yes on every questions\&. Will cause overwriting to any earlier
\fIsetup\&.mk\fR
files\&.
.RE
.PP
\fB\-\-ncs\-min\-version\fR
.RS 4
.RE
.PP
\fB\-\-ncs\-min\-version\-non\-strict\fR
.RS 4
.RE
.PP
\fB\-\-use\-bundle\-packages\fR
.RS 4
Update using the packages defined in the bundle section\&.
.RE
.SH "EXAMPLES"
.PP
Bring a project up to date\&.
.sp
.if n \{\
.RS 4
.\}
.nf
  $ ncs\-project update \-v
  ncs\-project: installing packages\&.\&.\&.
  ncs\-project: updating package alu\-sr\&.\&.\&.
  ncs\-project: cd /home/my/mpls\-vpn\-project/packages/alu\-sr
  ncs\-project: git stash   # (to save any local changes)
  ncs\-project: git checkout \-q "stable"
  ncs\-project: git fetch
  ncs\-project: git reset \-\-hard origin/stable
  ncs\-project: updating package alu\-sr\&.\&.\&.done
  ncs\-project: installing packages\&.\&.\&.ok
  ncs\-project: resolving package dependencies\&.\&.\&.
  ncs\-project: filtering missing pkgs for
     "/home/my/mpls\-vpn\-project/packages/ipaddress\-allocator"
  ncs\-project: missing packages:
  [{<<"resource\-manager">>,undefined}]
  ncs\-project: No version found for dependency: "resource\-manager" ,
     trying git and the stable branch
  ncs\-project: git clone "ssh://git@stash\&.tail\-f\&.com/pkg/resource\-manager\&.git"
     "/home/my/mpls\-vpn\-project/packages/resource\-manager"
  ncs\-project: git checkout \-q "stable"
  ncs\-project: filtering missing pkgs for
     "/home/my/mpls\-vpn\-project/packages/resource\-manager"
  ncs\-project: missing packages:
  [{<<"cisco\-ios">>,<<"3\&.0\&.2">>}]
  ncs\-project: unpacked tar file:
     "/store/releases/ncs\-pkgs/cisco\-ios/3\&.0\&.4/ncs\-3\&.0\&.4\-cisco\-ios\-3\&.0\&.2\&.tar\&.gz"
  ncs\-project: resolving package dependencies\&.\&.\&.ok
      
.fi
.if n \{\
.RE
.\}
.SH "AUTHOR"
.br
.RS 4
Author.
.RE
.SH "COPYRIGHT"
.br
Copyright \(co 2021, 2022, 2023, 2024 Cisco Systems, Inc. All rights reserved.
.br
