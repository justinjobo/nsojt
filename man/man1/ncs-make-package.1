'\" t
.\"     Title: ncs-make-package
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 05/14/2024
.\"    Manual: NCS Manual
.\"    Source: Cisco Systems, Inc.
.\"  Language: English
.\"
.TH "NCS\-MAKE\-PACKAGE" "1" "05/14/2024" "Cisco Systems, Inc." "NCS Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
ncs-make-package \- Command to create an NCS package
.SH "SYNOPSIS"
.HP \w'\fBncs\-make\-package\ \fR\ 'u
\fBncs\-make\-package \fR [OPTIONS] package\-name
.SH "DESCRIPTION"
.PP
Creates an NCS package of a certain type\&. For NEDs, it creates a netsim directory by default, which means that the package can be used to run simulated devices using ncs\-netsim, i\&.e that ncs\-netsim can be used to run simulation network that simulates devices of this type\&.
.PP
The generated package should be seen as an initial package structure\&. Once generated, it should be manually modified when it needs to be updated\&. Specifically, the package\-meta\-data\&.xml file must be modified with correct meta data\&.
.SH "OPTIONS"
.PP
\fB\-h, \-\-help\fR
.RS 4
Print a short help text and exit\&.
.RE
.PP
\fB\-\-dest\fR Directory
.RS 4
By default the generated package will be written to a directory in current directory with the same name as the provided package name\&. This optional flag writes the package to the \-\-dest provided location\&.
.RE
.PP
\fB\-\-build\fR
.RS 4
Once the package is created, build it too\&.
.RE
.PP
\fB\-\-no\-test\fR
.RS 4
Do not generate the test directory\&.
.RE
.PP
\fB\-\-netconf\-ned\fR DIR
.RS 4
Create a NETCONF NED package, using the device YANG files in DIR\&.
.RE
.PP
\fB\-\-generic\-ned\-skeleton\fR
.RS 4
Generate a skeleton package for a generic NED\&. This is a good starting point whenever we wish to develop a new generic NED\&.
.RE
.PP
\fB\-\-snmp\-ned\fR DIR
.RS 4
Create a SNMP NED package, using the device MIB files in DIR\&.
.RE
.PP
\fB\-\-lsa\-netconf\-ned \fRDIR
.RS 4
Create a NETCONF NED package for LSA, when the device is another NCS (the lower ncs), using the device YANG files in DIR\&. The NED is compiled with the ned\-id
\fItailf\-ncs\-ned:lsa\-netconf\fR\&.
.sp
If the lower NCS is running a different version of NCS than the upper NCS or if the YANG files in DIR contains references to configuration data in the ncs namespace, use the option
\fB\-\-lsa\-lower\-nso\fR\&.
.RE
.PP
\fB\-\-service\-skeleton\fR java | java\-and\-template | python | python\-and\-template | template
.RS 4
Generate a skeleton package for a simple RFS service, either implemented by Java code, Python code, based on a template, or a combination of them\&.
.RE
.PP
\fB\-\-data\-provider\-skeleton\fR
.RS 4
Generate a skeleton package for a simple data provider\&.
.RE
.PP
\fB\-\-erlang\-skeleton\fR
.RS 4
Generate a skeleton for an Erlang package\&.
.RE
.PP
\fB\-\-no\-fail\-on\-warnings\fR
.RS 4
By default ncs\-make\-package will create packages which will fail when encountering warnings in YANG or MIB files\&. This is desired and warnings should be corrected\&. This option is for legacy reasons, before the generated packages where not that strict\&.
.RE
.PP
\fB\-\-nano\-service\-skeleton\fR java | java\-and\-template | python | python\-and\-template | template
.RS 4
Generate a nano skeleton package for a simple service with nano plan, either implemented by Java code with template or Python code with template, or on a template\&. The options java and java\-and\-template, python and python\-and\-template result in the same skeleton creation\&.
.RE
.SH "SERVICE SPECIFIC OPTIONS"
.PP
\fB\-\-augment \fRPATH
.RS 4
Augment the generated service model under PATH, e\&.g\&.
\fI/ncs:services\fR\&.
.RE
.PP
\fB\-\-root\-container \fRNAME
.RS 4
Put the generated service model in a container named NAME\&.
.RE
.SH "JAVA SPECIFIC OPTIONS"
.PP
\fB\-\-java\-package \fRNAME
.RS 4
NAME is the Java package name for the Java classes generated from all device YANG modules\&. These classes can be used by Java code implementing for example services\&.
.RE
.SH "NED SPECIFIC OPTIONS"
.PP
\fB\-\-no\-netsim\fR
.RS 4
Do not generate a netsim directory\&. This means the package cannot be used by ncs\-netsim\&.
.RE
.PP
\fB\-\-no\-java\fR
.RS 4
Do not generate any Java classes from the device YANG modules\&.
.RE
.PP
\fB\-\-no\-python\fR
.RS 4
Do not generate any Python classes from the device YANG modules\&.
.RE
.PP
\fB\-\-no\-template\fR
.RS 4
Do not generate any device templates from the device YANG modules\&.
.RE
.PP
\fB\-\-vendor\fR VENDOR
.RS 4
The vendor element in the package file\&.
.RE
.PP
\fB\-\-package\-version\fR VERSION
.RS 4
The package\-version element in the package file\&.
.RE
.SH "NETCONF NED SPECIFIC OPTIONS"
.PP
\fB\-\-pyang\-sanitize\fR
.RS 4
Sanitize the device\*(Aqs YANG files\&. This will invoke pyang \-\-sanitize on the device YANG files\&.
.RE
.PP
\fB\-\-confd\-netsim\-db\-mode \fR candidate | startup | running\-only
.RS 4
Control which datastore netsim should use when simulating the device\&. The candidate option here is default and it includes the setting writable\-through\-candidate
.RE
.PP
\fB\-\-ncs\-depend\-package \fRDIR
.RS 4
If the yang code in a package depends on the yang code in another NCS package we need to use this flag\&. An example would be if a device model augments YANG code which is contained in another NCS package\&. The arg, the package we depend on, shall be relative the src directory to where the package is built\&.
.RE
.SH "LSA NETCONF NED SPECIFIC OPTIONS"
.PP
\fB\-\-lsa\-lower\-nso \fRcisco\-nso\-nc\-X\&.Y | DIR
.RS 4
Specifies the package name for the lower NCS, the package is in
$NCS_DIR/packages/lsa, or a path to the package directory containing the cisco\-nso\-nc package for the lower node\&.
.sp
The NED will be compiled with the ned\-id of the package,
\fIcisco\-nso\-nc\-X\&.Y:cisco\-nso\-nc\-X\&.Y\fR\&.
.RE
.SH "PYTHON SPECIFIC OPTIONS"
.PP
\fB\-\-component\-class \fRmodule\&.Class
.RS 4
This optional parameter specifies the
\fIpython\-class\-name\fR
of the generated
package\-meta\-data\&.xml
file\&. It must be in format
\fImodule\&.Class\fR\&. Default value is
\fImain\&.Main\fR\&.
.RE
.PP
\fB\-\-action\-example \fR
.RS 4
This optional parameter will produce an example of an Action\&.
.RE
.PP
\fB\-\-subscriber\-example \fR
.RS 4
This optional parameter will produce an example of a CDB subscriber\&.
.RE
.SH "ERLANG SPECIFIC OPTIONS"
.PP
\fB\-\-erlang\-application\-name \fRNAME
.RS 4
Add a skeleton for an Erlang application\&. Invoke the script multiple times to add multiple applications\&.
.RE
.SH "EXAMPLES"
.PP
Generate a NETCONF NED package given a set of YANG files from a fictious acme router device\&.
.sp
.if n \{\
.RS 4
.\}
.nf
  $ ncs\-make\-package   \-\-netconf\-ned /path/to/yangfiles acme
  $ cd acme/src; make all
      
.fi
.if n \{\
.RE
.\}
.PP
This package can now be used by ncs\-netsim to create simulation networks with simulated acme routers\&.
.SH "AUTHOR"
.br
.RS 4
Author.
.RE
.SH "COPYRIGHT"
.br
Copyright \(co 2021, 2022, 2023, 2024 Cisco Systems, Inc. All rights reserved.
.br
