Package Authentication
~~~~~~~~~~~~~~~~~~~~~~

This example demonstrates how to configure Package Authentication to
authenticate RESTCONF with a JSON Web Token (JWT). For further details
see RFC 7519 JSON Web Token.

The example package nso-example-jwt-auth requires the PyJWT package to
decode the JWT received from NSO during authentication, a simple way to
fulfill this requirement is to create a Python virtualenv and start NSO
within this virtualenv.

When NSO is configured to use Package Authentication, it is possible to
supply a JWT as a bearer token to RESTCONF in order to authenticate.


Running the Example
~~~~~~~~~~~~~~~~~~~

  1. Build the necessary files, activate the Python virtualenv, and
     start NSO by typing

         $ make clean all
         $ . pyvenv/bin/activate
         (pyvenv) $ make start

  2. Start the CLI and reload packages

         $ ncs_cli -u admin -g admin -C
         # packages reload

  3. Configure the nso-example-jwt-auth model

         # config
         # jwt-auth algorithm HS256
         # jwt-auth secret my-secret
         # commit

  4. Inspect the contents of the JWT in the example. (Note the addition
     of equals character enabling base64 decoding of the JSON claims
     payload.)

         $ sed 's/.*\.\(.*\)\.*/\1=/' < jwt | base64 -d \
           | python -m json.tool

     For brevity, jwt.txt contains the base64 decoded JSON claims
     payload.

  5. Pass the JWT as a bearer token to RESTCONF in the Authorization
     header

         $ curl -is -H "Authorization: Bearer $(cat jwt)" \
                http://localhost:8080/restconf

  6. Check the package log and audit log for debug and authentication
     information

         $ tail logs/ncs-python-jwt-auth.log

         $ tail logs/audit.log
