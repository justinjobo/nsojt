Sending log data to external application
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This example demonstrates how to use an external application to filter
NED trace log data. The external logging functionality is intended as
a development feature.

This example use a python script to filter CLI trace data, however,
the feature is language agnostic and works by reading the log data
from standard input and then doing the required processing.


Running the Example
~~~~~~~~~~~~~~~~~~~

  1. Build the necessary files and start NSO by typing

         $ make clean all start

  2. Sync devices and enable trace logging

         $ ncs_cli -u admin -g admin -C
         # devices sync-from
         # config
         # devices device ios* trace pretty
         # devices device ios1 trace-output external
         # commit

  3. Set filtered field on device

         # devices device ios* config ios:banner motd "secret motd"
         # commit

  4. Compare the trace log with the filtered trace log and notice
     that the secret from the motd content is replaced with ********:

         $ grep '^banner motd' logs/ned-cisco-ios-cli-3.8-ios0.trace
         banner motd "secret motd"
         $ grep ned-cisco-ios-cli-3.8-ios1_filtered.trace
         banner motd "******** motd"
