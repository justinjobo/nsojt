{"version":3,"sources":["packages/core/utils/key.js","packages/core/utils/opfs.js","packages/core/utils/platform.js","packages/core/utils/functional.js","packages/core/utils/request.js","packages/core/keypath/kp-parser.js","packages/core/utils/array.js","packages/core/utils/path.js","packages/core/utils/worker.js","node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs","node_modules/@sqlite.org/sqlite-wasm/index.mjs","src/Compliance/compliance.worker.js"],"sourcesContent":["// NOTE(dbildstr): single quote should be quoted, due to it being treated\n// as the beginning of a quoted string in jsonrpc calls otherwise\nconst quoteChars = [\n    '\"',\n    ' ',\n    '}',\n    '\\'',\n    '\\\\',\n    '\\t',\n    '[',\n];\n\nfunction quoteKey(key, forceQuotes = false) {\n    if (Number.isFinite(key)) {\n        return key;\n    }\n    let needQuote = forceQuotes;\n    const escapeChars = [\n        '\\\\',\n        '\"',\n    ];\n    const str = key.split('').reduce((buf, char) => {\n        if (quoteChars.includes(char)) {\n            needQuote = true;\n        }\n        if (escapeChars.includes(char)) {\n            buf.push('\\\\');\n        }\n        buf.push(char);\n        return buf;\n    }, []).join('');\n    if (needQuote || str === '') {\n        return `\"${str}\"`;\n    }\n    return str;\n}\n\nmodule.exports = {\n    quoteKey,\n};\n","export const fileExists = async ({\n    opfsDir,\n    filename,\n}) => {\n    try {\n        const fileHandle = await opfsDir.getFileHandle(filename);\n        return fileHandle?.kind === 'file';\n    } catch (e) {\n        if (e?.name === 'NotFoundError') {\n            return false;\n        }\n        throw e;\n    }\n};\n\nexport const downloadFile = async ({\n    opfsRoot,\n    destinationFile,\n    location,\n    funcs: {\n        fetchFn = fetch,\n    } = {},\n}) => {\n    const response = await fetchFn(location);\n    const arrayBuffer = await response.arrayBuffer();\n    const fileHandle = await opfsRoot.getFileHandle(destinationFile, { create: true });\n    const syncAccessHandle = await fileHandle.createSyncAccessHandle();\n    const dataview = new DataView(arrayBuffer);\n    syncAccessHandle.write(dataview);\n    syncAccessHandle.flush();\n    syncAccessHandle.close();\n};\n\nexport const getFile = async ({\n    location,\n    filename,\n    forceReload,\n    funcs: {\n        navigator_ = navigator,\n        fileExists_ = fileExists,\n        downloadFile_ = downloadFile,\n    } = {},\n}) => {\n    const opfsRoot = await navigator_.storage.getDirectory();\n    const exists = await fileExists_({ opfsDir: opfsRoot, filename });\n    const shouldFetch = !exists || forceReload;\n    if (shouldFetch) {\n        await downloadFile_({ opfsRoot, destinationFile: filename, location });\n    }\n    return { filename, isCached: !shouldFetch };\n};\n\nexport const removeEntry = async ({\n    filename,\n    funcs: {\n        navigator_ = navigator,\n    } = {},\n} = {}) => {\n    if (!navigator_.storage) {\n        return [];\n    }\n    const opfsRoot = await navigator_.storage.getDirectory();\n    const entries = await opfsRoot.entries();\n    const removed = [];\n    for await (const [, value] of entries) {\n        if (value.name === filename) {\n            await opfsRoot.removeEntry(value.name);\n            removed.push(value.name);\n        }\n    }\n    return removed;\n};\n\nexport const removeAllEntries = async ({\n    funcs: {\n        navigator_ = navigator,\n    } = {},\n} = {}) => {\n    if (!navigator_.storage) {\n        return [];\n    }\n    const opfsRoot = await navigator_.storage.getDirectory();\n    const entries = await opfsRoot.entries();\n    const removed = [];\n    for await (const [, value] of entries) {\n        await opfsRoot.removeEntry(value.name);\n        removed.push(value.name);\n    }\n    return removed;\n};\n","\nexport const EMPTYOBJECT = Object.freeze({});\nexport const getProcessObject = () => {\n    try {\n        return process;\n    } catch (e) {\n        return undefined;\n    }\n};\n\nexport const isNodeEnv = ({ getProcess = getProcessObject } = {}) => {\n    const proc = getProcess();\n    const obj = typeof proc !== 'undefined' ? proc : 0;\n    return Object.prototype.toString.call(obj) === '[object process]';\n};\n\n// NOTE(dbildstr): these are set by webpack\nconst environment = Object.freeze({\n    NODE_ENV: process.env.NODE_ENV,\n    WEBUI_TRACING: process.env.WEBUI_TRACING,\n});\n\nexport const getEnvironment = () => environment;\n\nexport const envHas = (key, value, { getEnv = getEnvironment } = {}) => {\n    const env = getEnv();\n    if (!(key in env)) {\n        return false;\n    }\n    return env[key] === value;\n};\n\nexport const isDevEnv = ({ hasEnv = envHas } = {}) =>\n    hasEnv('NODE_ENV', 'development');\nexport const isProdEnv = ({ hasEnv = envHas } = {}) =>\n    hasEnv('NODE_ENV', 'production');\n\nexport {\n    environment as _environment,\n};\n","import { isProdEnv } from './platform';\nimport { isPromise } from './promise';\nimport { isNonEmptyString } from './string';\n\nexport const isFunction = func => typeof func === 'function';\n\nexport const defaultTo = (defaultValue, value) => (\n    (value == null || Number.isNaN(value)) ? defaultValue : value\n);\nexport const createGuarded = (fn, defaultValue) => v => ((v === undefined) ? defaultValue : fn(v));\n\nexport const identity = id => id;\n\nexport const compose = (...fns) => fns.reduce((f, g) => (...args) => {\n    const resg = g(...args);\n    if (isPromise(resg)) return resg.then(r => f(r));\n    return f(resg);\n});\nexport const pipe = (...fns) => compose.apply(compose, fns.reverse());\n\nexport const tap = func => (item) => {\n    if (isFunction(func)) func(item);\n    return item;\n};\n\n// eslint-disable-next-line no-console, no-unused-vars\nexport const createLogger = (log = console.log) => tap(i => log('TAP', i));\n\nexport const wrappedValue = (initialValue) => {\n    let val = initialValue;\n    return (newValue) => {\n        if (newValue !== undefined) {\n            val = newValue;\n        }\n        return val;\n    };\n};\n\nexport const invariant = (condition, message, isProductionMode = isProdEnv) => {\n    if (condition) {\n        return;\n    }\n    const prefix = 'Invariant failed';\n    if (!isNonEmptyString(message) || isProductionMode()) {\n        throw new Error(prefix);\n    }\n    throw new Error(`${prefix}: ${message}`);\n};\n\nexport const warning = (condition, message, {\n    isProductionMode = isProdEnv,\n    logger = console,\n} = {}) => {\n    if (isProductionMode()) {\n        return;\n    }\n\n    if (condition) {\n        return;\n    }\n\n    const text = `Warning: ${message}`;\n    if (typeof logger !== 'undefined') {\n        logger.warn(text);\n    }\n};\n","/**\n * @typedef WrappedRequest\n * @prop {boolean} aborted\n * @prop {AbortSignal} signal\n * @prop {AbortSignal=} requestSignal\n * @prop {AbortController} ctrl\n * @prop {function} abort\n * @prop {function} clear\n */\n\n/**\n * @typedef RequestOptions\n * @prop {AbortSignal=} signal\n */\n\n/**\n * @callback FetchRequest\n * @param {string} url\n * @param {RequestOptions} options\n */\n\nlet requestsBlocked = false;\n\n// list of pending fetch requests\nconst requests = new Set();\n\n// list of fetch requests that are queued up while we block new requests\nconst requestQueue = new Set();\n\n/**\n * Queues a request, wrapped in an AbortController, that will be\n * aborted when are blocked before the request is complete,\n * for example during pagehide events.\n *\n * @param {WrappedRequest} request\n */\nexport const addRequest = (request) => {\n    requests.add(request);\n};\n\n/**\n * Queues a request, wrapped in an AbortController, that will be\n * aborted when requests are blocked before the request is complete,\n * for example during pagehide events.\n *\n * @param {WrappedRequest} request\n */\nexport const removeRequest = (request) => {\n    requests.delete(request);\n};\nexport const getRequests = () => Array.from(requests);\nexport const clearRequests = () => requests.clear();\n\n/**\n * Aborts initiated fetch requests.\n */\nexport const abortRequests = () => {\n    const reqs = Array.from(requests);\n    requests.clear();\n    for (const req of reqs) {\n        try {\n            req.abort();\n        } catch (error) {\n            // Ignore DOMExceptions and AbortErrors, otherwise rethrow it.\n            if (!(error instanceof window.DOMException)\n                || error.name !== 'AbortError'\n            ) {\n                throw error;\n            }\n        }\n    }\n};\n\n/**\n * Returns if fetch requests are currently blocked or not\n */\nexport const requestsAreBlocked = () => requestsBlocked === true;\n\nexport const resetRequestState = () => { requestsBlocked = false; };\n\nexport function allowRequests() {\n    requestsBlocked = false;\n\n    const reqs = Array.from(requestQueue);\n    requestQueue.clear();\n\n    for (const req of reqs) {\n        req();\n    }\n}\n\n/**\n * Block requsts and optionally abort pending requests.\n *\n * @param {boolean} abort\n */\nexport function blockRequests(abort = false) {\n    requestsBlocked = true;\n    if (abort) {\n        abortRequests();\n    }\n}\n\n/**\n * Queues a callback that is called when requests are no longed blocked\n * @param {function} callback - function to call\n */\nexport function addPendingRequest(callback) {\n    requestQueue.add(callback);\n}\n\n/**\n * Returns a copy of the pending request queu\n * @returns {function[]} - array of pending request functions\n */\nexport const getPendingRequests = () => Array.from(requestQueue);\n\n/**\n * Clears the current queue of pending requests\n */\nexport const clearPendingRequests = () => requestQueue.clear();\n\n/**\n *\n * @param {FetchRequest} fetcher\n * @param {string} url\n * @param {RequestOptions} options\n */\nfunction requeueRequest(fetcher, url, options) {\n    return new Promise((res) => { addPendingRequest(res); })\n        .then(() => fetcher(url, options));\n}\n\n/**\n * Creates an AbortController and AbortSignal that can be used by fetch\n * requests. If an AbortSignal is passed in, the WrappedRequest will\n * also abort any pending requests where it is used.\n *\n * @param {AbortSignal=} requestSignal (optional) signal from fetchRequest call which will\n *                        be wrapped by the WrappedRequest\n * @returns {WrappedRequest}\n */\nexport const wrapRequest = (requestSignal) => {\n    const ctrl = new AbortController();\n    const signal = ctrl.signal;\n\n    function onAbort() {\n        if (!requestsBlocked) {\n            ctrl.abort();\n        }\n    }\n\n    const wrappedRequest = {\n        aborted: false,\n        ctrl,\n        signal,\n        requestSignal,\n    };\n\n    function clear() {\n        removeRequest(wrappedRequest);\n        if (requestSignal && requestSignal.removeEventListener) {\n            requestSignal.removeEventListener('abort', onAbort);\n        }\n    }\n\n    function abort() {\n        clear();\n        try {\n            wrappedRequest.aborted = true;\n            ctrl.abort();\n        } catch {\n            // catch block empty on purpose\n        }\n    }\n\n    if (requestSignal && requestSignal.addEventListener) {\n        if (requestSignal.aborted) {\n            ctrl.abort();\n        } else {\n            requestSignal.addEventListener('abort', onAbort);\n        }\n    }\n    wrappedRequest.abort = abort;\n    wrappedRequest.clear = clear;\n    addRequest(wrappedRequest);\n    return wrappedRequest;\n};\n\nconst baseFetchFunc = (url, options) => {\n    const func = (\n        (typeof window !== 'undefined' ? window.fetch : undefined)\n        || (typeof fetch !== 'undefined' ? fetch : undefined)\n    );\n    return func(url, options);\n};\n\nconst EMPTY_OBJECT = Object.freeze({});\n\n/**\n * Wraps the default fetch function to abort pending requests on navigation\n * and requeue blocked/aborted requests.\n *\n * @param {string} url\n * @param {RequestOptions} options\n *\n * @returns {Promise<Response>}\n */\nexport function fetchRequest(url, options) {\n    const { signal } = options || EMPTY_OBJECT;\n    if (requestsAreBlocked()) {\n        return requeueRequest(fetchRequest, url, options);\n    }\n    const abortableRequest = wrapRequest(signal);\n    return baseFetchFunc(\n        url,\n        {\n            ...options,\n            signal: abortableRequest.signal,\n        },\n    ).then(\n        (res) => {\n            abortableRequest.clear();\n            return res;\n        },\n        (error) => {\n            if (requestsAreBlocked() && abortableRequest.aborted) {\n                // NOTE: retry the request when we stop blocking fetch requests\n                return requeueRequest(fetchRequest, url, options);\n            }\n            abortableRequest.clear();\n            throw error;\n        },\n    );\n}\n","import {\n    quoteKey,\n} from '../utils/key';\nimport { isNonEmptyArray } from '../utils/array';\nimport {\n    isNonEmptyString,\n    isString,\n} from '../utils/string';\nimport { parseKeypath } from './keypath-parser';\n\nexport function isListEntry(path) {\n    // eslint-disable-next-line no-use-before-define\n    return pathToObjects(path).pop().listEntry === true;\n}\n\nexport function pathWithoutKeys(path) {\n    if (!path) return path;\n    // eslint-disable-next-line no-use-before-define\n    return pathToObjects(path, { ignoreListEntries: true }).pop().path;\n}\n\nexport const isListKeyPath = path =>\n    // eslint-disable-next-line no-use-before-define\n    !!pathToObjects(path).some(o => isNonEmptyArray(o.keys));\n\nexport function pathWithoutKeyInstances(path) {\n    // eslint-disable-next-line no-use-before-define\n    return pathToObjects(path, { ignoreListKeys: true }).pop().path;\n}\n\nconst listSchemaPathRE = /.*\\{}/;\n\nexport const isListSchemaPath = path => listSchemaPathRE.test(path);\n\nconst splitKeyNS = (part) => {\n    const [ns, key] = part.split(':');\n    return key === undefined ? [undefined, ns] : [ns, key];\n};\n\nconst namespaceSchemaPath = (schemaPath, rootSchemaPath) => {\n    const schemaParts = schemaPath.split('/');\n    const rootSchemaParts = rootSchemaPath.split('/');\n    const newPath = [];\n    const len = schemaParts.length < rootSchemaParts.length\n        ? schemaParts.length\n        : rootSchemaParts.length;\n\n    for (let i = 0; i < len; i += 1) {\n        // eslint-disable-next-line no-unused-vars\n        const [schemaNS] = splitKeyNS(schemaParts[i]);\n        // eslint-disable-next-line no-unused-vars\n        const [, keypathKey] = splitKeyNS(rootSchemaParts[i]);\n        newPath.push(schemaNS ? `${schemaNS}:${keypathKey}` : keypathKey);\n    }\n    return newPath.join('/');\n};\n\nexport const schemaPathToKeypath = (schemaPath, rootKeypath) => {\n    if (isListKeyPath(schemaPath)) return schemaPath;\n\n    let rootSchemaPath = pathWithoutKeys(rootKeypath);\n    const orgRootSchemaPath = rootSchemaPath;\n\n    if (rootKeypath.endsWith('}')) {\n        rootSchemaPath = `${rootSchemaPath}{}`;\n    }\n    if (schemaPath === rootSchemaPath) {\n        return rootKeypath;\n    }\n\n    if (isListSchemaPath(schemaPath)) {\n        return pathWithoutKeys(schemaPath).replace(\n            namespaceSchemaPath(schemaPath, orgRootSchemaPath),\n            rootKeypath,\n        );\n    }\n\n    return schemaPath.replace(namespaceSchemaPath(schemaPath, orgRootSchemaPath), rootKeypath);\n};\n\nfunction getLastToken(tokens) {\n    if (!tokens) return undefined;\n    if (tokens.length === 0) return undefined;\n    return tokens[tokens.length - 1];\n}\n\nfunction validLastToken(token) {\n    switch (token.type) {\n    case ':':\n        return false;\n    case '{':\n        return false;\n    case 'key':\n        return false;\n    default:\n        return true;\n    }\n}\n\nfunction parse(path, options) {\n    let result;\n    try {\n        const tokens = parseKeypath(path, options);\n        const lastToken = getLastToken(tokens);\n        if (!validLastToken(lastToken)) {\n            const lastTokenError = new Error();\n            lastTokenError.name = 'SyntaxError';\n            lastTokenError.offset = lastToken.offset;\n            lastTokenError.tokens = tokens;\n            throw lastTokenError;\n        }\n\n        result = {\n            status: 'ok',\n            tokens,\n        };\n    } catch (e) {\n        result = {\n            status: e.name,\n            message: e.message,\n            errorOffset: e.offset,\n            tokens: e.tokens || [e.name],\n        };\n    }\n    return result;\n}\n\nfunction getNS(parent, current) {\n    if (current.ns) {\n        return current.ns;\n    }\n\n    if (parent && parent.ns) {\n        return parent.ns;\n    }\n\n    return current.ns;\n}\n\nfunction getRelativeName(parent, current) {\n    if (!parent && !current.ns) {\n        return current.name;\n    }\n\n    if (!parent && current.ns) {\n        return `${current.ns}:${current.name}`;\n    }\n\n    if (parent.ns !== current.ns) {\n        return `${current.ns}:${current.name}`;\n    }\n\n    return current.name;\n}\n\nfunction getPath(parent, current) {\n    if (!parent && !current.ns) {\n        return `/${current.name}`;\n    }\n\n    if (!parent && current.ns) {\n        return `/${current.ns}:${current.name}`;\n    }\n\n    if (parent.ns !== current.ns) {\n        return `${parent.path}/${current.ns}:${current.name}`;\n    }\n    return `${parent.path}/${current.name}`;\n}\n\nfunction getUri(parent, current) {\n    if (!parent && !current.ns) {\n        return `/${current.name}`;\n    }\n\n    if (!parent && current.ns) {\n        return `/${current.ns}:${current.name}`;\n    }\n\n    if (parent.ns !== current.ns) {\n        return `${parent.uri}/${current.ns}:${current.name}`;\n    }\n    return `${parent.uri}/${current.name}`;\n}\n\nfunction getCurrent(acc) {\n    return acc.slice(-1)[0];\n}\n\nfunction getParent(acc) {\n    if (acc.length < 2) {\n        return undefined;\n    }\n    return acc.slice(-2)[0];\n}\n\nconst populateUniqueText = (j, res, allTokens) => {\n    const results = res;\n    for (let i = 0; i < allTokens.length; i += 1) {\n        if (!results[i].unique && j < allTokens[i].length) {\n            results[i].index = j;\n            results[i].text = allTokens[i][j].text + results[i].text;\n        }\n    }\n};\n\nconst checkUniqueness = (res) => {\n    const results = res;\n    let isAllUnique = true;\n    for (let i = 0; i < results.length; i += 1) {\n        results[i].unique = true;\n        for (let k = 0; k < results.length; k += 1) {\n            if (i !== k && results[i].text === results[k].text) {\n                isAllUnique = false;\n                results[i].unique = isAllUnique;\n                break;\n            }\n        }\n    }\n\n    return isAllUnique;\n};\n\nexport const getTruncatedPaths = (paths, maxTokens = 20) => {\n    const allTokens = paths.map(parse)\n        .map(result => (result.status !== 'ok' ? [{ text: '' }] : result.tokens))\n        .map(t => t.reverse());\n\n    const results = paths.map(() => ({ text: '' }));\n    let isAllUnique = false;\n    for (let j = 0; !isAllUnique && j < maxTokens; j += 1) {\n        populateUniqueText(j, results, allTokens);\n\n        isAllUnique = checkUniqueness(results);\n    }\n\n    const trunks = results.map((r, i) => {\n        let pad = '';\n        for (let j = r.index + 1; j < allTokens[i].length && allTokens[i][j].text !== '/'; j += 1) {\n            pad = allTokens[i][j].text + pad;\n        }\n        return pad + r.text;\n    });\n\n    return paths.reduce((acc, p, i) => ({ ...acc, [p]: trunks[i] }), {});\n};\n\nexport function pathToObjects(path, options) {\n    const parsed = parse(path, { options });\n    if (parsed.status === 'SyntaxError') throw new Error(parsed.message);\n    return parsed.tokens.reduce((acc, cur) => {\n        const current = getCurrent(acc);\n        const parent = getParent(acc);\n        switch (cur.type) {\n        case '/':\n            acc.push({ path: '' });\n            break;\n        case 'name':\n            current.name = cur.text;\n            current.ns = getNS(parent, current);\n            current.parentPath = parent ? parent.path : '';\n            current.parentUri = parent ? parent.uri : '';\n            current.path = getPath(parent, current);\n            current.uri = getUri(parent, current);\n            current.type = 'name';\n            current.relativeName = getRelativeName(parent, current);\n            acc.splice(-1, 1, current);\n            break;\n        case '{':\n            acc.push({ path: '', keys: [] });\n            break;\n        case 'key':\n            current.keys.push(cur.key);\n            current.type = 'key';\n            break;\n        case '}':\n            current.ns = getNS(parent, current);\n            current.parentPath = parent.path;\n            current.parentUri = parent.uri;\n            current.name = current.keys.map(k => quoteKey(k)).join(' ');\n            current.relativeName = `${parent.relativeName}{${current.name}}`;\n            current.path = `${parent.path}{${current.name}}`;\n            current.uri = `${parent.uri}{${encodeURIComponent(current.name)}}`;\n            current.listEntry = true;\n            parent.list = true;\n            acc.splice(-1, 1, current);\n            break;\n        case 'ns':\n            current.ns = cur.text;\n            break;\n        default:\n            break;\n        }\n        return acc;\n    }, []);\n}\n\nexport function namespaceIsNeeded(parentPath, qname) {\n    const parent = pathToObjects(parentPath).pop();\n    const ns = (qname || '').split(':')[0];\n    return (ns && parent.ns !== ns);\n}\n\nexport function getChildName(parentPath, name, qname) {\n    return namespaceIsNeeded(parentPath, qname) ?\n        qname : name;\n}\n\nexport function pathConcat(parentPath, name, qname) {\n    const childName = getChildName(parentPath, name, qname);\n    return `${parentPath}/${childName}`;\n}\n\nexport const getListPath = (keypath, basepath) => {\n    if (!isNonEmptyString(keypath) || !keypath.startsWith('/')) {\n        return null;\n    }\n    if (!isNonEmptyString(basepath) || !basepath.startsWith('/')) {\n        return null;\n    }\n    const o1 = pathToObjects(keypath);\n    const o2 = pathToObjects(basepath);\n    const shortest = o1.length > o2.length ? o2.length : o1.length;\n\n    let i = 0;\n    while (i < shortest) {\n        if (o1[i].name !== o2[i].name) {\n            break;\n        }\n        i += 1;\n    }\n    if (i === o1.length) return null;\n\n    const listNode = o1.slice(i - 1).find(kp => kp.list === true);\n    return listNode ? listNode.path : null;\n};\n\nexport const findCommonAncestor = (keypath, schemapath) => {\n    const keypathObjects = pathToObjects(keypath);\n    const o1 = keypathObjects.filter(o => o.type !== 'key');\n    const o2 = pathToObjects(schemapath);\n\n    let shortest = o1.length;\n\n    if (o1.length > o2.length) {\n        shortest = o2.length;\n    }\n\n    let i = 0;\n    const objects = [];\n\n    // Iterate both paths without keys\n    while (i < shortest) {\n        if (o1[i].name === o2[i].name) {\n            objects.push(o1[i]);\n            i += 1;\n        } else {\n            break;\n        }\n    }\n    if (objects.length < 1) return undefined;\n\n    // Check if found common path has a key as a child and use it instead\n    let path = objects[objects.length - 1].path;\n    const child = keypathObjects.find(o => o.parentPath === path);\n    if (child && child.type === 'key') {\n        path = child.path;\n    }\n    return path;\n};\n\nexport const getNodePathWithKeys = (keypath, nodepath) => {\n    const keyobjects = pathToObjects(keypath);\n    const nodepobjects = pathToObjects(nodepath);\n    let lastIndex = -1;\n    return nodepobjects.reduce((acc, nodeObject) => {\n        acc.push(nodeObject);\n        const foundIndex = keyobjects.findIndex((ko, j) =>\n            (lastIndex < j && ko.name === nodeObject.name && ko.ns === nodeObject.ns));\n\n        if (foundIndex === -1) return acc;\n\n        lastIndex = foundIndex;\n\n        if (keyobjects[foundIndex].list) {\n            lastIndex += 1;\n            acc.push(keyobjects[lastIndex]);\n        }\n        return acc;\n    }, []).reduce((acc, o) => {\n        if (o.type === 'key') {\n            return `${acc}{${o.keys.join(' ')}}`;\n        }\n        const prefix = o.ns ? `${o.ns}:` : '';\n        return `${acc}/${prefix}${o.name}`;\n    }, '');\n};\n\nexport const stripItemsFromPath = (path, noOfItems) => {\n    const objects = pathToObjects(path).slice(0, -noOfItems);\n    if (objects.length === 0) return '/';\n    return objects[objects.length - 1].path;\n};\n\nexport const getPrefixFromPath = (path) => {\n    if (!path) return undefined;\n    const objs = pathToObjects(path);\n    return objs.slice(-1)[0].ns;\n};\n\nexport const getNameRelativeToParent = parent => (child) => {\n    const prefix = isString(parent) ? getPrefixFromPath(parent) : parent.ns;\n    const { name, qname } = (child.data || child);\n    return qname.startsWith(`${prefix}:`) ? name : qname;\n};\n\nexport const getLastListEntryKeypath = (keypath) => {\n    const keyEnd = keypath.lastIndexOf('}');\n    if (keyEnd > 0) return keypath.substring(0, keyEnd + 1);\n\n    return keypath;\n};\n\nexport {\n    getLastToken as _getLastToken,\n    parse as _parse,\n    validLastToken as _validLastToken,\n};\n","import { isDeepEqual } from './compare';\n\n// const source = {\n//     first: 'foo',\n//     second: 'bar',\n//     third: 'foo',\n// };\n//\n// invert(source);\n// => { foo: ['first', 'third'], bar: ['second'] }\nexport const invert = obj => (\n    Object.keys(obj).reduce((acc, key) => (\n        { ...acc, [obj[key]]: [...(acc[obj[key]] || []), key] }\n    ), {})\n);\n\n\n/**\n * Returns a new flattend list. Depth first.\n * @param {Array} list The array to .\n * @sig [a] -> [b]\n * @return {Array} The flattened list.\n * @example\n *\n *  flatten([1, 2, [3, 4], 5, [6, [7, [8, 9, 10]]]]);\n *  // => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n */\nexport const flatten = arr => (\n    arr.reduce((acc, cur) => {\n        if (Array.isArray(cur)) {\n            return acc.concat(flatten(cur));\n        }\n        return acc.concat(cur);\n    }, [])\n);\n\n/**\n * Returns a list with values from (inclusive) to to (exclusive)\n * @param {Number} from The first number in the return list\n * @param {Number} to One higher than the last number in the return list\n * @sig number -> number -> [number]\n * @return {Array} Return list\n * @example\n *\n *  range(1, 4)\n *  // => [1, 2, 3]\n */\nexport const range = (from, to) => {\n    const res = [];\n    let n = from;\n    while (n < to) {\n        res.push(n);\n        n += 1;\n    }\n    return res;\n};\n\n/**\n * Returns a list with values from (inclusive) to to (inclusive)\n * @param {Number} from The first number in the return list\n * @param {Number} to The last number in the return list\n * @sig number -> number -> [number]\n * @return {Array} Return list\n * @example\n *\n *  range(1, 4)\n *  // => [1, 2, 3, 4]\n */\nexport const range1 = (from, to) => range(from, to + 1);\n\nexport const isEqual = (a, b) => {\n    if (Array.isArray(a) === false || Array.isArray(b) === false) return false;\n    if (a.length !== b.length) return false;\n    for (let i = 0; i < a.length; i += 1) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n};\n\nexport const intersect = (a, b) => a.filter(x => b.includes(x));\n\nexport const difference = (a, b) => a.filter(x => !b.includes(x));\n\nexport const union = (a, b) => [...new Set([...a, ...b])];\n\nexport const isEmpty = a => a.length === 0;\n\nexport const isEmptyArray = a => Array.isArray(a) && isEmpty(a);\n\nexport const isNonEmptyArray = a => Array.isArray(a) && !isEmpty(a);\n\nexport const ensureArray = (val) => {\n    if (val === undefined) { return []; }\n    return Array.isArray(val) ? val : [val];\n};\n\nexport const chunk = (array, size) => {\n    if (!size || size <= 0) throw new Error('Size must be an integer bigger than zero');\n\n    const result = [];\n    let ix = 0;\n    while (ix < array.length) {\n        result.push(array.slice(ix, ix + size));\n        ix += size;\n    }\n    return result;\n};\n\nexport const uniq = arr => arr.filter((e, i, a) => i === a.indexOf(e));\n\nexport const nth = (offset, array) => {\n    const ix = offset < 0 ? array.length + offset : offset;\n    return array[ix];\n};\n\nexport const last = array => nth(-1, array);\nexport const first = array => nth(0, array);\nexport const init = array => array && array.slice(0, -1);\n\nexport const zipObject = (keys, values) => (\n    keys.reduce((acc, cur, i) => {\n        const value = values[i] === null ? undefined : values[i];\n        return Object.assign(acc, { [cur]: value });\n    }, {})\n);\n\nexport const indexBy = (prop, array) => (\n    array.reduce((acc, cur) => {\n        acc[cur[prop]] = cur;\n        return acc;\n    }, {})\n);\n\nexport const compact = array => array.filter(i => !!i);\n\nexport const uniqPush = (item, array) => Array.from(new Set(array).add(item));\n\nexport const uniqConcat = (items, array) => Array.from(new Set([...array, ...items]));\n\nexport const zipWithProp = (\n    objectList,\n    onProp = 'title',\n    keyTransform = a => a,\n) => objectList.reduce((acc, cur) => (\n    Object.assign(acc, { [keyTransform(cur[onProp])]: cur })\n), {});\n\nexport const reverse = array => Array.prototype.slice.call(array, 0).reverse();\n\nexport const take = (n, array) => Array.prototype.slice.call(array, 0, n);\nexport const takeLast = (n, array) => {\n    if (n < 1) return [];\n    return Array.prototype.slice.call(array, -n);\n};\n\nexport const startsWith = (prefix, array) => isDeepEqual(take(prefix.length, array), prefix);\n\nexport const isNullArray = value => Array.isArray(value) && value[0] === null;\n","import { getRootPath } from './browser';\nimport { pathToObjects } from '../keypath/kp-parser';\nimport {\n    isNonEmptyString,\n    isString,\n    lstrip,\n    partition,\n    strip,\n} from './string';\nimport { isObject } from './object';\nimport { last } from './array';\n\nexport const getLeafName = (keypath) => {\n    const result = /\\/([^/]*)$/.exec(keypath);\n    return result && result.length > 1 ? result[1] : '';\n};\nexport const getListKeyValue = (keypath) => {\n    const result = /{([^}]+)}$/.exec(keypath);\n    const values = [];\n    if (result && result.length > 1 && typeof result[1] === 'string') {\n        result[1].match(/[^\\s\"']+|\"([^\"]*)\"|'([^']*)'/g).forEach((key) => {\n            values.push(strip(key, '\"'));\n        });\n    }\n    return values;\n};\n\nexport const stripListKeys = path => path.replace(/{([^}]*?)}$/, '');\n\nexport const normalizePath = p => (typeof p === 'string' ? p.replace(/{(.*?)}/g, '') : '');\n\nexport const getParentPath = (keypath) => {\n    const result = /^(.*)\\//.exec(keypath);\n    return result && result.length > 1 && result[1] !== '' && result[1] !== '/' ? result[1] : keypath;\n};\n\nexport const createPathFromLocation = (location) => {\n    if (!isObject(location)) {\n        return location;\n    }\n\n    const { basename, pathname, search, hash } = location;\n    let path = (basename || '') + pathname;\n\n    if (search && search !== '?') {\n        path += search;\n    }\n    if (hash) {\n        path += hash;\n    }\n\n    return path;\n};\n\nexport const isDeviceConfig = path => /^\\/ncs:devices\\/device\\{([^}]+)\\}\\/config.*/.test(path);\nexport const isDevice = path => /^\\/ncs:devices\\/device\\{([^}]+)\\}.*/.test(path);\nexport const isDeviceListItem = path => /^\\/ncs:devices\\/device\\{([^}]+)\\}$/.test(path);\nexport const isDeviceNedId = path => /^\\/ncs:devices\\/device\\{([^}]+)\\}\\/device-type\\/([^/]+)\\/ned-id$/.test(path);\n\nexport const tryGetDeviceName = path => (isDevice(path) ? path.match(/\\{([^}]+)\\}/)[1] : '');\n\nexport const isChildOfPath = (basePath, path) => (\n    path.startsWith(basePath) ||\n    path.startsWith(`${basePath}{`) ||\n    path.startsWith(`${basePath}/`)\n);\n\nexport function getApplicationKey(pathname) {\n    const root = getRootPath();\n    const applicationkey = pathname.replace(`${root}/`, '');\n    const slashIndex = applicationkey.indexOf('/', 1);\n    if (slashIndex === -1) return applicationkey;\n    return applicationkey.substr(0, slashIndex);\n}\n\nexport function formatPath(path) {\n    const root = getRootPath();\n    const cleanPath = typeof path === 'string' ? path : '';\n    return [root, lstrip(cleanPath, '/')].join('/');\n}\n\nexport const escapeKey = (rowKey) => {\n    const paths = pathToObjects(`/${strip(rowKey, '/')}`);\n    const feh = paths[paths.length - 1].uri;\n    return rowKey[0] !== '/' && feh[0] === '/' ? lstrip(feh, '/') : feh;\n};\n\nexport const quotePathKeys = (path) => {\n    const paths = pathToObjects(`/${strip(path, '/')}`);\n    const quotedPath = paths[paths.length - 1].path;\n    return path[0] !== '/' && quotedPath[0] === '/'\n        ? lstrip(quotedPath, '/')\n        : quotedPath;\n};\n\nexport function expandQueryString(search) {\n    const str = isNonEmptyString(search) && search.startsWith('?') ? search.slice(1) : '';\n    return str.split('&').reduce((acc, param) => {\n        const parts = partition('=', param);\n        const name = decodeURIComponent(parts[0]);\n        const value = decodeURIComponent(parts[2]);\n        if (isNonEmptyString(name) && isNonEmptyString(value)) {\n            if (!Array.isArray(acc[name])) {\n                acc[name] = [];\n            }\n            acc[name].push(value);\n        }\n        return acc;\n    }, {});\n}\n\nexport const encodeURIPath = (path) => {\n    if (!path || path === '/') return path;\n    return last(pathToObjects(path)).uri;\n};\n\nexport const toBreadcrumbLink = ({ path }) => {\n    const baseUrl = formatPath(getApplicationKey(window.location.pathname));\n    if (!isNonEmptyString(path)) { return baseUrl; }\n    return `${baseUrl}${encodeURIPath(path)}`;\n};\n\n// queryStrings is object of {somekey:[value, value1]}\nexport const joinQueryString = (queryStrings) => {\n    const params = Object.entries(queryStrings).reduce((acc, [key, arr]) => {\n        const eKey = encodeURIComponent(key);\n        return [\n            ...acc,\n            ...arr.map(value => `${eKey}=${encodeURIComponent(value)}`),\n        ];\n    }, []).join('&');\n    return `?${params}`;\n};\n\nfunction handleParts(acc, part) {\n    if (['', '.'].includes(part)) {\n        return acc;\n    }\n    if (part === '..') {\n        acc.pop();\n        return acc;\n    }\n    acc.push(part);\n    return acc;\n}\n\nexport function cleanPathname(p) {\n    const path = isString(p) ? p : '';\n    const result = path\n        .split('/')\n        .reduce(handleParts, [])\n        .join('/');\n    if (path.startsWith('./')) {\n        return `./${result}`;\n    }\n    if (path.startsWith('/')) {\n        return `/${result}`;\n    }\n    return result;\n}\n\nexport const getFilenameFromUrl = (url) => {\n    const pathname = (new URL(url))?.pathname;\n    return pathname.slice(pathname.lastIndexOf('/') + 1).replaceAll(/[:+]/g, '');\n};\n","/* eslint-env worker */\n/* eslint-disable no-restricted-globals */\n\nimport { isEmptyArray } from './array';\nimport { isFunction } from './functional';\n\nexport const workerMessage = {\n    call: 'CALL',\n    init: 'INIT',\n    initAck: 'INIT_ACK',\n};\n\nexport const callMessage = (method, params, port) => ({\n    method,\n    params,\n    port,\n    type: workerMessage.call,\n});\nexport const initMessage = () => ({\n    type: workerMessage.init,\n});\nexport const initAckMessage = methods => ({\n    methods,\n    type: workerMessage.initAck,\n});\n\nexport const wrapWorkerMethod = (worker, method) => (...params) => {\n    const { port1, port2 } = new MessageChannel();\n    let ok;\n    let fail;\n    port1.addEventListener('message', ({ data }) => {\n        const { error, result } = data;\n        if (error) {\n            fail(error);\n        } else {\n            ok(result);\n        }\n    }, { once: true });\n    port1.start();\n\n    const promise = new Promise((resolve, reject) => {\n        ok = resolve;\n        fail = reject;\n    });\n    worker.postMessage(callMessage(method, params, port2), [port2]);\n    return promise;\n};\n\nexport function wrapWorkerMethods(worker, methods) {\n    return methods.reduce((obj, method) => {\n        // eslint-disable-next-line no-param-reassign\n        obj[method] = wrapWorkerMethod(worker, method);\n        return obj;\n    }, {});\n}\n\nexport function initWorker(workerPath, options) {\n    const worker = new Worker(workerPath, options);\n    worker.addEventListener('message', ({ data }) => {\n        if (data.type === workerMessage.initAck) {\n            worker.methods = wrapWorkerMethods(worker, data.methods);\n        } else {\n            throw new Error(`Unknown message \"${data.type}\"`);\n        }\n    });\n    worker.postMessage(initMessage());\n    return worker;\n}\n\nexport function getMethods(obj) {\n    if (!obj) { return []; }\n    const propertyNames = obj.constructor !== Object\n        ? Object.getOwnPropertyNames(Object.getPrototypeOf(obj))\n        : Object.getOwnPropertyNames(obj);\n\n    return propertyNames.reduce((acc, propertyName) => {\n        if (typeof obj[propertyName] === 'function'\n            && propertyName !== 'constructor'\n        ) {\n            acc.push(propertyName);\n        }\n        return acc;\n    }, []);\n}\n\nexport async function callMethod(exposedObject, { method, params, port }) {\n    try {\n        const workerMethod = exposedObject[method];\n        if (!isFunction(workerMethod)) {\n            throw new TypeError(`Worker method \"${method}\" is not a function`);\n        }\n        const result = await workerMethod.apply(exposedObject, params);\n        port.postMessage({ result });\n    } catch (error) {\n        port.postMessage({ error });\n    }\n    port.close();\n}\n\nexport function expose(exposedObject) {\n    const methods = getMethods(exposedObject);\n    if (isEmptyArray(methods)) {\n        throw Error('Parameter is not an object or the object has no functions to expose');\n    }\n    self.addEventListener('message', ({ data }) => {\n        switch (data.type) {\n        case workerMessage.init:\n            return self.postMessage(initAckMessage(methods));\n        case workerMessage.call:\n            return callMethod(exposedObject, data);\n        default:\n            throw new Error(`Unknown message \"${data.type}\"`);\n        }\n    });\n}\n","/*\n ** LICENSE for the sqlite3 WebAssembly/JavaScript APIs.\n **\n ** This bundle (typically released as sqlite3.js or sqlite3.mjs)\n ** is an amalgamation of JavaScript source code from two projects:\n **\n ** 1) https://emscripten.org: the Emscripten \"glue code\" is covered by\n **    the terms of the MIT license and University of Illinois/NCSA\n **    Open Source License, as described at:\n **\n **    https://emscripten.org/docs/introducing_emscripten/emscripten_license.html\n **\n ** 2) https://sqlite.org: all code and documentation labeled as being\n **    from this source are released under the same terms as the sqlite3\n **    C library:\n **\n ** 2022-10-16\n **\n ** The author disclaims copyright to this source code.  In place of a\n ** legal notice, here is a blessing:\n **\n ** *   May you do good and not evil.\n ** *   May you find forgiveness for yourself and forgive others.\n ** *   May you share freely, never taking more than you give.\n */\n/*\n ** This code was built from sqlite3 version...\n **\n **\n ** Using the Emscripten SDK version 3.1.30.\n */\n\nvar sqlite3InitModule = (() => {\n  var _scriptDir = import.meta.url;\n\n  return function (config) {\n    var sqlite3InitModule = config || {};\n\n    var Module =\n      typeof sqlite3InitModule != 'undefined' ? sqlite3InitModule : {};\n\n    var readyPromiseResolve, readyPromiseReject;\n    Module['ready'] = new Promise(function (resolve, reject) {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n\n    const sqlite3InitModuleState =\n      globalThis.sqlite3InitModuleState ||\n      Object.assign(Object.create(null), {\n        debugModule: () => {},\n      });\n    delete globalThis.sqlite3InitModuleState;\n    sqlite3InitModuleState.debugModule(\n      'globalThis.location =',\n      globalThis.location,\n    );\n\n    const xNameOfInstantiateWasm = false\n      ? 'instantiateWasm'\n      : 'emscripten-bug-17951';\n    Module[xNameOfInstantiateWasm] = function callee(imports, onSuccess) {\n      imports.env.foo = function () {};\n      const uri = Module.locateFile(\n        callee.uri,\n        'undefined' === typeof scriptDirectory ? '' : scriptDirectory,\n      );\n      sqlite3InitModuleState.debugModule('instantiateWasm() uri =', uri);\n      const wfetch = () => fetch(uri, { credentials: 'same-origin' });\n      const loadWasm = WebAssembly.instantiateStreaming\n        ? async () => {\n            return WebAssembly.instantiateStreaming(wfetch(), imports).then(\n              (arg) => onSuccess(arg.instance, arg.module),\n            );\n          }\n        : async () => {\n            return wfetch()\n              .then((response) => response.arrayBuffer())\n              .then((bytes) => WebAssembly.instantiate(bytes, imports))\n              .then((arg) => onSuccess(arg.instance, arg.module));\n          };\n      loadWasm();\n      return {};\n    };\n\n    Module[xNameOfInstantiateWasm].uri = 'sqlite3.wasm';\n\n    var moduleOverrides = Object.assign({}, Module);\n\n    var arguments_ = [];\n    var thisProgram = './this.program';\n    var quit_ = (status, toThrow) => {\n      throw toThrow;\n    };\n\n    var ENVIRONMENT_IS_WEB = typeof window == 'object';\n    var ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n\n    var ENVIRONMENT_IS_NODE =\n      typeof process == 'object' &&\n      typeof process.versions == 'object' &&\n      typeof process.versions.node == 'string';\n    var ENVIRONMENT_IS_SHELL =\n      !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\n    var scriptDirectory = '';\n    function locateFile(path) {\n      if (Module['locateFile']) {\n        return Module['locateFile'](path, scriptDirectory);\n      }\n      return scriptDirectory + path;\n    }\n\n    var read_, readAsync, readBinary, setWindowTitle;\n\n    if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (typeof document != 'undefined' && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n\n      if (_scriptDir) {\n        scriptDirectory = _scriptDir;\n      }\n\n      if (scriptDirectory.indexOf('blob:') !== 0) {\n        scriptDirectory = scriptDirectory.substr(\n          0,\n          scriptDirectory.replace(/[?#].*/, '').lastIndexOf('/') + 1,\n        );\n      } else {\n        scriptDirectory = '';\n      }\n\n      {\n        read_ = (url) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, false);\n          xhr.send(null);\n          return xhr.responseText;\n        };\n\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = (url) => {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, false);\n            xhr.responseType = 'arraybuffer';\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n\n        readAsync = (url, onload, onerror) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, true);\n          xhr.responseType = 'arraybuffer';\n          xhr.onload = () => {\n            if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) {\n              onload(xhr.response);\n              return;\n            }\n            onerror();\n          };\n          xhr.onerror = onerror;\n          xhr.send(null);\n        };\n      }\n\n      setWindowTitle = (title) => (document.title = title);\n    } else {\n    }\n\n    var out = Module['print'] || console.log.bind(console);\n    var err = Module['printErr'] || console.warn.bind(console);\n\n    Object.assign(Module, moduleOverrides);\n\n    moduleOverrides = null;\n\n    if (Module['arguments']) arguments_ = Module['arguments'];\n\n    if (Module['thisProgram']) thisProgram = Module['thisProgram'];\n\n    if (Module['quit']) quit_ = Module['quit'];\n\n    var STACK_ALIGN = 16;\n    var POINTER_SIZE = 4;\n\n    function getNativeTypeSize(type) {\n      switch (type) {\n        case 'i1':\n        case 'i8':\n        case 'u8':\n          return 1;\n        case 'i16':\n        case 'u16':\n          return 2;\n        case 'i32':\n        case 'u32':\n          return 4;\n        case 'i64':\n        case 'u64':\n          return 8;\n        case 'float':\n          return 4;\n        case 'double':\n          return 8;\n        default: {\n          if (type[type.length - 1] === '*') {\n            return POINTER_SIZE;\n          }\n          if (type[0] === 'i') {\n            const bits = Number(type.substr(1));\n            assert(\n              bits % 8 === 0,\n              'getNativeTypeSize invalid bits ' + bits + ', type ' + type,\n            );\n            return bits / 8;\n          }\n          return 0;\n        }\n      }\n    }\n\n    var wasmBinary;\n    if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\n    var noExitRuntime = Module['noExitRuntime'] || true;\n\n    if (typeof WebAssembly != 'object') {\n      abort('no native wasm support detected');\n    }\n\n    var wasmMemory;\n\n    var ABORT = false;\n\n    var EXITSTATUS;\n\n    function assert(condition, text) {\n      if (!condition) {\n        abort(text);\n      }\n    }\n\n    var UTF8Decoder =\n      typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n\n    function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n\n      while (idx < endPtr) {\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) {\n          str += String.fromCharCode(u0);\n          continue;\n        }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xe0) == 0xc0) {\n          str += String.fromCharCode(((u0 & 31) << 6) | u1);\n          continue;\n        }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xf0) == 0xe0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          u0 =\n            ((u0 & 7) << 18) |\n            (u1 << 12) |\n            (u2 << 6) |\n            (heapOrArray[idx++] & 63);\n        }\n\n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(\n            0xd800 | (ch >> 10),\n            0xdc00 | (ch & 0x3ff),\n          );\n        }\n      }\n      return str;\n    }\n\n    function UTF8ToString(ptr, maxBytesToRead) {\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    }\n\n    function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n      if (!(maxBytesToWrite > 0)) return 0;\n\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 0xd800 && u <= 0xdfff) {\n          var u1 = str.charCodeAt(++i);\n          u = (0x10000 + ((u & 0x3ff) << 10)) | (u1 & 0x3ff);\n        }\n        if (u <= 0x7f) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7ff) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xc0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xffff) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xe0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 0xf0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    }\n\n    function stringToUTF8(str, outPtr, maxBytesToWrite) {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    }\n\n    function lengthBytesUTF8(str) {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var c = str.charCodeAt(i);\n        if (c <= 0x7f) {\n          len++;\n        } else if (c <= 0x7ff) {\n          len += 2;\n        } else if (c >= 0xd800 && c <= 0xdfff) {\n          len += 4;\n          ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    }\n\n    var HEAP,\n      HEAP8,\n      HEAPU8,\n      HEAP16,\n      HEAPU16,\n      HEAP32,\n      HEAPU32,\n      HEAPF32,\n      HEAP64,\n      HEAPU64,\n      HEAPF64;\n\n    function updateMemoryViews() {\n      var b = wasmMemory.buffer;\n      Module['HEAP8'] = HEAP8 = new Int8Array(b);\n      Module['HEAP16'] = HEAP16 = new Int16Array(b);\n      Module['HEAP32'] = HEAP32 = new Int32Array(b);\n      Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n      Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n      Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n      Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n      Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n      Module['HEAP64'] = HEAP64 = new BigInt64Array(b);\n      Module['HEAPU64'] = HEAPU64 = new BigUint64Array(b);\n    }\n\n    var STACK_SIZE = 524288;\n\n    var INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 16777216;\n\n    if (Module['wasmMemory']) {\n      wasmMemory = Module['wasmMemory'];\n    } else {\n      wasmMemory = new WebAssembly.Memory({\n        initial: INITIAL_MEMORY / 65536,\n\n        maximum: 2147483648 / 65536,\n      });\n    }\n\n    updateMemoryViews();\n\n    INITIAL_MEMORY = wasmMemory.buffer.byteLength;\n\n    var wasmTable;\n\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATEXIT__ = [];\n    var __ATPOSTRUN__ = [];\n\n    var runtimeInitialized = false;\n\n    function keepRuntimeAlive() {\n      return noExitRuntime;\n    }\n\n    function preRun() {\n      if (Module['preRun']) {\n        if (typeof Module['preRun'] == 'function')\n          Module['preRun'] = [Module['preRun']];\n        while (Module['preRun'].length) {\n          addOnPreRun(Module['preRun'].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n\n    function initRuntime() {\n      runtimeInitialized = true;\n\n      if (!Module['noFSInit'] && !FS.init.initialized) FS.init();\n      FS.ignorePermissions = false;\n\n      TTY.init();\n      callRuntimeCallbacks(__ATINIT__);\n    }\n\n    function postRun() {\n      if (Module['postRun']) {\n        if (typeof Module['postRun'] == 'function')\n          Module['postRun'] = [Module['postRun']];\n        while (Module['postRun'].length) {\n          addOnPostRun(Module['postRun'].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n\n    function addOnExit(cb) {}\n\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n\n    function getUniqueRunDependency(id) {\n      return id;\n    }\n\n    function addRunDependency(id) {\n      runDependencies++;\n\n      if (Module['monitorRunDependencies']) {\n        Module['monitorRunDependencies'](runDependencies);\n      }\n    }\n\n    function removeRunDependency(id) {\n      runDependencies--;\n\n      if (Module['monitorRunDependencies']) {\n        Module['monitorRunDependencies'](runDependencies);\n      }\n\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n\n    function abort(what) {\n      if (Module['onAbort']) {\n        Module['onAbort'](what);\n      }\n\n      what = 'Aborted(' + what + ')';\n\n      err(what);\n\n      ABORT = true;\n      EXITSTATUS = 1;\n\n      what += '. Build with -sASSERTIONS for more info.';\n\n      var e = new WebAssembly.RuntimeError(what);\n\n      readyPromiseReject(e);\n\n      throw e;\n    }\n\n    var dataURIPrefix = 'data:application/octet-stream;base64,';\n\n    function isDataURI(filename) {\n      return filename.startsWith(dataURIPrefix);\n    }\n\n    function isFileURI(filename) {\n      return filename.startsWith('file://');\n    }\n\n    var wasmBinaryFile;\n    if (Module['locateFile']) {\n      wasmBinaryFile = 'sqlite3.wasm';\n      if (!isDataURI(wasmBinaryFile)) {\n        wasmBinaryFile = locateFile(wasmBinaryFile);\n      }\n    } else {\n      wasmBinaryFile = new URL('sqlite3.wasm', import.meta.url).href;\n    }\n\n    function getBinary(file) {\n      try {\n        if (file == wasmBinaryFile && wasmBinary) {\n          return new Uint8Array(wasmBinary);\n        }\n        if (readBinary) {\n          return readBinary(file);\n        }\n        throw 'both async and sync fetching of the wasm failed';\n      } catch (err) {\n        abort(err);\n      }\n    }\n\n    function getBinaryPromise() {\n      if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n        if (typeof fetch == 'function') {\n          return fetch(wasmBinaryFile, { credentials: 'same-origin' })\n            .then(function (response) {\n              if (!response['ok']) {\n                throw (\n                  \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\"\n                );\n              }\n              return response['arrayBuffer']();\n            })\n            .catch(function () {\n              return getBinary(wasmBinaryFile);\n            });\n        }\n      }\n\n      return Promise.resolve().then(function () {\n        return getBinary(wasmBinaryFile);\n      });\n    }\n\n    function createWasm() {\n      var info = {\n        env: asmLibraryArg,\n        wasi_snapshot_preview1: asmLibraryArg,\n      };\n\n      function receiveInstance(instance, module) {\n        var exports = instance.exports;\n\n        Module['asm'] = exports;\n\n        wasmTable = Module['asm']['__indirect_function_table'];\n\n        addOnInit(Module['asm']['__wasm_call_ctors']);\n\n        removeRunDependency('wasm-instantiate');\n      }\n\n      addRunDependency('wasm-instantiate');\n\n      function receiveInstantiationResult(result) {\n        receiveInstance(result['instance']);\n      }\n\n      function instantiateArrayBuffer(receiver) {\n        return getBinaryPromise()\n          .then(function (binary) {\n            return WebAssembly.instantiate(binary, info);\n          })\n          .then(function (instance) {\n            return instance;\n          })\n          .then(receiver, function (reason) {\n            err('failed to asynchronously prepare wasm: ' + reason);\n\n            abort(reason);\n          });\n      }\n\n      function instantiateAsync() {\n        if (\n          !wasmBinary &&\n          typeof WebAssembly.instantiateStreaming == 'function' &&\n          !isDataURI(wasmBinaryFile) &&\n          typeof fetch == 'function'\n        ) {\n          return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(\n            function (response) {\n              var result = WebAssembly.instantiateStreaming(response, info);\n\n              return result.then(receiveInstantiationResult, function (reason) {\n                err('wasm streaming compile failed: ' + reason);\n                err('falling back to ArrayBuffer instantiation');\n                return instantiateArrayBuffer(receiveInstantiationResult);\n              });\n            },\n          );\n        } else {\n          return instantiateArrayBuffer(receiveInstantiationResult);\n        }\n      }\n\n      if (Module['instantiateWasm']) {\n        try {\n          var exports = Module['instantiateWasm'](info, receiveInstance);\n          return exports;\n        } catch (e) {\n          err('Module.instantiateWasm callback failed with error: ' + e);\n\n          readyPromiseReject(e);\n        }\n      }\n\n      instantiateAsync().catch(readyPromiseReject);\n      return {};\n    }\n\n    var tempDouble;\n    var tempI64;\n\n    var ASM_CONSTS = {};\n\n    function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = 'Program terminated with exit(' + status + ')';\n      this.status = status;\n    }\n\n    function callRuntimeCallbacks(callbacks) {\n      while (callbacks.length > 0) {\n        callbacks.shift()(Module);\n      }\n    }\n\n    function getValue(ptr, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          return HEAP8[ptr >> 0];\n        case 'i8':\n          return HEAP8[ptr >> 0];\n        case 'i16':\n          return HEAP16[ptr >> 1];\n        case 'i32':\n          return HEAP32[ptr >> 2];\n        case 'i64':\n          return HEAP64[ptr >> 3];\n        case 'float':\n          return HEAPF32[ptr >> 2];\n        case 'double':\n          return HEAPF64[ptr >> 3];\n        case '*':\n          return HEAPU32[ptr >> 2];\n        default:\n          abort('invalid type for getValue: ' + type);\n      }\n      return null;\n    }\n\n    function setValue(ptr, value, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          HEAP8[ptr >> 0] = value;\n          break;\n        case 'i8':\n          HEAP8[ptr >> 0] = value;\n          break;\n        case 'i16':\n          HEAP16[ptr >> 1] = value;\n          break;\n        case 'i32':\n          HEAP32[ptr >> 2] = value;\n          break;\n        case 'i64':\n          (tempI64 = [\n            value >>> 0,\n            ((tempDouble = value),\n            +Math.abs(tempDouble) >= 1.0\n              ? tempDouble > 0.0\n                ? (Math.min(\n                    +Math.floor(tempDouble / 4294967296.0),\n                    4294967295.0,\n                  ) |\n                    0) >>>\n                  0\n                : ~~+Math.ceil(\n                    (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                  ) >>> 0\n              : 0),\n          ]),\n            (HEAP32[ptr >> 2] = tempI64[0]),\n            (HEAP32[(ptr + 4) >> 2] = tempI64[1]);\n          break;\n        case 'float':\n          HEAPF32[ptr >> 2] = value;\n          break;\n        case 'double':\n          HEAPF64[ptr >> 3] = value;\n          break;\n        case '*':\n          HEAPU32[ptr >> 2] = value;\n          break;\n        default:\n          abort('invalid type for setValue: ' + type);\n      }\n    }\n\n    var PATH = {\n      isAbs: (path) => path.charAt(0) === '/',\n      splitPath: (filename) => {\n        var splitPathRe =\n          /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n      normalizeArray: (parts, allowAboveRoot) => {\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },\n      normalize: (path) => {\n        var isAbsolute = PATH.isAbs(path),\n          trailingSlash = path.substr(-1) === '/';\n\n        path = PATH.normalizeArray(\n          path.split('/').filter((p) => !!p),\n          !isAbsolute,\n        ).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },\n      dirname: (path) => {\n        var result = PATH.splitPath(path),\n          root = result[0],\n          dir = result[1];\n        if (!root && !dir) {\n          return '.';\n        }\n        if (dir) {\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },\n      basename: (path) => {\n        if (path === '/') return '/';\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, '');\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash + 1);\n      },\n      join: function () {\n        var paths = Array.prototype.slice.call(arguments);\n        return PATH.normalize(paths.join('/'));\n      },\n      join2: (l, r) => {\n        return PATH.normalize(l + '/' + r);\n      },\n    };\n\n    function getRandomDevice() {\n      if (\n        typeof crypto == 'object' &&\n        typeof crypto['getRandomValues'] == 'function'\n      ) {\n        var randomBuffer = new Uint8Array(1);\n        return () => {\n          crypto.getRandomValues(randomBuffer);\n          return randomBuffer[0];\n        };\n      } else return () => abort('randomDevice');\n    }\n\n    var PATH_FS = {\n      resolve: function () {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = i >= 0 ? arguments[i] : FS.cwd();\n\n          if (typeof path != 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return '';\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n\n        resolvedPath = PATH.normalizeArray(\n          resolvedPath.split('/').filter((p) => !!p),\n          !resolvedAbsolute,\n        ).join('/');\n        return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n      },\n      relative: (from, to) => {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      },\n    };\n\n    function intArrayFromString(stringy, dontAddNull, length) {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(\n        stringy,\n        u8array,\n        0,\n        u8array.length,\n      );\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    }\n    var TTY = {\n      ttys: [],\n      init: function () {},\n      shutdown: function () {},\n      register: function (dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n      stream_ops: {\n        open: function (stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n        close: function (stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        fsync: function (stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        read: function (stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },\n        write: function (stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        },\n      },\n      default_tty_ops: {\n        get_char: function (tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (\n              typeof window != 'undefined' &&\n              typeof window.prompt == 'function'\n            ) {\n              result = window.prompt('Input: ');\n              if (result !== null) {\n                result += '\\n';\n              }\n            } else if (typeof readline == 'function') {\n              result = readline();\n              if (result !== null) {\n                result += '\\n';\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        },\n        put_char: function (tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync: function (tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n      },\n      default_tty1_ops: {\n        put_char: function (tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync: function (tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n      },\n    };\n\n    function zeroMemory(address, size) {\n      HEAPU8.fill(0, address, address + size);\n      return address;\n    }\n\n    function alignMemory(size, alignment) {\n      return Math.ceil(size / alignment) * alignment;\n    }\n    function mmapAlloc(size) {\n      size = alignMemory(size, 65536);\n      var ptr = _emscripten_builtin_memalign(65536, size);\n      if (!ptr) return 0;\n      return zeroMemory(ptr, size);\n    }\n    var MEMFS = {\n      ops_table: null,\n      mount: function (mount) {\n        return MEMFS.createNode(null, '/', 16384 | 511, 0);\n      },\n      createNode: function (parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          throw new FS.ErrnoError(63);\n        }\n        if (!MEMFS.ops_table) {\n          MEMFS.ops_table = {\n            dir: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                lookup: MEMFS.node_ops.lookup,\n                mknod: MEMFS.node_ops.mknod,\n                rename: MEMFS.node_ops.rename,\n                unlink: MEMFS.node_ops.unlink,\n                rmdir: MEMFS.node_ops.rmdir,\n                readdir: MEMFS.node_ops.readdir,\n                symlink: MEMFS.node_ops.symlink,\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n              },\n            },\n            file: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n                read: MEMFS.stream_ops.read,\n                write: MEMFS.stream_ops.write,\n                allocate: MEMFS.stream_ops.allocate,\n                mmap: MEMFS.stream_ops.mmap,\n                msync: MEMFS.stream_ops.msync,\n              },\n            },\n            link: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                readlink: MEMFS.node_ops.readlink,\n              },\n              stream: {},\n            },\n            chrdev: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n              },\n              stream: FS.chrdev_stream_ops,\n            },\n          };\n        }\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0;\n\n          node.contents = null;\n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n        return node;\n      },\n      getFileDataAsTypedArray: function (node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray)\n          return node.contents.subarray(0, node.usedBytes);\n        return new Uint8Array(node.contents);\n      },\n      expandFileStorage: function (node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return;\n\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(\n          newCapacity,\n          (prevCapacity *\n            (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>>\n            0,\n        );\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity);\n        if (node.usedBytes > 0)\n          node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n      },\n      resizeFileStorage: function (node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null;\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize);\n          if (oldContents) {\n            node.contents.set(\n              oldContents.subarray(0, Math.min(newSize, node.usedBytes)),\n            );\n          }\n          node.usedBytes = newSize;\n        }\n      },\n      node_ops: {\n        getattr: function (node) {\n          var attr = {};\n\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n        setattr: function (node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n        lookup: function (parent, name) {\n          throw FS.genericErrors[44];\n        },\n        mknod: function (parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n        rename: function (old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        },\n        unlink: function (parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        rmdir: function (parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        readdir: function (node) {\n          var entries = ['.', '..'];\n          for (var key in node.contents) {\n            if (!node.contents.hasOwnProperty(key)) {\n              continue;\n            }\n            entries.push(key);\n          }\n          return entries;\n        },\n        symlink: function (parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n        readlink: function (node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        },\n      },\n      stream_ops: {\n        read: function (stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },\n        write: function (stream, buffer, offset, length, position, canOwn) {\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n\n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(\n                buffer.subarray(offset, offset + length),\n                position,\n              );\n              return length;\n            }\n          }\n\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer.subarray) {\n            node.contents.set(\n              buffer.subarray(offset, offset + length),\n              position,\n            );\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n        llseek: function (stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n        allocate: function (stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(\n            stream.node.usedBytes,\n            offset + length,\n          );\n        },\n        mmap: function (stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(\n                  contents,\n                  position,\n                  position + length,\n                );\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            HEAP8.set(contents, ptr);\n          }\n          return { ptr: ptr, allocated: allocated };\n        },\n        msync: function (stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n\n          return 0;\n        },\n      },\n    };\n\n    function asyncLoad(url, onload, onerror, noRunDep) {\n      var dep = !noRunDep ? getUniqueRunDependency('al ' + url) : '';\n      readAsync(\n        url,\n        (arrayBuffer) => {\n          assert(\n            arrayBuffer,\n            'Loading data file \"' + url + '\" failed (no arrayBuffer).',\n          );\n          onload(new Uint8Array(arrayBuffer));\n          if (dep) removeRunDependency(dep);\n        },\n        (event) => {\n          if (onerror) {\n            onerror();\n          } else {\n            throw 'Loading data file \"' + url + '\" failed.';\n          }\n        },\n      );\n      if (dep) addRunDependency(dep);\n    }\n\n    var FS = {\n      root: null,\n      mounts: [],\n      devices: {},\n      streams: [],\n      nextInode: 1,\n      nameTable: null,\n      currentPath: '/',\n      initialized: false,\n      ignorePermissions: true,\n      ErrnoError: null,\n      genericErrors: {},\n      filesystems: null,\n      syncFSRequests: 0,\n      lookupPath: (path, opts = {}) => {\n        path = PATH_FS.resolve(path);\n\n        if (!path) return { path: '', node: null };\n\n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0,\n        };\n        opts = Object.assign(defaults, opts);\n\n        if (opts.recurse_count > 8) {\n          throw new FS.ErrnoError(32);\n        }\n\n        var parts = path.split('/').filter((p) => !!p);\n\n        var current = FS.root;\n        var current_path = '/';\n\n        for (var i = 0; i < parts.length; i++) {\n          var islast = i === parts.length - 1;\n          if (islast && opts.parent) {\n            break;\n          }\n\n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n\n          if (FS.isMountpoint(current)) {\n            if (!islast || (islast && opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n          }\n\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n\n              var lookup = FS.lookupPath(current_path, {\n                recurse_count: opts.recurse_count + 1,\n              });\n              current = lookup.node;\n\n              if (count++ > 40) {\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n\n        return { path: current_path, node: current };\n      },\n      getPath: (node) => {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length - 1] !== '/'\n              ? mount + '/' + path\n              : mount + path;\n          }\n          path = path ? node.name + '/' + path : node.name;\n          node = node.parent;\n        }\n      },\n      hashName: (parentid, name) => {\n        var hash = 0;\n\n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },\n      hashAddNode: (node) => {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n      hashRemoveNode: (node) => {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n      lookupNode: (parent, name) => {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode, parent);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n\n        return FS.lookup(parent, name);\n      },\n      createNode: (parent, name, mode, rdev) => {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n\n        FS.hashAddNode(node);\n\n        return node;\n      },\n      destroyNode: (node) => {\n        FS.hashRemoveNode(node);\n      },\n      isRoot: (node) => {\n        return node === node.parent;\n      },\n      isMountpoint: (node) => {\n        return !!node.mounted;\n      },\n      isFile: (mode) => {\n        return (mode & 61440) === 32768;\n      },\n      isDir: (mode) => {\n        return (mode & 61440) === 16384;\n      },\n      isLink: (mode) => {\n        return (mode & 61440) === 40960;\n      },\n      isChrdev: (mode) => {\n        return (mode & 61440) === 8192;\n      },\n      isBlkdev: (mode) => {\n        return (mode & 61440) === 24576;\n      },\n      isFIFO: (mode) => {\n        return (mode & 61440) === 4096;\n      },\n      isSocket: (mode) => {\n        return (mode & 49152) === 49152;\n      },\n      flagModes: { r: 0, 'r+': 2, w: 577, 'w+': 578, a: 1089, 'a+': 1090 },\n      modeStringToFlags: (str) => {\n        var flags = FS.flagModes[str];\n        if (typeof flags == 'undefined') {\n          throw new Error('Unknown file open mode: ' + str);\n        }\n        return flags;\n      },\n      flagsToPermissionString: (flag) => {\n        var perms = ['r', 'w', 'rw'][flag & 3];\n        if (flag & 512) {\n          perms += 'w';\n        }\n        return perms;\n      },\n      nodePermissions: (node, perms) => {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n\n        if (perms.includes('r') && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes('w') && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes('x') && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n      mayLookup: (dir) => {\n        var errCode = FS.nodePermissions(dir, 'x');\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n      mayCreate: (dir, name) => {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {}\n        return FS.nodePermissions(dir, 'wx');\n      },\n      mayDelete: (dir, name, isdir) => {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, 'wx');\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n      mayOpen: (node, flags) => {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== 'r' || flags & 512) {\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n      MAX_OPEN_FDS: 4096,\n      nextfd: (fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {\n        for (var fd = fd_start; fd <= fd_end; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n      getStream: (fd) => FS.streams[fd],\n      createStream: (stream, fd_start, fd_end) => {\n        if (!FS.FSStream) {\n          FS.FSStream = function () {\n            this.shared = {};\n          };\n          FS.FSStream.prototype = {};\n          Object.defineProperties(FS.FSStream.prototype, {\n            object: {\n              get: function () {\n                return this.node;\n              },\n\n              set: function (val) {\n                this.node = val;\n              },\n            },\n            isRead: {\n              get: function () {\n                return (this.flags & 2097155) !== 1;\n              },\n            },\n            isWrite: {\n              get: function () {\n                return (this.flags & 2097155) !== 0;\n              },\n            },\n            isAppend: {\n              get: function () {\n                return this.flags & 1024;\n              },\n            },\n            flags: {\n              get: function () {\n                return this.shared.flags;\n              },\n\n              set: function (val) {\n                this.shared.flags = val;\n              },\n            },\n            position: {\n              get: function () {\n                return this.shared.position;\n              },\n\n              set: function (val) {\n                this.shared.position = val;\n              },\n            },\n          });\n        }\n\n        stream = Object.assign(new FS.FSStream(), stream);\n        var fd = FS.nextfd(fd_start, fd_end);\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n      closeStream: (fd) => {\n        FS.streams[fd] = null;\n      },\n      chrdev_stream_ops: {\n        open: (stream) => {\n          var device = FS.getDevice(stream.node.rdev);\n\n          stream.stream_ops = device.stream_ops;\n\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        },\n        llseek: () => {\n          throw new FS.ErrnoError(70);\n        },\n      },\n      major: (dev) => dev >> 8,\n      minor: (dev) => dev & 0xff,\n      makedev: (ma, mi) => (ma << 8) | mi,\n      registerDevice: (dev, ops) => {\n        FS.devices[dev] = { stream_ops: ops };\n      },\n      getDevice: (dev) => FS.devices[dev],\n      getMounts: (mount) => {\n        var mounts = [];\n        var check = [mount];\n\n        while (check.length) {\n          var m = check.pop();\n\n          mounts.push(m);\n\n          check.push.apply(check, m.mounts);\n        }\n\n        return mounts;\n      },\n      syncfs: (populate, callback) => {\n        if (typeof populate == 'function') {\n          callback = populate;\n          populate = false;\n        }\n\n        FS.syncFSRequests++;\n\n        if (FS.syncFSRequests > 1) {\n          err(\n            'warning: ' +\n              FS.syncFSRequests +\n              ' FS.syncfs operations in flight at once, probably just doing extra work',\n          );\n        }\n\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n\n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n\n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        }\n\n        mounts.forEach((mount) => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n      mount: (type, opts, mountpoint) => {\n        var root = mountpoint === '/';\n        var pseudo = !mountpoint;\n        var node;\n\n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n          mountpoint = lookup.path;\n          node = lookup.node;\n\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n\n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n\n        var mount = {\n          type: type,\n          opts: opts,\n          mountpoint: mountpoint,\n          mounts: [],\n        };\n\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n\n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          node.mounted = mount;\n\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n\n        return mountRoot;\n      },\n      unmount: (mountpoint) => {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n\n        Object.keys(FS.nameTable).forEach((hash) => {\n          var current = FS.nameTable[hash];\n\n          while (current) {\n            var next = current.name_next;\n\n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n\n            current = next;\n          }\n        });\n\n        node.mounted = null;\n\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n      lookup: (parent, name) => {\n        return parent.node_ops.lookup(parent, name);\n      },\n      mknod: (path, mode, dev) => {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === '.' || name === '..') {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n      create: (path, mode) => {\n        mode = mode !== undefined ? mode : 438;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdir: (path, mode) => {\n        mode = mode !== undefined ? mode : 511;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdirTree: (path, mode) => {\n        var dirs = path.split('/');\n        var d = '';\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += '/' + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n      mkdev: (path, mode, dev) => {\n        if (typeof dev == 'undefined') {\n          dev = mode;\n          mode = 438;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n      symlink: (oldpath, newpath) => {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n      rename: (old_path, new_path) => {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n\n        var lookup, old_dir, new_dir;\n\n        lookup = FS.lookupPath(old_path, { parent: true });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, { parent: true });\n        new_dir = lookup.node;\n\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n\n        var old_node = FS.lookupNode(old_dir, old_name);\n\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(28);\n        }\n\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(55);\n        }\n\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {}\n\n        if (old_node === new_node) {\n          return;\n        }\n\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        errCode = new_node\n          ? FS.mayDelete(new_dir, new_name, isdir)\n          : FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (\n          FS.isMountpoint(old_node) ||\n          (new_node && FS.isMountpoint(new_node))\n        ) {\n          throw new FS.ErrnoError(10);\n        }\n\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, 'w');\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        FS.hashRemoveNode(old_node);\n\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.hashAddNode(old_node);\n        }\n      },\n      rmdir: (path) => {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n      readdir: (path) => {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n      },\n      unlink: (path) => {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n      readlink: (path) => {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(\n          FS.getPath(link.parent),\n          link.node_ops.readlink(link),\n        );\n      },\n      stat: (path, dontFollow) => {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n      },\n      lstat: (path) => {\n        return FS.stat(path, true);\n      },\n      chmod: (path, mode, dontFollow) => {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          timestamp: Date.now(),\n        });\n      },\n      lchmod: (path, mode) => {\n        FS.chmod(path, mode, true);\n      },\n      fchmod: (fd, mode) => {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        FS.chmod(stream.node, mode);\n      },\n      chown: (path, uid, gid, dontFollow) => {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now(),\n        });\n      },\n      lchown: (path, uid, gid) => {\n        FS.chown(path, uid, gid, true);\n      },\n      fchown: (fd, uid, gid) => {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        FS.chown(stream.node, uid, gid);\n      },\n      truncate: (path, len) => {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, 'w');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now(),\n        });\n      },\n      ftruncate: (fd, len) => {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n      },\n      utime: (path, atime, mtime) => {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime),\n        });\n      },\n      open: (path, flags, mode) => {\n        if (path === '') {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags == 'string' ? FS.modeStringToFlags(flags) : flags;\n        mode = typeof mode == 'undefined' ? 438 : mode;\n        if (flags & 64) {\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path == 'object') {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072),\n            });\n            node = lookup.node;\n          } catch (e) {}\n        }\n\n        var created = false;\n        if (flags & 64) {\n          if (node) {\n            if (flags & 128) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n\n        if (flags & 65536 && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        if (flags & 512 && !created) {\n          FS.truncate(node, 0);\n        }\n\n        flags &= ~(128 | 512 | 131072);\n\n        var stream = FS.createStream({\n          node: node,\n          path: FS.getPath(node),\n          flags: flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n\n          ungotten: [],\n          error: false,\n        });\n\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module['logReadFiles'] && !(flags & 1)) {\n          if (!FS.readFiles) FS.readFiles = {};\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n      close: (stream) => {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null;\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n      isClosed: (stream) => {\n        return stream.fd === null;\n      },\n      llseek: (stream, offset, whence) => {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n      read: (stream, buffer, offset, length, position) => {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n        );\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n      write: (stream, buffer, offset, length, position, canOwn) => {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n          canOwn,\n        );\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n      allocate: (stream, offset, length) => {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n      mmap: (stream, length, position, prot, flags) => {\n        if (\n          (prot & 2) !== 0 &&\n          (flags & 2) === 0 &&\n          (stream.flags & 2097155) !== 2\n        ) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n      msync: (stream, buffer, offset, length, mmapFlags) => {\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(\n          stream,\n          buffer,\n          offset,\n          length,\n          mmapFlags,\n        );\n      },\n      munmap: (stream) => 0,\n      ioctl: (stream, cmd, arg) => {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n      readFile: (path, opts = {}) => {\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || 'binary';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === 'utf8') {\n          ret = UTF8ArrayToString(buf, 0);\n        } else if (opts.encoding === 'binary') {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n      writeFile: (path, data, opts = {}) => {\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data == 'string') {\n          var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error('Unsupported data type');\n        }\n        FS.close(stream);\n      },\n      cwd: () => FS.currentPath,\n      chdir: (path) => {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, 'x');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n      createDefaultDirectories: () => {\n        FS.mkdir('/tmp');\n        FS.mkdir('/home');\n        FS.mkdir('/home/web_user');\n      },\n      createDefaultDevices: () => {\n        FS.mkdir('/dev');\n\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length,\n        });\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\n\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n\n        var random_device = getRandomDevice();\n        FS.createDevice('/dev', 'random', random_device);\n        FS.createDevice('/dev', 'urandom', random_device);\n\n        FS.mkdir('/dev/shm');\n        FS.mkdir('/dev/shm/tmp');\n      },\n      createSpecialDirectories: () => {\n        FS.mkdir('/proc');\n        var proc_self = FS.mkdir('/proc/self');\n        FS.mkdir('/proc/self/fd');\n        FS.mount(\n          {\n            mount: () => {\n              var node = FS.createNode(proc_self, 'fd', 16384 | 511, 73);\n              node.node_ops = {\n                lookup: (parent, name) => {\n                  var fd = +name;\n                  var stream = FS.getStream(fd);\n                  if (!stream) throw new FS.ErrnoError(8);\n                  var ret = {\n                    parent: null,\n                    mount: { mountpoint: 'fake' },\n                    node_ops: { readlink: () => stream.path },\n                  };\n                  ret.parent = ret;\n                  return ret;\n                },\n              };\n              return node;\n            },\n          },\n          {},\n          '/proc/self/fd',\n        );\n      },\n      createStandardStreams: () => {\n        if (Module['stdin']) {\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdin');\n        }\n        if (Module['stdout']) {\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdout');\n        }\n        if (Module['stderr']) {\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\n        } else {\n          FS.symlink('/dev/tty1', '/dev/stderr');\n        }\n\n        var stdin = FS.open('/dev/stdin', 0);\n        var stdout = FS.open('/dev/stdout', 1);\n        var stderr = FS.open('/dev/stderr', 1);\n      },\n      ensureErrnoError: () => {\n        if (FS.ErrnoError) return;\n        FS.ErrnoError = function ErrnoError(errno, node) {\n          this.node = node;\n          this.setErrno = function (errno) {\n            this.errno = errno;\n          };\n          this.setErrno(errno);\n          this.message = 'FS error';\n        };\n        FS.ErrnoError.prototype = new Error();\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n\n        [44].forEach((code) => {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = '<generic error, no stack>';\n        });\n      },\n      staticInit: () => {\n        FS.ensureErrnoError();\n\n        FS.nameTable = new Array(4096);\n\n        FS.mount(MEMFS, {}, '/');\n\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n\n        FS.filesystems = {\n          MEMFS: MEMFS,\n        };\n      },\n      init: (input, output, error) => {\n        FS.init.initialized = true;\n\n        FS.ensureErrnoError();\n\n        Module['stdin'] = input || Module['stdin'];\n        Module['stdout'] = output || Module['stdout'];\n        Module['stderr'] = error || Module['stderr'];\n\n        FS.createStandardStreams();\n      },\n      quit: () => {\n        FS.init.initialized = false;\n\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },\n      getMode: (canRead, canWrite) => {\n        var mode = 0;\n        if (canRead) mode |= 292 | 73;\n        if (canWrite) mode |= 146;\n        return mode;\n      },\n      findObject: (path, dontResolveLastLink) => {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (!ret.exists) {\n          return null;\n        }\n        return ret.object;\n      },\n      analyzePath: (path, dontResolveLastLink) => {\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {}\n        var ret = {\n          isRoot: false,\n          exists: false,\n          error: 0,\n          name: null,\n          path: null,\n          object: null,\n          parentExists: false,\n          parentPath: null,\n          parentObject: null,\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === '/';\n        } catch (e) {\n          ret.error = e.errno;\n        }\n        return ret;\n      },\n      createPath: (parent, path, canRead, canWrite) => {\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n        var parts = path.split('/').reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {}\n          parent = current;\n        }\n        return current;\n      },\n      createFile: (parent, name, properties, canRead, canWrite) => {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS.getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n      createDataFile: (parent, name, data, canRead, canWrite, canOwn) => {\n        var path = name;\n        if (parent) {\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n        var mode = FS.getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data == 'string') {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i)\n              arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n        return node;\n      },\n      createDevice: (parent, name, input, output) => {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS.getMode(!!input, !!output);\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n\n        FS.registerDevice(dev, {\n          open: (stream) => {\n            stream.seekable = false;\n          },\n          close: (stream) => {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          },\n          read: (stream, buffer, offset, length, pos) => {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write: (stream, buffer, offset, length, pos) => {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          },\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n      forceLoadFile: (obj) => {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n          return true;\n        if (typeof XMLHttpRequest != 'undefined') {\n          throw new Error(\n            'Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.',\n          );\n        } else if (read_) {\n          try {\n            obj.contents = intArrayFromString(read_(obj.url), true);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        } else {\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\n        }\n      },\n      createLazyFile: (parent, name, url, canRead, canWrite) => {\n        function LazyUint8Array() {\n          this.lengthKnown = false;\n          this.chunks = [];\n        }\n        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n          if (idx > this.length - 1 || idx < 0) {\n            return undefined;\n          }\n          var chunkOffset = idx % this.chunkSize;\n          var chunkNum = (idx / this.chunkSize) | 0;\n          return this.getter(chunkNum)[chunkOffset];\n        };\n        LazyUint8Array.prototype.setDataGetter =\n          function LazyUint8Array_setDataGetter(getter) {\n            this.getter = getter;\n          };\n        LazyUint8Array.prototype.cacheLength =\n          function LazyUint8Array_cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open('HEAD', url, false);\n            xhr.send(null);\n            if (\n              !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n            )\n              throw new Error(\n                \"Couldn't load \" + url + '. Status: ' + xhr.status,\n              );\n            var datalength = Number(xhr.getResponseHeader('Content-length'));\n            var header;\n            var hasByteServing =\n              (header = xhr.getResponseHeader('Accept-Ranges')) &&\n              header === 'bytes';\n            var usesGzip =\n              (header = xhr.getResponseHeader('Content-Encoding')) &&\n              header === 'gzip';\n\n            var chunkSize = 1024 * 1024;\n\n            if (!hasByteServing) chunkSize = datalength;\n\n            var doXHR = (from, to) => {\n              if (from > to)\n                throw new Error(\n                  'invalid range (' +\n                    from +\n                    ', ' +\n                    to +\n                    ') or no bytes requested!',\n                );\n              if (to > datalength - 1)\n                throw new Error(\n                  'only ' + datalength + ' bytes available! programmer error!',\n                );\n\n              var xhr = new XMLHttpRequest();\n              xhr.open('GET', url, false);\n              if (datalength !== chunkSize)\n                xhr.setRequestHeader('Range', 'bytes=' + from + '-' + to);\n\n              xhr.responseType = 'arraybuffer';\n              if (xhr.overrideMimeType) {\n                xhr.overrideMimeType('text/plain; charset=x-user-defined');\n              }\n\n              xhr.send(null);\n              if (\n                !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n              )\n                throw new Error(\n                  \"Couldn't load \" + url + '. Status: ' + xhr.status,\n                );\n              if (xhr.response !== undefined) {\n                return new Uint8Array(xhr.response || []);\n              }\n              return intArrayFromString(xhr.responseText || '', true);\n            };\n            var lazyArray = this;\n            lazyArray.setDataGetter((chunkNum) => {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\n                lazyArray.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined')\n                throw new Error('doXHR failed!');\n              return lazyArray.chunks[chunkNum];\n            });\n\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\n                'LazyFiles on gzip forces download of the whole file when length is accessed',\n              );\n            }\n\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          };\n        if (typeof XMLHttpRequest != 'undefined') {\n          if (!ENVIRONMENT_IS_WORKER)\n            throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n          var lazyArray = new LazyUint8Array();\n          Object.defineProperties(lazyArray, {\n            length: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._length;\n              },\n            },\n            chunkSize: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._chunkSize;\n              },\n            },\n          });\n\n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url: url };\n        }\n\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function () {\n              return this.contents.length;\n            },\n          },\n        });\n\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach((key) => {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = function forceLoadLazyFile() {\n            FS.forceLoadFile(node);\n            return fn.apply(null, arguments);\n          };\n        });\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length) return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        }\n\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position);\n        };\n\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return { ptr: ptr, allocated: true };\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n      createPreloadedFile: (\n        parent,\n        name,\n        url,\n        canRead,\n        canWrite,\n        onload,\n        onerror,\n        dontCreateFile,\n        canOwn,\n        preFinish,\n      ) => {\n        var fullname = name\n          ? PATH_FS.resolve(PATH.join2(parent, name))\n          : parent;\n        var dep = getUniqueRunDependency('cp ' + fullname);\n        function processData(byteArray) {\n          function finish(byteArray) {\n            if (preFinish) preFinish();\n            if (!dontCreateFile) {\n              FS.createDataFile(\n                parent,\n                name,\n                byteArray,\n                canRead,\n                canWrite,\n                canOwn,\n              );\n            }\n            if (onload) onload();\n            removeRunDependency(dep);\n          }\n          if (\n            Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {\n              if (onerror) onerror();\n              removeRunDependency(dep);\n            })\n          ) {\n            return;\n          }\n          finish(byteArray);\n        }\n        addRunDependency(dep);\n        if (typeof url == 'string') {\n          asyncLoad(url, (byteArray) => processData(byteArray), onerror);\n        } else {\n          processData(url);\n        }\n      },\n      indexedDB: () => {\n        return (\n          window.indexedDB ||\n          window.mozIndexedDB ||\n          window.webkitIndexedDB ||\n          window.msIndexedDB\n        );\n      },\n      DB_NAME: () => {\n        return 'EM_FS_' + window.location.pathname;\n      },\n      DB_VERSION: 20,\n      DB_STORE_NAME: 'FILE_DATA',\n      saveFilesToDB: (paths, onload, onerror) => {\n        onload = onload || (() => {});\n        onerror = onerror || (() => {});\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = () => {\n          out('creating db');\n          var db = openRequest.result;\n          db.createObjectStore(FS.DB_STORE_NAME);\n        };\n        openRequest.onsuccess = () => {\n          var db = openRequest.result;\n          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n            fail = 0,\n            total = paths.length;\n          function finish() {\n            if (fail == 0) onload();\n            else onerror();\n          }\n          paths.forEach((path) => {\n            var putRequest = files.put(\n              FS.analyzePath(path).object.contents,\n              path,\n            );\n            putRequest.onsuccess = () => {\n              ok++;\n              if (ok + fail == total) finish();\n            };\n            putRequest.onerror = () => {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      },\n      loadFilesFromDB: (paths, onload, onerror) => {\n        onload = onload || (() => {});\n        onerror = onerror || (() => {});\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = onerror;\n        openRequest.onsuccess = () => {\n          var db = openRequest.result;\n          try {\n            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');\n          } catch (e) {\n            onerror(e);\n            return;\n          }\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n            fail = 0,\n            total = paths.length;\n          function finish() {\n            if (fail == 0) onload();\n            else onerror();\n          }\n          paths.forEach((path) => {\n            var getRequest = files.get(path);\n            getRequest.onsuccess = () => {\n              if (FS.analyzePath(path).exists) {\n                FS.unlink(path);\n              }\n              FS.createDataFile(\n                PATH.dirname(path),\n                PATH.basename(path),\n                getRequest.result,\n                true,\n                true,\n                true,\n              );\n              ok++;\n              if (ok + fail == total) finish();\n            };\n            getRequest.onerror = () => {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      },\n    };\n    var SYSCALLS = {\n      DEFAULT_POLLMASK: 5,\n      calculateAt: function (dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);\n          }\n          return dir;\n        }\n        return PATH.join2(dir, path);\n      },\n      doStat: function (func, path, buf) {\n        try {\n          var stat = func(path);\n        } catch (e) {\n          if (\n            e &&\n            e.node &&\n            PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))\n          ) {\n            return -54;\n          }\n          throw e;\n        }\n        HEAP32[buf >> 2] = stat.dev;\n        HEAP32[(buf + 8) >> 2] = stat.ino;\n        HEAP32[(buf + 12) >> 2] = stat.mode;\n        HEAPU32[(buf + 16) >> 2] = stat.nlink;\n        HEAP32[(buf + 20) >> 2] = stat.uid;\n        HEAP32[(buf + 24) >> 2] = stat.gid;\n        HEAP32[(buf + 28) >> 2] = stat.rdev;\n        (tempI64 = [\n          stat.size >>> 0,\n          ((tempDouble = stat.size),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 40) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 44) >> 2] = tempI64[1]);\n        HEAP32[(buf + 48) >> 2] = 4096;\n        HEAP32[(buf + 52) >> 2] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        (tempI64 = [\n          Math.floor(atime / 1000) >>> 0,\n          ((tempDouble = Math.floor(atime / 1000)),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 56) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 60) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 64) >> 2] = (atime % 1000) * 1000;\n        (tempI64 = [\n          Math.floor(mtime / 1000) >>> 0,\n          ((tempDouble = Math.floor(mtime / 1000)),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 72) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 76) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 80) >> 2] = (mtime % 1000) * 1000;\n        (tempI64 = [\n          Math.floor(ctime / 1000) >>> 0,\n          ((tempDouble = Math.floor(ctime / 1000)),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 88) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 92) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 96) >> 2] = (ctime % 1000) * 1000;\n        (tempI64 = [\n          stat.ino >>> 0,\n          ((tempDouble = stat.ino),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 104) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 108) >> 2] = tempI64[1]);\n        return 0;\n      },\n      doMsync: function (addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (flags & 2) {\n          return 0;\n        }\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n      varargs: undefined,\n      get: function () {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(SYSCALLS.varargs - 4) >> 2];\n        return ret;\n      },\n      getStr: function (ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n      getStreamFromFD: function (fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) throw new FS.ErrnoError(8);\n        return stream;\n      },\n    };\n    function ___syscall_chmod(path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.chmod(path, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_faccessat(dirfd, path, amode, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (amode & ~7) {\n          return -28;\n        }\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node) {\n          return -44;\n        }\n        var perms = '';\n        if (amode & 4) perms += 'r';\n        if (amode & 2) perms += 'w';\n        if (amode & 1) perms += 'x';\n        if (perms && FS.nodePermissions(node, perms)) {\n          return -2;\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchmod(fd, mode) {\n      try {\n        FS.fchmod(fd, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchown32(fd, owner, group) {\n      try {\n        FS.fchown(fd, owner, group);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function setErrNo(value) {\n      HEAP32[___errno_location() >> 2] = value;\n      return value;\n    }\n\n    function ___syscall_fcntl64(fd, cmd, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (cmd) {\n          case 0: {\n            var arg = SYSCALLS.get();\n            if (arg < 0) {\n              return -28;\n            }\n            var newStream;\n            newStream = FS.createStream(stream, arg);\n            return newStream.fd;\n          }\n          case 1:\n          case 2:\n            return 0;\n          case 3:\n            return stream.flags;\n          case 4: {\n            var arg = SYSCALLS.get();\n            stream.flags |= arg;\n            return 0;\n          }\n          case 5: {\n            var arg = SYSCALLS.get();\n            var offset = 0;\n\n            HEAP16[(arg + offset) >> 1] = 2;\n            return 0;\n          }\n          case 6:\n          case 7:\n            return 0;\n          case 16:\n          case 8:\n            return -28;\n          case 9:\n            setErrNo(28);\n            return -1;\n          default: {\n            return -28;\n          }\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fstat64(fd, buf) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        return SYSCALLS.doStat(FS.stat, stream.path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    var MAX_INT53 = 9007199254740992;\n\n    var MIN_INT53 = -9007199254740992;\n    function bigintToI53Checked(num) {\n      return num < MIN_INT53 || num > MAX_INT53 ? NaN : Number(num);\n    }\n\n    function ___syscall_ftruncate64(fd, length) {\n      try {\n        length = bigintToI53Checked(length);\n        if (isNaN(length)) return -61;\n        FS.ftruncate(fd, length);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_getcwd(buf, size) {\n      try {\n        if (size === 0) return -28;\n        var cwd = FS.cwd();\n        var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\n        if (size < cwdLengthInBytes) return -68;\n        stringToUTF8(cwd, buf, size);\n        return cwdLengthInBytes;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_ioctl(fd, op, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (op) {\n          case 21509:\n          case 21505: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21510:\n          case 21511:\n          case 21512:\n          case 21506:\n          case 21507:\n          case 21508: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21519: {\n            if (!stream.tty) return -59;\n            var argp = SYSCALLS.get();\n            HEAP32[argp >> 2] = 0;\n            return 0;\n          }\n          case 21520: {\n            if (!stream.tty) return -59;\n            return -28;\n          }\n          case 21531: {\n            var argp = SYSCALLS.get();\n            return FS.ioctl(stream, op, argp);\n          }\n          case 21523: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21524: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          default:\n            return -28;\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_lstat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.lstat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_mkdirat(dirfd, path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n\n        path = PATH.normalize(path);\n        if (path[path.length - 1] === '/')\n          path = path.substr(0, path.length - 1);\n        FS.mkdir(path, mode, 0);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_newfstatat(dirfd, path, buf, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        var nofollow = flags & 256;\n        var allowEmpty = flags & 4096;\n        flags = flags & ~6400;\n        path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\n        return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_openat(dirfd, path, flags, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        var mode = varargs ? SYSCALLS.get() : 0;\n        return FS.open(path, flags, mode).fd;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_readlinkat(dirfd, path, buf, bufsize) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (bufsize <= 0) return -28;\n        var ret = FS.readlink(path);\n\n        var len = Math.min(bufsize, lengthBytesUTF8(ret));\n        var endChar = HEAP8[buf + len];\n        stringToUTF8(ret, buf, bufsize + 1);\n\n        HEAP8[buf + len] = endChar;\n        return len;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_rmdir(path) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.rmdir(path);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_stat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_unlinkat(dirfd, path, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (flags === 0) {\n          FS.unlink(path);\n        } else if (flags === 512) {\n          FS.rmdir(path);\n        } else {\n          abort('Invalid flags passed to unlinkat');\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function readI53FromI64(ptr) {\n      return HEAPU32[ptr >> 2] + HEAP32[(ptr + 4) >> 2] * 4294967296;\n    }\n\n    function ___syscall_utimensat(dirfd, path, times, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path, true);\n        if (!times) {\n          var atime = Date.now();\n          var mtime = atime;\n        } else {\n          var seconds = readI53FromI64(times);\n          var nanoseconds = HEAP32[(times + 8) >> 2];\n          atime = seconds * 1000 + nanoseconds / (1000 * 1000);\n          times += 16;\n          seconds = readI53FromI64(times);\n          nanoseconds = HEAP32[(times + 8) >> 2];\n          mtime = seconds * 1000 + nanoseconds / (1000 * 1000);\n        }\n        FS.utime(path, atime, mtime);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    var nowIsMonotonic = true;\n    function __emscripten_get_now_is_monotonic() {\n      return nowIsMonotonic;\n    }\n\n    function __isLeapYear(year) {\n      return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n    }\n\n    var __MONTH_DAYS_LEAP_CUMULATIVE = [\n      0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335,\n    ];\n\n    var __MONTH_DAYS_REGULAR_CUMULATIVE = [\n      0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334,\n    ];\n    function __yday_from_date(date) {\n      var isLeapYear = __isLeapYear(date.getFullYear());\n      var monthDaysCumulative = isLeapYear\n        ? __MONTH_DAYS_LEAP_CUMULATIVE\n        : __MONTH_DAYS_REGULAR_CUMULATIVE;\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1;\n\n      return yday;\n    }\n    function __localtime_js(time, tmPtr) {\n      var date = new Date(readI53FromI64(time) * 1000);\n      HEAP32[tmPtr >> 2] = date.getSeconds();\n      HEAP32[(tmPtr + 4) >> 2] = date.getMinutes();\n      HEAP32[(tmPtr + 8) >> 2] = date.getHours();\n      HEAP32[(tmPtr + 12) >> 2] = date.getDate();\n      HEAP32[(tmPtr + 16) >> 2] = date.getMonth();\n      HEAP32[(tmPtr + 20) >> 2] = date.getFullYear() - 1900;\n      HEAP32[(tmPtr + 24) >> 2] = date.getDay();\n\n      var yday = __yday_from_date(date) | 0;\n      HEAP32[(tmPtr + 28) >> 2] = yday;\n      HEAP32[(tmPtr + 36) >> 2] = -(date.getTimezoneOffset() * 60);\n\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dst =\n        (summerOffset != winterOffset &&\n          date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;\n      HEAP32[(tmPtr + 32) >> 2] = dst;\n    }\n\n    function __mmap_js(len, prot, flags, fd, off, allocated, addr) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var res = FS.mmap(stream, len, off, prot, flags);\n        var ptr = res.ptr;\n        HEAP32[allocated >> 2] = res.allocated;\n        HEAPU32[addr >> 2] = ptr;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function __munmap_js(addr, len, prot, flags, fd, offset) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        if (prot & 2) {\n          SYSCALLS.doMsync(addr, stream, len, flags, offset);\n        }\n        FS.munmap(stream);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function allocateUTF8(str) {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = _malloc(size);\n      if (ret) stringToUTF8Array(str, HEAP8, ret, size);\n      return ret;\n    }\n    function __tzset_js(timezone, daylight, tzname) {\n      var currentYear = new Date().getFullYear();\n      var winter = new Date(currentYear, 0, 1);\n      var summer = new Date(currentYear, 6, 1);\n      var winterOffset = winter.getTimezoneOffset();\n      var summerOffset = summer.getTimezoneOffset();\n\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n\n      HEAPU32[timezone >> 2] = stdTimezoneOffset * 60;\n\n      HEAP32[daylight >> 2] = Number(winterOffset != summerOffset);\n\n      function extractZone(date) {\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\n        return match ? match[1] : 'GMT';\n      }\n      var winterName = extractZone(winter);\n      var summerName = extractZone(summer);\n      var winterNamePtr = allocateUTF8(winterName);\n      var summerNamePtr = allocateUTF8(summerName);\n      if (summerOffset < winterOffset) {\n        HEAPU32[tzname >> 2] = winterNamePtr;\n        HEAPU32[(tzname + 4) >> 2] = summerNamePtr;\n      } else {\n        HEAPU32[tzname >> 2] = summerNamePtr;\n        HEAPU32[(tzname + 4) >> 2] = winterNamePtr;\n      }\n    }\n\n    function _emscripten_date_now() {\n      return Date.now();\n    }\n\n    var _emscripten_get_now;\n    _emscripten_get_now = () => performance.now();\n    function getHeapMax() {\n      return 2147483648;\n    }\n\n    function emscripten_realloc_buffer(size) {\n      var b = wasmMemory.buffer;\n      try {\n        wasmMemory.grow((size - b.byteLength + 65535) >>> 16);\n        updateMemoryViews();\n        return 1;\n      } catch (e) {}\n    }\n    function _emscripten_resize_heap(requestedSize) {\n      var oldSize = HEAPU8.length;\n      requestedSize = requestedSize >>> 0;\n\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n\n      let alignUp = (x, multiple) =>\n        x + ((multiple - (x % multiple)) % multiple);\n\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n\n        overGrownHeapSize = Math.min(\n          overGrownHeapSize,\n          requestedSize + 100663296,\n        );\n\n        var newSize = Math.min(\n          maxHeapSize,\n          alignUp(Math.max(requestedSize, overGrownHeapSize), 65536),\n        );\n\n        var replacement = emscripten_realloc_buffer(newSize);\n        if (replacement) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    var ENV = {};\n\n    function getExecutableName() {\n      return thisProgram || './this.program';\n    }\n    function getEnvStrings() {\n      if (!getEnvStrings.strings) {\n        var lang =\n          (\n            (typeof navigator == 'object' &&\n              navigator.languages &&\n              navigator.languages[0]) ||\n            'C'\n          ).replace('-', '_') + '.UTF-8';\n        var env = {\n          USER: 'web_user',\n          LOGNAME: 'web_user',\n          PATH: '/',\n          PWD: '/',\n          HOME: '/home/web_user',\n          LANG: lang,\n          _: getExecutableName(),\n        };\n\n        for (var x in ENV) {\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(x + '=' + env[x]);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    }\n\n    function writeAsciiToMemory(str, buffer, dontAddNull) {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n      }\n\n      if (!dontAddNull) HEAP8[buffer >> 0] = 0;\n    }\n\n    function _environ_get(__environ, environ_buf) {\n      var bufSize = 0;\n      getEnvStrings().forEach(function (string, i) {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(__environ + i * 4) >> 2] = ptr;\n        writeAsciiToMemory(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    }\n\n    function _environ_sizes_get(penviron_count, penviron_buf_size) {\n      var strings = getEnvStrings();\n      HEAPU32[penviron_count >> 2] = strings.length;\n      var bufSize = 0;\n      strings.forEach(function (string) {\n        bufSize += string.length + 1;\n      });\n      HEAPU32[penviron_buf_size >> 2] = bufSize;\n      return 0;\n    }\n\n    function _fd_close(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.close(stream);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_fdstat_get(fd, pbuf) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n\n        var type = stream.tty\n          ? 2\n          : FS.isDir(stream.mode)\n          ? 3\n          : FS.isLink(stream.mode)\n          ? 7\n          : 4;\n        HEAP8[pbuf >> 0] = type;\n\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function doReadv(stream, iov, iovcnt, offset) {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break;\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    }\n\n    function _fd_read(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doReadv(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_seek(fd, offset, whence, newOffset) {\n      try {\n        offset = bigintToI53Checked(offset);\n        if (isNaN(offset)) return 61;\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.llseek(stream, offset, whence);\n        (tempI64 = [\n          stream.position >>> 0,\n          ((tempDouble = stream.position),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[newOffset >> 2] = tempI64[0]),\n          (HEAP32[(newOffset + 4) >> 2] = tempI64[1]);\n        if (stream.getdents && offset === 0 && whence === 0)\n          stream.getdents = null;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_sync(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        if (stream.stream_ops && stream.stream_ops.fsync) {\n          return stream.stream_ops.fsync(stream);\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function doWritev(stream, iov, iovcnt, offset) {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    }\n\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doWritev(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    var FSNode = function (parent, name, mode, rdev) {\n      if (!parent) {\n        parent = this;\n      }\n      this.parent = parent;\n      this.mount = parent.mount;\n      this.mounted = null;\n      this.id = FS.nextInode++;\n      this.name = name;\n      this.mode = mode;\n      this.node_ops = {};\n      this.stream_ops = {};\n      this.rdev = rdev;\n    };\n    var readMode = 292 | 73;\n    var writeMode = 146;\n    Object.defineProperties(FSNode.prototype, {\n      read: {\n        get: function () {\n          return (this.mode & readMode) === readMode;\n        },\n        set: function (val) {\n          val ? (this.mode |= readMode) : (this.mode &= ~readMode);\n        },\n      },\n      write: {\n        get: function () {\n          return (this.mode & writeMode) === writeMode;\n        },\n        set: function (val) {\n          val ? (this.mode |= writeMode) : (this.mode &= ~writeMode);\n        },\n      },\n      isFolder: {\n        get: function () {\n          return FS.isDir(this.mode);\n        },\n      },\n      isDevice: {\n        get: function () {\n          return FS.isChrdev(this.mode);\n        },\n      },\n    });\n    FS.FSNode = FSNode;\n    FS.staticInit();\n    var ASSERTIONS = false;\n\n    var asmLibraryArg = {\n      __syscall_chmod: ___syscall_chmod,\n      __syscall_faccessat: ___syscall_faccessat,\n      __syscall_fchmod: ___syscall_fchmod,\n      __syscall_fchown32: ___syscall_fchown32,\n      __syscall_fcntl64: ___syscall_fcntl64,\n      __syscall_fstat64: ___syscall_fstat64,\n      __syscall_ftruncate64: ___syscall_ftruncate64,\n      __syscall_getcwd: ___syscall_getcwd,\n      __syscall_ioctl: ___syscall_ioctl,\n      __syscall_lstat64: ___syscall_lstat64,\n      __syscall_mkdirat: ___syscall_mkdirat,\n      __syscall_newfstatat: ___syscall_newfstatat,\n      __syscall_openat: ___syscall_openat,\n      __syscall_readlinkat: ___syscall_readlinkat,\n      __syscall_rmdir: ___syscall_rmdir,\n      __syscall_stat64: ___syscall_stat64,\n      __syscall_unlinkat: ___syscall_unlinkat,\n      __syscall_utimensat: ___syscall_utimensat,\n      _emscripten_get_now_is_monotonic: __emscripten_get_now_is_monotonic,\n      _localtime_js: __localtime_js,\n      _mmap_js: __mmap_js,\n      _munmap_js: __munmap_js,\n      _tzset_js: __tzset_js,\n      emscripten_date_now: _emscripten_date_now,\n      emscripten_get_now: _emscripten_get_now,\n      emscripten_resize_heap: _emscripten_resize_heap,\n      environ_get: _environ_get,\n      environ_sizes_get: _environ_sizes_get,\n      fd_close: _fd_close,\n      fd_fdstat_get: _fd_fdstat_get,\n      fd_read: _fd_read,\n      fd_seek: _fd_seek,\n      fd_sync: _fd_sync,\n      fd_write: _fd_write,\n      memory: wasmMemory,\n    };\n    var asm = createWasm();\n\n    var ___wasm_call_ctors = (Module['___wasm_call_ctors'] = function () {\n      return (___wasm_call_ctors = Module['___wasm_call_ctors'] =\n        Module['asm']['__wasm_call_ctors']).apply(null, arguments);\n    });\n\n    var _sqlite3_status64 = (Module['_sqlite3_status64'] = function () {\n      return (_sqlite3_status64 = Module['_sqlite3_status64'] =\n        Module['asm']['sqlite3_status64']).apply(null, arguments);\n    });\n\n    var _sqlite3_status = (Module['_sqlite3_status'] = function () {\n      return (_sqlite3_status = Module['_sqlite3_status'] =\n        Module['asm']['sqlite3_status']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_status = (Module['_sqlite3_db_status'] = function () {\n      return (_sqlite3_db_status = Module['_sqlite3_db_status'] =\n        Module['asm']['sqlite3_db_status']).apply(null, arguments);\n    });\n\n    var _sqlite3_msize = (Module['_sqlite3_msize'] = function () {\n      return (_sqlite3_msize = Module['_sqlite3_msize'] =\n        Module['asm']['sqlite3_msize']).apply(null, arguments);\n    });\n\n    var _sqlite3_vfs_find = (Module['_sqlite3_vfs_find'] = function () {\n      return (_sqlite3_vfs_find = Module['_sqlite3_vfs_find'] =\n        Module['asm']['sqlite3_vfs_find']).apply(null, arguments);\n    });\n\n    var _sqlite3_initialize = (Module['_sqlite3_initialize'] = function () {\n      return (_sqlite3_initialize = Module['_sqlite3_initialize'] =\n        Module['asm']['sqlite3_initialize']).apply(null, arguments);\n    });\n\n    var _sqlite3_malloc = (Module['_sqlite3_malloc'] = function () {\n      return (_sqlite3_malloc = Module['_sqlite3_malloc'] =\n        Module['asm']['sqlite3_malloc']).apply(null, arguments);\n    });\n\n    var _sqlite3_free = (Module['_sqlite3_free'] = function () {\n      return (_sqlite3_free = Module['_sqlite3_free'] =\n        Module['asm']['sqlite3_free']).apply(null, arguments);\n    });\n\n    var _sqlite3_vfs_register = (Module['_sqlite3_vfs_register'] = function () {\n      return (_sqlite3_vfs_register = Module['_sqlite3_vfs_register'] =\n        Module['asm']['sqlite3_vfs_register']).apply(null, arguments);\n    });\n\n    var _sqlite3_vfs_unregister = (Module['_sqlite3_vfs_unregister'] =\n      function () {\n        return (_sqlite3_vfs_unregister = Module['_sqlite3_vfs_unregister'] =\n          Module['asm']['sqlite3_vfs_unregister']).apply(null, arguments);\n      });\n\n    var _sqlite3_malloc64 = (Module['_sqlite3_malloc64'] = function () {\n      return (_sqlite3_malloc64 = Module['_sqlite3_malloc64'] =\n        Module['asm']['sqlite3_malloc64']).apply(null, arguments);\n    });\n\n    var _sqlite3_realloc = (Module['_sqlite3_realloc'] = function () {\n      return (_sqlite3_realloc = Module['_sqlite3_realloc'] =\n        Module['asm']['sqlite3_realloc']).apply(null, arguments);\n    });\n\n    var _sqlite3_realloc64 = (Module['_sqlite3_realloc64'] = function () {\n      return (_sqlite3_realloc64 = Module['_sqlite3_realloc64'] =\n        Module['asm']['sqlite3_realloc64']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_text = (Module['_sqlite3_value_text'] = function () {\n      return (_sqlite3_value_text = Module['_sqlite3_value_text'] =\n        Module['asm']['sqlite3_value_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_randomness = (Module['_sqlite3_randomness'] = function () {\n      return (_sqlite3_randomness = Module['_sqlite3_randomness'] =\n        Module['asm']['sqlite3_randomness']).apply(null, arguments);\n    });\n\n    var _sqlite3_stricmp = (Module['_sqlite3_stricmp'] = function () {\n      return (_sqlite3_stricmp = Module['_sqlite3_stricmp'] =\n        Module['asm']['sqlite3_stricmp']).apply(null, arguments);\n    });\n\n    var _sqlite3_strnicmp = (Module['_sqlite3_strnicmp'] = function () {\n      return (_sqlite3_strnicmp = Module['_sqlite3_strnicmp'] =\n        Module['asm']['sqlite3_strnicmp']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_parameter = (Module['_sqlite3_uri_parameter'] =\n      function () {\n        return (_sqlite3_uri_parameter = Module['_sqlite3_uri_parameter'] =\n          Module['asm']['sqlite3_uri_parameter']).apply(null, arguments);\n      });\n\n    var ___errno_location = (Module['___errno_location'] = function () {\n      return (___errno_location = Module['___errno_location'] =\n        Module['asm']['__errno_location']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_boolean = (Module['_sqlite3_uri_boolean'] = function () {\n      return (_sqlite3_uri_boolean = Module['_sqlite3_uri_boolean'] =\n        Module['asm']['sqlite3_uri_boolean']).apply(null, arguments);\n    });\n\n    var _sqlite3_serialize = (Module['_sqlite3_serialize'] = function () {\n      return (_sqlite3_serialize = Module['_sqlite3_serialize'] =\n        Module['asm']['sqlite3_serialize']).apply(null, arguments);\n    });\n\n    var _sqlite3_prepare_v2 = (Module['_sqlite3_prepare_v2'] = function () {\n      return (_sqlite3_prepare_v2 = Module['_sqlite3_prepare_v2'] =\n        Module['asm']['sqlite3_prepare_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_step = (Module['_sqlite3_step'] = function () {\n      return (_sqlite3_step = Module['_sqlite3_step'] =\n        Module['asm']['sqlite3_step']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_int64 = (Module['_sqlite3_column_int64'] = function () {\n      return (_sqlite3_column_int64 = Module['_sqlite3_column_int64'] =\n        Module['asm']['sqlite3_column_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_int = (Module['_sqlite3_column_int'] = function () {\n      return (_sqlite3_column_int = Module['_sqlite3_column_int'] =\n        Module['asm']['sqlite3_column_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_finalize = (Module['_sqlite3_finalize'] = function () {\n      return (_sqlite3_finalize = Module['_sqlite3_finalize'] =\n        Module['asm']['sqlite3_finalize']).apply(null, arguments);\n    });\n\n    var _sqlite3_file_control = (Module['_sqlite3_file_control'] = function () {\n      return (_sqlite3_file_control = Module['_sqlite3_file_control'] =\n        Module['asm']['sqlite3_file_control']).apply(null, arguments);\n    });\n\n    var _sqlite3_reset = (Module['_sqlite3_reset'] = function () {\n      return (_sqlite3_reset = Module['_sqlite3_reset'] =\n        Module['asm']['sqlite3_reset']).apply(null, arguments);\n    });\n\n    var _sqlite3_deserialize = (Module['_sqlite3_deserialize'] = function () {\n      return (_sqlite3_deserialize = Module['_sqlite3_deserialize'] =\n        Module['asm']['sqlite3_deserialize']).apply(null, arguments);\n    });\n\n    var _sqlite3_clear_bindings = (Module['_sqlite3_clear_bindings'] =\n      function () {\n        return (_sqlite3_clear_bindings = Module['_sqlite3_clear_bindings'] =\n          Module['asm']['sqlite3_clear_bindings']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_blob = (Module['_sqlite3_value_blob'] = function () {\n      return (_sqlite3_value_blob = Module['_sqlite3_value_blob'] =\n        Module['asm']['sqlite3_value_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_bytes = (Module['_sqlite3_value_bytes'] = function () {\n      return (_sqlite3_value_bytes = Module['_sqlite3_value_bytes'] =\n        Module['asm']['sqlite3_value_bytes']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_double = (Module['_sqlite3_value_double'] = function () {\n      return (_sqlite3_value_double = Module['_sqlite3_value_double'] =\n        Module['asm']['sqlite3_value_double']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_int = (Module['_sqlite3_value_int'] = function () {\n      return (_sqlite3_value_int = Module['_sqlite3_value_int'] =\n        Module['asm']['sqlite3_value_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_int64 = (Module['_sqlite3_value_int64'] = function () {\n      return (_sqlite3_value_int64 = Module['_sqlite3_value_int64'] =\n        Module['asm']['sqlite3_value_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_subtype = (Module['_sqlite3_value_subtype'] =\n      function () {\n        return (_sqlite3_value_subtype = Module['_sqlite3_value_subtype'] =\n          Module['asm']['sqlite3_value_subtype']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_pointer = (Module['_sqlite3_value_pointer'] =\n      function () {\n        return (_sqlite3_value_pointer = Module['_sqlite3_value_pointer'] =\n          Module['asm']['sqlite3_value_pointer']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_type = (Module['_sqlite3_value_type'] = function () {\n      return (_sqlite3_value_type = Module['_sqlite3_value_type'] =\n        Module['asm']['sqlite3_value_type']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_nochange = (Module['_sqlite3_value_nochange'] =\n      function () {\n        return (_sqlite3_value_nochange = Module['_sqlite3_value_nochange'] =\n          Module['asm']['sqlite3_value_nochange']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_frombind = (Module['_sqlite3_value_frombind'] =\n      function () {\n        return (_sqlite3_value_frombind = Module['_sqlite3_value_frombind'] =\n          Module['asm']['sqlite3_value_frombind']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_dup = (Module['_sqlite3_value_dup'] = function () {\n      return (_sqlite3_value_dup = Module['_sqlite3_value_dup'] =\n        Module['asm']['sqlite3_value_dup']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_free = (Module['_sqlite3_value_free'] = function () {\n      return (_sqlite3_value_free = Module['_sqlite3_value_free'] =\n        Module['asm']['sqlite3_value_free']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_blob = (Module['_sqlite3_result_blob'] = function () {\n      return (_sqlite3_result_blob = Module['_sqlite3_result_blob'] =\n        Module['asm']['sqlite3_result_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_error_nomem = (Module['_sqlite3_result_error_nomem'] =\n      function () {\n        return (_sqlite3_result_error_nomem = Module[\n          '_sqlite3_result_error_nomem'\n        ] =\n          Module['asm']['sqlite3_result_error_nomem']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_error_toobig = (Module['_sqlite3_result_error_toobig'] =\n      function () {\n        return (_sqlite3_result_error_toobig = Module[\n          '_sqlite3_result_error_toobig'\n        ] =\n          Module['asm']['sqlite3_result_error_toobig']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_double = (Module['_sqlite3_result_double'] =\n      function () {\n        return (_sqlite3_result_double = Module['_sqlite3_result_double'] =\n          Module['asm']['sqlite3_result_double']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_error = (Module['_sqlite3_result_error'] = function () {\n      return (_sqlite3_result_error = Module['_sqlite3_result_error'] =\n        Module['asm']['sqlite3_result_error']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_int = (Module['_sqlite3_result_int'] = function () {\n      return (_sqlite3_result_int = Module['_sqlite3_result_int'] =\n        Module['asm']['sqlite3_result_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_int64 = (Module['_sqlite3_result_int64'] = function () {\n      return (_sqlite3_result_int64 = Module['_sqlite3_result_int64'] =\n        Module['asm']['sqlite3_result_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_null = (Module['_sqlite3_result_null'] = function () {\n      return (_sqlite3_result_null = Module['_sqlite3_result_null'] =\n        Module['asm']['sqlite3_result_null']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_pointer = (Module['_sqlite3_result_pointer'] =\n      function () {\n        return (_sqlite3_result_pointer = Module['_sqlite3_result_pointer'] =\n          Module['asm']['sqlite3_result_pointer']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_subtype = (Module['_sqlite3_result_subtype'] =\n      function () {\n        return (_sqlite3_result_subtype = Module['_sqlite3_result_subtype'] =\n          Module['asm']['sqlite3_result_subtype']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_text = (Module['_sqlite3_result_text'] = function () {\n      return (_sqlite3_result_text = Module['_sqlite3_result_text'] =\n        Module['asm']['sqlite3_result_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_zeroblob = (Module['_sqlite3_result_zeroblob'] =\n      function () {\n        return (_sqlite3_result_zeroblob = Module['_sqlite3_result_zeroblob'] =\n          Module['asm']['sqlite3_result_zeroblob']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_zeroblob64 = (Module['_sqlite3_result_zeroblob64'] =\n      function () {\n        return (_sqlite3_result_zeroblob64 = Module[\n          '_sqlite3_result_zeroblob64'\n        ] =\n          Module['asm']['sqlite3_result_zeroblob64']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_error_code = (Module['_sqlite3_result_error_code'] =\n      function () {\n        return (_sqlite3_result_error_code = Module[\n          '_sqlite3_result_error_code'\n        ] =\n          Module['asm']['sqlite3_result_error_code']).apply(null, arguments);\n      });\n\n    var _sqlite3_user_data = (Module['_sqlite3_user_data'] = function () {\n      return (_sqlite3_user_data = Module['_sqlite3_user_data'] =\n        Module['asm']['sqlite3_user_data']).apply(null, arguments);\n    });\n\n    var _sqlite3_context_db_handle = (Module['_sqlite3_context_db_handle'] =\n      function () {\n        return (_sqlite3_context_db_handle = Module[\n          '_sqlite3_context_db_handle'\n        ] =\n          Module['asm']['sqlite3_context_db_handle']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_nochange = (Module['_sqlite3_vtab_nochange'] =\n      function () {\n        return (_sqlite3_vtab_nochange = Module['_sqlite3_vtab_nochange'] =\n          Module['asm']['sqlite3_vtab_nochange']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_in_first = (Module['_sqlite3_vtab_in_first'] =\n      function () {\n        return (_sqlite3_vtab_in_first = Module['_sqlite3_vtab_in_first'] =\n          Module['asm']['sqlite3_vtab_in_first']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_in_next = (Module['_sqlite3_vtab_in_next'] = function () {\n      return (_sqlite3_vtab_in_next = Module['_sqlite3_vtab_in_next'] =\n        Module['asm']['sqlite3_vtab_in_next']).apply(null, arguments);\n    });\n\n    var _sqlite3_aggregate_context = (Module['_sqlite3_aggregate_context'] =\n      function () {\n        return (_sqlite3_aggregate_context = Module[\n          '_sqlite3_aggregate_context'\n        ] =\n          Module['asm']['sqlite3_aggregate_context']).apply(null, arguments);\n      });\n\n    var _sqlite3_get_auxdata = (Module['_sqlite3_get_auxdata'] = function () {\n      return (_sqlite3_get_auxdata = Module['_sqlite3_get_auxdata'] =\n        Module['asm']['sqlite3_get_auxdata']).apply(null, arguments);\n    });\n\n    var _sqlite3_set_auxdata = (Module['_sqlite3_set_auxdata'] = function () {\n      return (_sqlite3_set_auxdata = Module['_sqlite3_set_auxdata'] =\n        Module['asm']['sqlite3_set_auxdata']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_count = (Module['_sqlite3_column_count'] = function () {\n      return (_sqlite3_column_count = Module['_sqlite3_column_count'] =\n        Module['asm']['sqlite3_column_count']).apply(null, arguments);\n    });\n\n    var _sqlite3_data_count = (Module['_sqlite3_data_count'] = function () {\n      return (_sqlite3_data_count = Module['_sqlite3_data_count'] =\n        Module['asm']['sqlite3_data_count']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_blob = (Module['_sqlite3_column_blob'] = function () {\n      return (_sqlite3_column_blob = Module['_sqlite3_column_blob'] =\n        Module['asm']['sqlite3_column_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_bytes = (Module['_sqlite3_column_bytes'] = function () {\n      return (_sqlite3_column_bytes = Module['_sqlite3_column_bytes'] =\n        Module['asm']['sqlite3_column_bytes']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_double = (Module['_sqlite3_column_double'] =\n      function () {\n        return (_sqlite3_column_double = Module['_sqlite3_column_double'] =\n          Module['asm']['sqlite3_column_double']).apply(null, arguments);\n      });\n\n    var _sqlite3_column_text = (Module['_sqlite3_column_text'] = function () {\n      return (_sqlite3_column_text = Module['_sqlite3_column_text'] =\n        Module['asm']['sqlite3_column_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_value = (Module['_sqlite3_column_value'] = function () {\n      return (_sqlite3_column_value = Module['_sqlite3_column_value'] =\n        Module['asm']['sqlite3_column_value']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_type = (Module['_sqlite3_column_type'] = function () {\n      return (_sqlite3_column_type = Module['_sqlite3_column_type'] =\n        Module['asm']['sqlite3_column_type']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_name = (Module['_sqlite3_column_name'] = function () {\n      return (_sqlite3_column_name = Module['_sqlite3_column_name'] =\n        Module['asm']['sqlite3_column_name']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_blob = (Module['_sqlite3_bind_blob'] = function () {\n      return (_sqlite3_bind_blob = Module['_sqlite3_bind_blob'] =\n        Module['asm']['sqlite3_bind_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_double = (Module['_sqlite3_bind_double'] = function () {\n      return (_sqlite3_bind_double = Module['_sqlite3_bind_double'] =\n        Module['asm']['sqlite3_bind_double']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_int = (Module['_sqlite3_bind_int'] = function () {\n      return (_sqlite3_bind_int = Module['_sqlite3_bind_int'] =\n        Module['asm']['sqlite3_bind_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_int64 = (Module['_sqlite3_bind_int64'] = function () {\n      return (_sqlite3_bind_int64 = Module['_sqlite3_bind_int64'] =\n        Module['asm']['sqlite3_bind_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_null = (Module['_sqlite3_bind_null'] = function () {\n      return (_sqlite3_bind_null = Module['_sqlite3_bind_null'] =\n        Module['asm']['sqlite3_bind_null']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_pointer = (Module['_sqlite3_bind_pointer'] = function () {\n      return (_sqlite3_bind_pointer = Module['_sqlite3_bind_pointer'] =\n        Module['asm']['sqlite3_bind_pointer']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_text = (Module['_sqlite3_bind_text'] = function () {\n      return (_sqlite3_bind_text = Module['_sqlite3_bind_text'] =\n        Module['asm']['sqlite3_bind_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_parameter_count = (Module[\n      '_sqlite3_bind_parameter_count'\n    ] = function () {\n      return (_sqlite3_bind_parameter_count = Module[\n        '_sqlite3_bind_parameter_count'\n      ] =\n        Module['asm']['sqlite3_bind_parameter_count']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_parameter_index = (Module[\n      '_sqlite3_bind_parameter_index'\n    ] = function () {\n      return (_sqlite3_bind_parameter_index = Module[\n        '_sqlite3_bind_parameter_index'\n      ] =\n        Module['asm']['sqlite3_bind_parameter_index']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_handle = (Module['_sqlite3_db_handle'] = function () {\n      return (_sqlite3_db_handle = Module['_sqlite3_db_handle'] =\n        Module['asm']['sqlite3_db_handle']).apply(null, arguments);\n    });\n\n    var _sqlite3_stmt_readonly = (Module['_sqlite3_stmt_readonly'] =\n      function () {\n        return (_sqlite3_stmt_readonly = Module['_sqlite3_stmt_readonly'] =\n          Module['asm']['sqlite3_stmt_readonly']).apply(null, arguments);\n      });\n\n    var _sqlite3_stmt_isexplain = (Module['_sqlite3_stmt_isexplain'] =\n      function () {\n        return (_sqlite3_stmt_isexplain = Module['_sqlite3_stmt_isexplain'] =\n          Module['asm']['sqlite3_stmt_isexplain']).apply(null, arguments);\n      });\n\n    var _sqlite3_stmt_status = (Module['_sqlite3_stmt_status'] = function () {\n      return (_sqlite3_stmt_status = Module['_sqlite3_stmt_status'] =\n        Module['asm']['sqlite3_stmt_status']).apply(null, arguments);\n    });\n\n    var _sqlite3_sql = (Module['_sqlite3_sql'] = function () {\n      return (_sqlite3_sql = Module['_sqlite3_sql'] =\n        Module['asm']['sqlite3_sql']).apply(null, arguments);\n    });\n\n    var _sqlite3_expanded_sql = (Module['_sqlite3_expanded_sql'] = function () {\n      return (_sqlite3_expanded_sql = Module['_sqlite3_expanded_sql'] =\n        Module['asm']['sqlite3_expanded_sql']).apply(null, arguments);\n    });\n\n    var _sqlite3_preupdate_old = (Module['_sqlite3_preupdate_old'] =\n      function () {\n        return (_sqlite3_preupdate_old = Module['_sqlite3_preupdate_old'] =\n          Module['asm']['sqlite3_preupdate_old']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_count = (Module['_sqlite3_preupdate_count'] =\n      function () {\n        return (_sqlite3_preupdate_count = Module['_sqlite3_preupdate_count'] =\n          Module['asm']['sqlite3_preupdate_count']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_depth = (Module['_sqlite3_preupdate_depth'] =\n      function () {\n        return (_sqlite3_preupdate_depth = Module['_sqlite3_preupdate_depth'] =\n          Module['asm']['sqlite3_preupdate_depth']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_blobwrite = (Module['_sqlite3_preupdate_blobwrite'] =\n      function () {\n        return (_sqlite3_preupdate_blobwrite = Module[\n          '_sqlite3_preupdate_blobwrite'\n        ] =\n          Module['asm']['sqlite3_preupdate_blobwrite']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_new = (Module['_sqlite3_preupdate_new'] =\n      function () {\n        return (_sqlite3_preupdate_new = Module['_sqlite3_preupdate_new'] =\n          Module['asm']['sqlite3_preupdate_new']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_numeric_type = (Module['_sqlite3_value_numeric_type'] =\n      function () {\n        return (_sqlite3_value_numeric_type = Module[\n          '_sqlite3_value_numeric_type'\n        ] =\n          Module['asm']['sqlite3_value_numeric_type']).apply(null, arguments);\n      });\n\n    var _sqlite3_errmsg = (Module['_sqlite3_errmsg'] = function () {\n      return (_sqlite3_errmsg = Module['_sqlite3_errmsg'] =\n        Module['asm']['sqlite3_errmsg']).apply(null, arguments);\n    });\n\n    var _sqlite3_set_authorizer = (Module['_sqlite3_set_authorizer'] =\n      function () {\n        return (_sqlite3_set_authorizer = Module['_sqlite3_set_authorizer'] =\n          Module['asm']['sqlite3_set_authorizer']).apply(null, arguments);\n      });\n\n    var _sqlite3_strglob = (Module['_sqlite3_strglob'] = function () {\n      return (_sqlite3_strglob = Module['_sqlite3_strglob'] =\n        Module['asm']['sqlite3_strglob']).apply(null, arguments);\n    });\n\n    var _sqlite3_strlike = (Module['_sqlite3_strlike'] = function () {\n      return (_sqlite3_strlike = Module['_sqlite3_strlike'] =\n        Module['asm']['sqlite3_strlike']).apply(null, arguments);\n    });\n\n    var _sqlite3_exec = (Module['_sqlite3_exec'] = function () {\n      return (_sqlite3_exec = Module['_sqlite3_exec'] =\n        Module['asm']['sqlite3_exec']).apply(null, arguments);\n    });\n\n    var _sqlite3_auto_extension = (Module['_sqlite3_auto_extension'] =\n      function () {\n        return (_sqlite3_auto_extension = Module['_sqlite3_auto_extension'] =\n          Module['asm']['sqlite3_auto_extension']).apply(null, arguments);\n      });\n\n    var _sqlite3_cancel_auto_extension = (Module[\n      '_sqlite3_cancel_auto_extension'\n    ] = function () {\n      return (_sqlite3_cancel_auto_extension = Module[\n        '_sqlite3_cancel_auto_extension'\n      ] =\n        Module['asm']['sqlite3_cancel_auto_extension']).apply(null, arguments);\n    });\n\n    var _sqlite3_reset_auto_extension = (Module[\n      '_sqlite3_reset_auto_extension'\n    ] = function () {\n      return (_sqlite3_reset_auto_extension = Module[\n        '_sqlite3_reset_auto_extension'\n      ] =\n        Module['asm']['sqlite3_reset_auto_extension']).apply(null, arguments);\n    });\n\n    var _sqlite3_prepare_v3 = (Module['_sqlite3_prepare_v3'] = function () {\n      return (_sqlite3_prepare_v3 = Module['_sqlite3_prepare_v3'] =\n        Module['asm']['sqlite3_prepare_v3']).apply(null, arguments);\n    });\n\n    var _sqlite3_create_module = (Module['_sqlite3_create_module'] =\n      function () {\n        return (_sqlite3_create_module = Module['_sqlite3_create_module'] =\n          Module['asm']['sqlite3_create_module']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_module_v2 = (Module['_sqlite3_create_module_v2'] =\n      function () {\n        return (_sqlite3_create_module_v2 = Module[\n          '_sqlite3_create_module_v2'\n        ] =\n          Module['asm']['sqlite3_create_module_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3_drop_modules = (Module['_sqlite3_drop_modules'] = function () {\n      return (_sqlite3_drop_modules = Module['_sqlite3_drop_modules'] =\n        Module['asm']['sqlite3_drop_modules']).apply(null, arguments);\n    });\n\n    var _sqlite3_declare_vtab = (Module['_sqlite3_declare_vtab'] = function () {\n      return (_sqlite3_declare_vtab = Module['_sqlite3_declare_vtab'] =\n        Module['asm']['sqlite3_declare_vtab']).apply(null, arguments);\n    });\n\n    var _sqlite3_vtab_on_conflict = (Module['_sqlite3_vtab_on_conflict'] =\n      function () {\n        return (_sqlite3_vtab_on_conflict = Module[\n          '_sqlite3_vtab_on_conflict'\n        ] =\n          Module['asm']['sqlite3_vtab_on_conflict']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_collation = (Module['_sqlite3_vtab_collation'] =\n      function () {\n        return (_sqlite3_vtab_collation = Module['_sqlite3_vtab_collation'] =\n          Module['asm']['sqlite3_vtab_collation']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_in = (Module['_sqlite3_vtab_in'] = function () {\n      return (_sqlite3_vtab_in = Module['_sqlite3_vtab_in'] =\n        Module['asm']['sqlite3_vtab_in']).apply(null, arguments);\n    });\n\n    var _sqlite3_vtab_rhs_value = (Module['_sqlite3_vtab_rhs_value'] =\n      function () {\n        return (_sqlite3_vtab_rhs_value = Module['_sqlite3_vtab_rhs_value'] =\n          Module['asm']['sqlite3_vtab_rhs_value']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_distinct = (Module['_sqlite3_vtab_distinct'] =\n      function () {\n        return (_sqlite3_vtab_distinct = Module['_sqlite3_vtab_distinct'] =\n          Module['asm']['sqlite3_vtab_distinct']).apply(null, arguments);\n      });\n\n    var _sqlite3_keyword_name = (Module['_sqlite3_keyword_name'] = function () {\n      return (_sqlite3_keyword_name = Module['_sqlite3_keyword_name'] =\n        Module['asm']['sqlite3_keyword_name']).apply(null, arguments);\n    });\n\n    var _sqlite3_keyword_count = (Module['_sqlite3_keyword_count'] =\n      function () {\n        return (_sqlite3_keyword_count = Module['_sqlite3_keyword_count'] =\n          Module['asm']['sqlite3_keyword_count']).apply(null, arguments);\n      });\n\n    var _sqlite3_keyword_check = (Module['_sqlite3_keyword_check'] =\n      function () {\n        return (_sqlite3_keyword_check = Module['_sqlite3_keyword_check'] =\n          Module['asm']['sqlite3_keyword_check']).apply(null, arguments);\n      });\n\n    var _sqlite3_complete = (Module['_sqlite3_complete'] = function () {\n      return (_sqlite3_complete = Module['_sqlite3_complete'] =\n        Module['asm']['sqlite3_complete']).apply(null, arguments);\n    });\n\n    var _sqlite3_libversion = (Module['_sqlite3_libversion'] = function () {\n      return (_sqlite3_libversion = Module['_sqlite3_libversion'] =\n        Module['asm']['sqlite3_libversion']).apply(null, arguments);\n    });\n\n    var _sqlite3_libversion_number = (Module['_sqlite3_libversion_number'] =\n      function () {\n        return (_sqlite3_libversion_number = Module[\n          '_sqlite3_libversion_number'\n        ] =\n          Module['asm']['sqlite3_libversion_number']).apply(null, arguments);\n      });\n\n    var _sqlite3_shutdown = (Module['_sqlite3_shutdown'] = function () {\n      return (_sqlite3_shutdown = Module['_sqlite3_shutdown'] =\n        Module['asm']['sqlite3_shutdown']).apply(null, arguments);\n    });\n\n    var _sqlite3_last_insert_rowid = (Module['_sqlite3_last_insert_rowid'] =\n      function () {\n        return (_sqlite3_last_insert_rowid = Module[\n          '_sqlite3_last_insert_rowid'\n        ] =\n          Module['asm']['sqlite3_last_insert_rowid']).apply(null, arguments);\n      });\n\n    var _sqlite3_set_last_insert_rowid = (Module[\n      '_sqlite3_set_last_insert_rowid'\n    ] = function () {\n      return (_sqlite3_set_last_insert_rowid = Module[\n        '_sqlite3_set_last_insert_rowid'\n      ] =\n        Module['asm']['sqlite3_set_last_insert_rowid']).apply(null, arguments);\n    });\n\n    var _sqlite3_changes64 = (Module['_sqlite3_changes64'] = function () {\n      return (_sqlite3_changes64 = Module['_sqlite3_changes64'] =\n        Module['asm']['sqlite3_changes64']).apply(null, arguments);\n    });\n\n    var _sqlite3_changes = (Module['_sqlite3_changes'] = function () {\n      return (_sqlite3_changes = Module['_sqlite3_changes'] =\n        Module['asm']['sqlite3_changes']).apply(null, arguments);\n    });\n\n    var _sqlite3_total_changes64 = (Module['_sqlite3_total_changes64'] =\n      function () {\n        return (_sqlite3_total_changes64 = Module['_sqlite3_total_changes64'] =\n          Module['asm']['sqlite3_total_changes64']).apply(null, arguments);\n      });\n\n    var _sqlite3_total_changes = (Module['_sqlite3_total_changes'] =\n      function () {\n        return (_sqlite3_total_changes = Module['_sqlite3_total_changes'] =\n          Module['asm']['sqlite3_total_changes']).apply(null, arguments);\n      });\n\n    var _sqlite3_txn_state = (Module['_sqlite3_txn_state'] = function () {\n      return (_sqlite3_txn_state = Module['_sqlite3_txn_state'] =\n        Module['asm']['sqlite3_txn_state']).apply(null, arguments);\n    });\n\n    var _sqlite3_close_v2 = (Module['_sqlite3_close_v2'] = function () {\n      return (_sqlite3_close_v2 = Module['_sqlite3_close_v2'] =\n        Module['asm']['sqlite3_close_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_busy_handler = (Module['_sqlite3_busy_handler'] = function () {\n      return (_sqlite3_busy_handler = Module['_sqlite3_busy_handler'] =\n        Module['asm']['sqlite3_busy_handler']).apply(null, arguments);\n    });\n\n    var _sqlite3_progress_handler = (Module['_sqlite3_progress_handler'] =\n      function () {\n        return (_sqlite3_progress_handler = Module[\n          '_sqlite3_progress_handler'\n        ] =\n          Module['asm']['sqlite3_progress_handler']).apply(null, arguments);\n      });\n\n    var _sqlite3_busy_timeout = (Module['_sqlite3_busy_timeout'] = function () {\n      return (_sqlite3_busy_timeout = Module['_sqlite3_busy_timeout'] =\n        Module['asm']['sqlite3_busy_timeout']).apply(null, arguments);\n    });\n\n    var _sqlite3_create_function = (Module['_sqlite3_create_function'] =\n      function () {\n        return (_sqlite3_create_function = Module['_sqlite3_create_function'] =\n          Module['asm']['sqlite3_create_function']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_function_v2 = (Module['_sqlite3_create_function_v2'] =\n      function () {\n        return (_sqlite3_create_function_v2 = Module[\n          '_sqlite3_create_function_v2'\n        ] =\n          Module['asm']['sqlite3_create_function_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_window_function = (Module[\n      '_sqlite3_create_window_function'\n    ] = function () {\n      return (_sqlite3_create_window_function = Module[\n        '_sqlite3_create_window_function'\n      ] =\n        Module['asm']['sqlite3_create_window_function']).apply(null, arguments);\n    });\n\n    var _sqlite3_overload_function = (Module['_sqlite3_overload_function'] =\n      function () {\n        return (_sqlite3_overload_function = Module[\n          '_sqlite3_overload_function'\n        ] =\n          Module['asm']['sqlite3_overload_function']).apply(null, arguments);\n      });\n\n    var _sqlite3_trace_v2 = (Module['_sqlite3_trace_v2'] = function () {\n      return (_sqlite3_trace_v2 = Module['_sqlite3_trace_v2'] =\n        Module['asm']['sqlite3_trace_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_commit_hook = (Module['_sqlite3_commit_hook'] = function () {\n      return (_sqlite3_commit_hook = Module['_sqlite3_commit_hook'] =\n        Module['asm']['sqlite3_commit_hook']).apply(null, arguments);\n    });\n\n    var _sqlite3_update_hook = (Module['_sqlite3_update_hook'] = function () {\n      return (_sqlite3_update_hook = Module['_sqlite3_update_hook'] =\n        Module['asm']['sqlite3_update_hook']).apply(null, arguments);\n    });\n\n    var _sqlite3_rollback_hook = (Module['_sqlite3_rollback_hook'] =\n      function () {\n        return (_sqlite3_rollback_hook = Module['_sqlite3_rollback_hook'] =\n          Module['asm']['sqlite3_rollback_hook']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_hook = (Module['_sqlite3_preupdate_hook'] =\n      function () {\n        return (_sqlite3_preupdate_hook = Module['_sqlite3_preupdate_hook'] =\n          Module['asm']['sqlite3_preupdate_hook']).apply(null, arguments);\n      });\n\n    var _sqlite3_error_offset = (Module['_sqlite3_error_offset'] = function () {\n      return (_sqlite3_error_offset = Module['_sqlite3_error_offset'] =\n        Module['asm']['sqlite3_error_offset']).apply(null, arguments);\n    });\n\n    var _sqlite3_errcode = (Module['_sqlite3_errcode'] = function () {\n      return (_sqlite3_errcode = Module['_sqlite3_errcode'] =\n        Module['asm']['sqlite3_errcode']).apply(null, arguments);\n    });\n\n    var _sqlite3_extended_errcode = (Module['_sqlite3_extended_errcode'] =\n      function () {\n        return (_sqlite3_extended_errcode = Module[\n          '_sqlite3_extended_errcode'\n        ] =\n          Module['asm']['sqlite3_extended_errcode']).apply(null, arguments);\n      });\n\n    var _sqlite3_errstr = (Module['_sqlite3_errstr'] = function () {\n      return (_sqlite3_errstr = Module['_sqlite3_errstr'] =\n        Module['asm']['sqlite3_errstr']).apply(null, arguments);\n    });\n\n    var _sqlite3_limit = (Module['_sqlite3_limit'] = function () {\n      return (_sqlite3_limit = Module['_sqlite3_limit'] =\n        Module['asm']['sqlite3_limit']).apply(null, arguments);\n    });\n\n    var _sqlite3_open = (Module['_sqlite3_open'] = function () {\n      return (_sqlite3_open = Module['_sqlite3_open'] =\n        Module['asm']['sqlite3_open']).apply(null, arguments);\n    });\n\n    var _sqlite3_open_v2 = (Module['_sqlite3_open_v2'] = function () {\n      return (_sqlite3_open_v2 = Module['_sqlite3_open_v2'] =\n        Module['asm']['sqlite3_open_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_create_collation = (Module['_sqlite3_create_collation'] =\n      function () {\n        return (_sqlite3_create_collation = Module[\n          '_sqlite3_create_collation'\n        ] =\n          Module['asm']['sqlite3_create_collation']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_collation_v2 = (Module['_sqlite3_create_collation_v2'] =\n      function () {\n        return (_sqlite3_create_collation_v2 = Module[\n          '_sqlite3_create_collation_v2'\n        ] =\n          Module['asm']['sqlite3_create_collation_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3_collation_needed = (Module['_sqlite3_collation_needed'] =\n      function () {\n        return (_sqlite3_collation_needed = Module[\n          '_sqlite3_collation_needed'\n        ] =\n          Module['asm']['sqlite3_collation_needed']).apply(null, arguments);\n      });\n\n    var _sqlite3_table_column_metadata = (Module[\n      '_sqlite3_table_column_metadata'\n    ] = function () {\n      return (_sqlite3_table_column_metadata = Module[\n        '_sqlite3_table_column_metadata'\n      ] =\n        Module['asm']['sqlite3_table_column_metadata']).apply(null, arguments);\n    });\n\n    var _sqlite3_extended_result_codes = (Module[\n      '_sqlite3_extended_result_codes'\n    ] = function () {\n      return (_sqlite3_extended_result_codes = Module[\n        '_sqlite3_extended_result_codes'\n      ] =\n        Module['asm']['sqlite3_extended_result_codes']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_key = (Module['_sqlite3_uri_key'] = function () {\n      return (_sqlite3_uri_key = Module['_sqlite3_uri_key'] =\n        Module['asm']['sqlite3_uri_key']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_int64 = (Module['_sqlite3_uri_int64'] = function () {\n      return (_sqlite3_uri_int64 = Module['_sqlite3_uri_int64'] =\n        Module['asm']['sqlite3_uri_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_name = (Module['_sqlite3_db_name'] = function () {\n      return (_sqlite3_db_name = Module['_sqlite3_db_name'] =\n        Module['asm']['sqlite3_db_name']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_filename = (Module['_sqlite3_db_filename'] = function () {\n      return (_sqlite3_db_filename = Module['_sqlite3_db_filename'] =\n        Module['asm']['sqlite3_db_filename']).apply(null, arguments);\n    });\n\n    var _sqlite3_compileoption_used = (Module['_sqlite3_compileoption_used'] =\n      function () {\n        return (_sqlite3_compileoption_used = Module[\n          '_sqlite3_compileoption_used'\n        ] =\n          Module['asm']['sqlite3_compileoption_used']).apply(null, arguments);\n      });\n\n    var _sqlite3_compileoption_get = (Module['_sqlite3_compileoption_get'] =\n      function () {\n        return (_sqlite3_compileoption_get = Module[\n          '_sqlite3_compileoption_get'\n        ] =\n          Module['asm']['sqlite3_compileoption_get']).apply(null, arguments);\n      });\n\n    var _sqlite3session_diff = (Module['_sqlite3session_diff'] = function () {\n      return (_sqlite3session_diff = Module['_sqlite3session_diff'] =\n        Module['asm']['sqlite3session_diff']).apply(null, arguments);\n    });\n\n    var _sqlite3session_attach = (Module['_sqlite3session_attach'] =\n      function () {\n        return (_sqlite3session_attach = Module['_sqlite3session_attach'] =\n          Module['asm']['sqlite3session_attach']).apply(null, arguments);\n      });\n\n    var _sqlite3session_create = (Module['_sqlite3session_create'] =\n      function () {\n        return (_sqlite3session_create = Module['_sqlite3session_create'] =\n          Module['asm']['sqlite3session_create']).apply(null, arguments);\n      });\n\n    var _sqlite3session_delete = (Module['_sqlite3session_delete'] =\n      function () {\n        return (_sqlite3session_delete = Module['_sqlite3session_delete'] =\n          Module['asm']['sqlite3session_delete']).apply(null, arguments);\n      });\n\n    var _sqlite3session_table_filter = (Module['_sqlite3session_table_filter'] =\n      function () {\n        return (_sqlite3session_table_filter = Module[\n          '_sqlite3session_table_filter'\n        ] =\n          Module['asm']['sqlite3session_table_filter']).apply(null, arguments);\n      });\n\n    var _sqlite3session_changeset = (Module['_sqlite3session_changeset'] =\n      function () {\n        return (_sqlite3session_changeset = Module[\n          '_sqlite3session_changeset'\n        ] =\n          Module['asm']['sqlite3session_changeset']).apply(null, arguments);\n      });\n\n    var _sqlite3session_changeset_strm = (Module[\n      '_sqlite3session_changeset_strm'\n    ] = function () {\n      return (_sqlite3session_changeset_strm = Module[\n        '_sqlite3session_changeset_strm'\n      ] =\n        Module['asm']['sqlite3session_changeset_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3session_patchset_strm = (Module[\n      '_sqlite3session_patchset_strm'\n    ] = function () {\n      return (_sqlite3session_patchset_strm = Module[\n        '_sqlite3session_patchset_strm'\n      ] =\n        Module['asm']['sqlite3session_patchset_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3session_patchset = (Module['_sqlite3session_patchset'] =\n      function () {\n        return (_sqlite3session_patchset = Module['_sqlite3session_patchset'] =\n          Module['asm']['sqlite3session_patchset']).apply(null, arguments);\n      });\n\n    var _sqlite3session_enable = (Module['_sqlite3session_enable'] =\n      function () {\n        return (_sqlite3session_enable = Module['_sqlite3session_enable'] =\n          Module['asm']['sqlite3session_enable']).apply(null, arguments);\n      });\n\n    var _sqlite3session_indirect = (Module['_sqlite3session_indirect'] =\n      function () {\n        return (_sqlite3session_indirect = Module['_sqlite3session_indirect'] =\n          Module['asm']['sqlite3session_indirect']).apply(null, arguments);\n      });\n\n    var _sqlite3session_isempty = (Module['_sqlite3session_isempty'] =\n      function () {\n        return (_sqlite3session_isempty = Module['_sqlite3session_isempty'] =\n          Module['asm']['sqlite3session_isempty']).apply(null, arguments);\n      });\n\n    var _sqlite3session_memory_used = (Module['_sqlite3session_memory_used'] =\n      function () {\n        return (_sqlite3session_memory_used = Module[\n          '_sqlite3session_memory_used'\n        ] =\n          Module['asm']['sqlite3session_memory_used']).apply(null, arguments);\n      });\n\n    var _sqlite3session_object_config = (Module[\n      '_sqlite3session_object_config'\n    ] = function () {\n      return (_sqlite3session_object_config = Module[\n        '_sqlite3session_object_config'\n      ] =\n        Module['asm']['sqlite3session_object_config']).apply(null, arguments);\n    });\n\n    var _sqlite3session_changeset_size = (Module[\n      '_sqlite3session_changeset_size'\n    ] = function () {\n      return (_sqlite3session_changeset_size = Module[\n        '_sqlite3session_changeset_size'\n      ] =\n        Module['asm']['sqlite3session_changeset_size']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_start = (Module['_sqlite3changeset_start'] =\n      function () {\n        return (_sqlite3changeset_start = Module['_sqlite3changeset_start'] =\n          Module['asm']['sqlite3changeset_start']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_start_v2 = (Module['_sqlite3changeset_start_v2'] =\n      function () {\n        return (_sqlite3changeset_start_v2 = Module[\n          '_sqlite3changeset_start_v2'\n        ] =\n          Module['asm']['sqlite3changeset_start_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_start_strm = (Module['_sqlite3changeset_start_strm'] =\n      function () {\n        return (_sqlite3changeset_start_strm = Module[\n          '_sqlite3changeset_start_strm'\n        ] =\n          Module['asm']['sqlite3changeset_start_strm']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_start_v2_strm = (Module[\n      '_sqlite3changeset_start_v2_strm'\n    ] = function () {\n      return (_sqlite3changeset_start_v2_strm = Module[\n        '_sqlite3changeset_start_v2_strm'\n      ] =\n        Module['asm']['sqlite3changeset_start_v2_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_next = (Module['_sqlite3changeset_next'] =\n      function () {\n        return (_sqlite3changeset_next = Module['_sqlite3changeset_next'] =\n          Module['asm']['sqlite3changeset_next']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_op = (Module['_sqlite3changeset_op'] = function () {\n      return (_sqlite3changeset_op = Module['_sqlite3changeset_op'] =\n        Module['asm']['sqlite3changeset_op']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_pk = (Module['_sqlite3changeset_pk'] = function () {\n      return (_sqlite3changeset_pk = Module['_sqlite3changeset_pk'] =\n        Module['asm']['sqlite3changeset_pk']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_old = (Module['_sqlite3changeset_old'] = function () {\n      return (_sqlite3changeset_old = Module['_sqlite3changeset_old'] =\n        Module['asm']['sqlite3changeset_old']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_new = (Module['_sqlite3changeset_new'] = function () {\n      return (_sqlite3changeset_new = Module['_sqlite3changeset_new'] =\n        Module['asm']['sqlite3changeset_new']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_conflict = (Module['_sqlite3changeset_conflict'] =\n      function () {\n        return (_sqlite3changeset_conflict = Module[\n          '_sqlite3changeset_conflict'\n        ] =\n          Module['asm']['sqlite3changeset_conflict']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_fk_conflicts = (Module[\n      '_sqlite3changeset_fk_conflicts'\n    ] = function () {\n      return (_sqlite3changeset_fk_conflicts = Module[\n        '_sqlite3changeset_fk_conflicts'\n      ] =\n        Module['asm']['sqlite3changeset_fk_conflicts']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_finalize = (Module['_sqlite3changeset_finalize'] =\n      function () {\n        return (_sqlite3changeset_finalize = Module[\n          '_sqlite3changeset_finalize'\n        ] =\n          Module['asm']['sqlite3changeset_finalize']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_invert = (Module['_sqlite3changeset_invert'] =\n      function () {\n        return (_sqlite3changeset_invert = Module['_sqlite3changeset_invert'] =\n          Module['asm']['sqlite3changeset_invert']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_invert_strm = (Module[\n      '_sqlite3changeset_invert_strm'\n    ] = function () {\n      return (_sqlite3changeset_invert_strm = Module[\n        '_sqlite3changeset_invert_strm'\n      ] =\n        Module['asm']['sqlite3changeset_invert_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_apply_v2 = (Module['_sqlite3changeset_apply_v2'] =\n      function () {\n        return (_sqlite3changeset_apply_v2 = Module[\n          '_sqlite3changeset_apply_v2'\n        ] =\n          Module['asm']['sqlite3changeset_apply_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_apply = (Module['_sqlite3changeset_apply'] =\n      function () {\n        return (_sqlite3changeset_apply = Module['_sqlite3changeset_apply'] =\n          Module['asm']['sqlite3changeset_apply']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_apply_v2_strm = (Module[\n      '_sqlite3changeset_apply_v2_strm'\n    ] = function () {\n      return (_sqlite3changeset_apply_v2_strm = Module[\n        '_sqlite3changeset_apply_v2_strm'\n      ] =\n        Module['asm']['sqlite3changeset_apply_v2_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_apply_strm = (Module['_sqlite3changeset_apply_strm'] =\n      function () {\n        return (_sqlite3changeset_apply_strm = Module[\n          '_sqlite3changeset_apply_strm'\n        ] =\n          Module['asm']['sqlite3changeset_apply_strm']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_new = (Module['_sqlite3changegroup_new'] =\n      function () {\n        return (_sqlite3changegroup_new = Module['_sqlite3changegroup_new'] =\n          Module['asm']['sqlite3changegroup_new']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_add = (Module['_sqlite3changegroup_add'] =\n      function () {\n        return (_sqlite3changegroup_add = Module['_sqlite3changegroup_add'] =\n          Module['asm']['sqlite3changegroup_add']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_output = (Module['_sqlite3changegroup_output'] =\n      function () {\n        return (_sqlite3changegroup_output = Module[\n          '_sqlite3changegroup_output'\n        ] =\n          Module['asm']['sqlite3changegroup_output']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_add_strm = (Module['_sqlite3changegroup_add_strm'] =\n      function () {\n        return (_sqlite3changegroup_add_strm = Module[\n          '_sqlite3changegroup_add_strm'\n        ] =\n          Module['asm']['sqlite3changegroup_add_strm']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_output_strm = (Module[\n      '_sqlite3changegroup_output_strm'\n    ] = function () {\n      return (_sqlite3changegroup_output_strm = Module[\n        '_sqlite3changegroup_output_strm'\n      ] =\n        Module['asm']['sqlite3changegroup_output_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changegroup_delete = (Module['_sqlite3changegroup_delete'] =\n      function () {\n        return (_sqlite3changegroup_delete = Module[\n          '_sqlite3changegroup_delete'\n        ] =\n          Module['asm']['sqlite3changegroup_delete']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_concat = (Module['_sqlite3changeset_concat'] =\n      function () {\n        return (_sqlite3changeset_concat = Module['_sqlite3changeset_concat'] =\n          Module['asm']['sqlite3changeset_concat']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_concat_strm = (Module[\n      '_sqlite3changeset_concat_strm'\n    ] = function () {\n      return (_sqlite3changeset_concat_strm = Module[\n        '_sqlite3changeset_concat_strm'\n      ] =\n        Module['asm']['sqlite3changeset_concat_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3session_config = (Module['_sqlite3session_config'] =\n      function () {\n        return (_sqlite3session_config = Module['_sqlite3session_config'] =\n          Module['asm']['sqlite3session_config']).apply(null, arguments);\n      });\n\n    var _sqlite3_sourceid = (Module['_sqlite3_sourceid'] = function () {\n      return (_sqlite3_sourceid = Module['_sqlite3_sourceid'] =\n        Module['asm']['sqlite3_sourceid']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_pstack_ptr = (Module['_sqlite3_wasm_pstack_ptr'] =\n      function () {\n        return (_sqlite3_wasm_pstack_ptr = Module['_sqlite3_wasm_pstack_ptr'] =\n          Module['asm']['sqlite3_wasm_pstack_ptr']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_pstack_restore = (Module['_sqlite3_wasm_pstack_restore'] =\n      function () {\n        return (_sqlite3_wasm_pstack_restore = Module[\n          '_sqlite3_wasm_pstack_restore'\n        ] =\n          Module['asm']['sqlite3_wasm_pstack_restore']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_pstack_alloc = (Module['_sqlite3_wasm_pstack_alloc'] =\n      function () {\n        return (_sqlite3_wasm_pstack_alloc = Module[\n          '_sqlite3_wasm_pstack_alloc'\n        ] =\n          Module['asm']['sqlite3_wasm_pstack_alloc']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_pstack_remaining = (Module[\n      '_sqlite3_wasm_pstack_remaining'\n    ] = function () {\n      return (_sqlite3_wasm_pstack_remaining = Module[\n        '_sqlite3_wasm_pstack_remaining'\n      ] =\n        Module['asm']['sqlite3_wasm_pstack_remaining']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_pstack_quota = (Module['_sqlite3_wasm_pstack_quota'] =\n      function () {\n        return (_sqlite3_wasm_pstack_quota = Module[\n          '_sqlite3_wasm_pstack_quota'\n        ] =\n          Module['asm']['sqlite3_wasm_pstack_quota']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_error = (Module['_sqlite3_wasm_db_error'] =\n      function () {\n        return (_sqlite3_wasm_db_error = Module['_sqlite3_wasm_db_error'] =\n          Module['asm']['sqlite3_wasm_db_error']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_struct = (Module['_sqlite3_wasm_test_struct'] =\n      function () {\n        return (_sqlite3_wasm_test_struct = Module[\n          '_sqlite3_wasm_test_struct'\n        ] =\n          Module['asm']['sqlite3_wasm_test_struct']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_enum_json = (Module['_sqlite3_wasm_enum_json'] =\n      function () {\n        return (_sqlite3_wasm_enum_json = Module['_sqlite3_wasm_enum_json'] =\n          Module['asm']['sqlite3_wasm_enum_json']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_vfs_unlink = (Module['_sqlite3_wasm_vfs_unlink'] =\n      function () {\n        return (_sqlite3_wasm_vfs_unlink = Module['_sqlite3_wasm_vfs_unlink'] =\n          Module['asm']['sqlite3_wasm_vfs_unlink']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_vfs = (Module['_sqlite3_wasm_db_vfs'] = function () {\n      return (_sqlite3_wasm_db_vfs = Module['_sqlite3_wasm_db_vfs'] =\n        Module['asm']['sqlite3_wasm_db_vfs']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_db_reset = (Module['_sqlite3_wasm_db_reset'] =\n      function () {\n        return (_sqlite3_wasm_db_reset = Module['_sqlite3_wasm_db_reset'] =\n          Module['asm']['sqlite3_wasm_db_reset']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_export_chunked = (Module[\n      '_sqlite3_wasm_db_export_chunked'\n    ] = function () {\n      return (_sqlite3_wasm_db_export_chunked = Module[\n        '_sqlite3_wasm_db_export_chunked'\n      ] =\n        Module['asm']['sqlite3_wasm_db_export_chunked']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_db_serialize = (Module['_sqlite3_wasm_db_serialize'] =\n      function () {\n        return (_sqlite3_wasm_db_serialize = Module[\n          '_sqlite3_wasm_db_serialize'\n        ] =\n          Module['asm']['sqlite3_wasm_db_serialize']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_vfs_create_file = (Module[\n      '_sqlite3_wasm_vfs_create_file'\n    ] = function () {\n      return (_sqlite3_wasm_vfs_create_file = Module[\n        '_sqlite3_wasm_vfs_create_file'\n      ] =\n        Module['asm']['sqlite3_wasm_vfs_create_file']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_posix_create_file = (Module[\n      '_sqlite3_wasm_posix_create_file'\n    ] = function () {\n      return (_sqlite3_wasm_posix_create_file = Module[\n        '_sqlite3_wasm_posix_create_file'\n      ] =\n        Module['asm']['sqlite3_wasm_posix_create_file']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_kvvfsMakeKeyOnPstack = (Module[\n      '_sqlite3_wasm_kvvfsMakeKeyOnPstack'\n    ] = function () {\n      return (_sqlite3_wasm_kvvfsMakeKeyOnPstack = Module[\n        '_sqlite3_wasm_kvvfsMakeKeyOnPstack'\n      ] =\n        Module['asm']['sqlite3_wasm_kvvfsMakeKeyOnPstack']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3_wasm_kvvfs_methods = (Module['_sqlite3_wasm_kvvfs_methods'] =\n      function () {\n        return (_sqlite3_wasm_kvvfs_methods = Module[\n          '_sqlite3_wasm_kvvfs_methods'\n        ] =\n          Module['asm']['sqlite3_wasm_kvvfs_methods']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_vtab_config = (Module['_sqlite3_wasm_vtab_config'] =\n      function () {\n        return (_sqlite3_wasm_vtab_config = Module[\n          '_sqlite3_wasm_vtab_config'\n        ] =\n          Module['asm']['sqlite3_wasm_vtab_config']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_config_ip = (Module['_sqlite3_wasm_db_config_ip'] =\n      function () {\n        return (_sqlite3_wasm_db_config_ip = Module[\n          '_sqlite3_wasm_db_config_ip'\n        ] =\n          Module['asm']['sqlite3_wasm_db_config_ip']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_config_pii = (Module['_sqlite3_wasm_db_config_pii'] =\n      function () {\n        return (_sqlite3_wasm_db_config_pii = Module[\n          '_sqlite3_wasm_db_config_pii'\n        ] =\n          Module['asm']['sqlite3_wasm_db_config_pii']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_config_s = (Module['_sqlite3_wasm_db_config_s'] =\n      function () {\n        return (_sqlite3_wasm_db_config_s = Module[\n          '_sqlite3_wasm_db_config_s'\n        ] =\n          Module['asm']['sqlite3_wasm_db_config_s']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_config_i = (Module['_sqlite3_wasm_config_i'] =\n      function () {\n        return (_sqlite3_wasm_config_i = Module['_sqlite3_wasm_config_i'] =\n          Module['asm']['sqlite3_wasm_config_i']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_config_ii = (Module['_sqlite3_wasm_config_ii'] =\n      function () {\n        return (_sqlite3_wasm_config_ii = Module['_sqlite3_wasm_config_ii'] =\n          Module['asm']['sqlite3_wasm_config_ii']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_config_j = (Module['_sqlite3_wasm_config_j'] =\n      function () {\n        return (_sqlite3_wasm_config_j = Module['_sqlite3_wasm_config_j'] =\n          Module['asm']['sqlite3_wasm_config_j']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_init_wasmfs = (Module['_sqlite3_wasm_init_wasmfs'] =\n      function () {\n        return (_sqlite3_wasm_init_wasmfs = Module[\n          '_sqlite3_wasm_init_wasmfs'\n        ] =\n          Module['asm']['sqlite3_wasm_init_wasmfs']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_intptr = (Module['_sqlite3_wasm_test_intptr'] =\n      function () {\n        return (_sqlite3_wasm_test_intptr = Module[\n          '_sqlite3_wasm_test_intptr'\n        ] =\n          Module['asm']['sqlite3_wasm_test_intptr']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_voidptr = (Module['_sqlite3_wasm_test_voidptr'] =\n      function () {\n        return (_sqlite3_wasm_test_voidptr = Module[\n          '_sqlite3_wasm_test_voidptr'\n        ] =\n          Module['asm']['sqlite3_wasm_test_voidptr']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_int64_max = (Module['_sqlite3_wasm_test_int64_max'] =\n      function () {\n        return (_sqlite3_wasm_test_int64_max = Module[\n          '_sqlite3_wasm_test_int64_max'\n        ] =\n          Module['asm']['sqlite3_wasm_test_int64_max']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_int64_min = (Module['_sqlite3_wasm_test_int64_min'] =\n      function () {\n        return (_sqlite3_wasm_test_int64_min = Module[\n          '_sqlite3_wasm_test_int64_min'\n        ] =\n          Module['asm']['sqlite3_wasm_test_int64_min']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_int64_times2 = (Module[\n      '_sqlite3_wasm_test_int64_times2'\n    ] = function () {\n      return (_sqlite3_wasm_test_int64_times2 = Module[\n        '_sqlite3_wasm_test_int64_times2'\n      ] =\n        Module['asm']['sqlite3_wasm_test_int64_times2']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_test_int64_minmax = (Module[\n      '_sqlite3_wasm_test_int64_minmax'\n    ] = function () {\n      return (_sqlite3_wasm_test_int64_minmax = Module[\n        '_sqlite3_wasm_test_int64_minmax'\n      ] =\n        Module['asm']['sqlite3_wasm_test_int64_minmax']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_test_int64ptr = (Module['_sqlite3_wasm_test_int64ptr'] =\n      function () {\n        return (_sqlite3_wasm_test_int64ptr = Module[\n          '_sqlite3_wasm_test_int64ptr'\n        ] =\n          Module['asm']['sqlite3_wasm_test_int64ptr']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_stack_overflow = (Module[\n      '_sqlite3_wasm_test_stack_overflow'\n    ] = function () {\n      return (_sqlite3_wasm_test_stack_overflow = Module[\n        '_sqlite3_wasm_test_stack_overflow'\n      ] =\n        Module['asm']['sqlite3_wasm_test_stack_overflow']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3_wasm_test_str_hello = (Module['_sqlite3_wasm_test_str_hello'] =\n      function () {\n        return (_sqlite3_wasm_test_str_hello = Module[\n          '_sqlite3_wasm_test_str_hello'\n        ] =\n          Module['asm']['sqlite3_wasm_test_str_hello']).apply(null, arguments);\n      });\n\n    var _malloc = (Module['_malloc'] = function () {\n      return (_malloc = Module['_malloc'] = Module['asm']['malloc']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _free = (Module['_free'] = function () {\n      return (_free = Module['_free'] = Module['asm']['free']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _realloc = (Module['_realloc'] = function () {\n      return (_realloc = Module['_realloc'] = Module['asm']['realloc']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _emscripten_builtin_memalign = (Module['_emscripten_builtin_memalign'] =\n      function () {\n        return (_emscripten_builtin_memalign = Module[\n          '_emscripten_builtin_memalign'\n        ] =\n          Module['asm']['emscripten_builtin_memalign']).apply(null, arguments);\n      });\n\n    var stackSave = (Module['stackSave'] = function () {\n      return (stackSave = Module['stackSave'] =\n        Module['asm']['stackSave']).apply(null, arguments);\n    });\n\n    var stackRestore = (Module['stackRestore'] = function () {\n      return (stackRestore = Module['stackRestore'] =\n        Module['asm']['stackRestore']).apply(null, arguments);\n    });\n\n    var stackAlloc = (Module['stackAlloc'] = function () {\n      return (stackAlloc = Module['stackAlloc'] =\n        Module['asm']['stackAlloc']).apply(null, arguments);\n    });\n\n    Module['wasmMemory'] = wasmMemory;\n\n    var calledRun;\n\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n\n    function run(args) {\n      args = args || arguments_;\n\n      if (runDependencies > 0) {\n        return;\n      }\n\n      preRun();\n\n      if (runDependencies > 0) {\n        return;\n      }\n\n      function doRun() {\n        if (calledRun) return;\n        calledRun = true;\n        Module['calledRun'] = true;\n\n        if (ABORT) return;\n\n        initRuntime();\n\n        readyPromiseResolve(Module);\n        if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n        postRun();\n      }\n\n      if (Module['setStatus']) {\n        Module['setStatus']('Running...');\n        setTimeout(function () {\n          setTimeout(function () {\n            Module['setStatus']('');\n          }, 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n\n    if (Module['preInit']) {\n      if (typeof Module['preInit'] == 'function')\n        Module['preInit'] = [Module['preInit']];\n      while (Module['preInit'].length > 0) {\n        Module['preInit'].pop()();\n      }\n    }\n\n    run();\n\n    if (!Module.postRun) Module.postRun = [];\n    Module.postRun.push(function (Module) {\n      'use strict';\n\n      'use strict';\n      globalThis.sqlite3ApiBootstrap = function sqlite3ApiBootstrap(\n        apiConfig = globalThis.sqlite3ApiConfig ||\n          sqlite3ApiBootstrap.defaultConfig,\n      ) {\n        if (sqlite3ApiBootstrap.sqlite3) {\n          console.warn(\n            'sqlite3ApiBootstrap() called multiple times.',\n            'Config and external initializers are ignored on calls after the first.',\n          );\n          return sqlite3ApiBootstrap.sqlite3;\n        }\n        const config = Object.assign(\n          Object.create(null),\n          {\n            exports: undefined,\n            memory: undefined,\n            bigIntEnabled: (() => {\n              if ('undefined' !== typeof Module) {\n                return !!Module.HEAPU64;\n              }\n              return !!globalThis.BigInt64Array;\n            })(),\n            debug: console.debug.bind(console),\n            warn: console.warn.bind(console),\n            error: console.error.bind(console),\n            log: console.log.bind(console),\n            wasmfsOpfsDir: '/opfs',\n\n            useStdAlloc: false,\n          },\n          apiConfig || {},\n        );\n\n        Object.assign(\n          config,\n          {\n            allocExportName: config.useStdAlloc ? 'malloc' : 'sqlite3_malloc',\n            deallocExportName: config.useStdAlloc ? 'free' : 'sqlite3_free',\n            reallocExportName: config.useStdAlloc\n              ? 'realloc'\n              : 'sqlite3_realloc',\n          },\n          config,\n        );\n\n        ['exports', 'memory', 'wasmfsOpfsDir'].forEach((k) => {\n          if ('function' === typeof config[k]) {\n            config[k] = config[k]();\n          }\n        });\n\n        const capi = Object.create(null);\n\n        const wasm = Object.create(null);\n\n        const __rcStr = (rc) => {\n          return (\n            (capi.sqlite3_js_rc_str && capi.sqlite3_js_rc_str(rc)) ||\n            'Unknown result code #' + rc\n          );\n        };\n\n        const __isInt = (n) => 'number' === typeof n && n === (n | 0);\n\n        class SQLite3Error extends Error {\n          constructor(...args) {\n            let rc;\n            if (args.length) {\n              if (__isInt(args[0])) {\n                rc = args[0];\n                if (1 === args.length) {\n                  super(__rcStr(args[0]));\n                } else {\n                  const rcStr = __rcStr(rc);\n                  if ('object' === typeof args[1]) {\n                    super(rcStr, args[1]);\n                  } else {\n                    args[0] = rcStr + ':';\n                    super(args.join(' '));\n                  }\n                }\n              } else {\n                if (2 === args.length && 'object' === typeof args[1]) {\n                  super(...args);\n                } else {\n                  super(args.join(' '));\n                }\n              }\n            }\n            this.resultCode = rc || capi.SQLITE_ERROR;\n            this.name = 'SQLite3Error';\n          }\n        }\n\n        SQLite3Error.toss = (...args) => {\n          throw new SQLite3Error(...args);\n        };\n        const toss3 = SQLite3Error.toss;\n\n        if (config.wasmfsOpfsDir && !/^\\/[^/]+$/.test(config.wasmfsOpfsDir)) {\n          toss3(\n            \"config.wasmfsOpfsDir must be falsy or in the form '/dir-name'.\",\n          );\n        }\n\n        const isInt32 = (n) => {\n          return (\n            'bigint' !== typeof n &&\n            !!(n === (n | 0) && n <= 2147483647 && n >= -2147483648)\n          );\n        };\n\n        const bigIntFits64 = function f(b) {\n          if (!f._max) {\n            f._max = BigInt('0x7fffffffffffffff');\n            f._min = ~f._max;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const bigIntFits32 = (b) => b >= -0x7fffffffn - 1n && b <= 0x7fffffffn;\n\n        const bigIntFitsDouble = function f(b) {\n          if (!f._min) {\n            f._min = Number.MIN_SAFE_INTEGER;\n            f._max = Number.MAX_SAFE_INTEGER;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const isTypedArray = (v) => {\n          return v && v.constructor && isInt32(v.constructor.BYTES_PER_ELEMENT)\n            ? v\n            : false;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n\n        const isSharedTypedArray = (aTypedArray) =>\n          aTypedArray.buffer instanceof __SAB;\n\n        const typedArrayPart = (aTypedArray, begin, end) => {\n          return isSharedTypedArray(aTypedArray)\n            ? aTypedArray.slice(begin, end)\n            : aTypedArray.subarray(begin, end);\n        };\n\n        const isBindableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const isSQLableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const affirmBindableTypedArray = (v) => {\n          return (\n            isBindableTypedArray(v) ||\n            toss3('Value is not of a supported TypedArray type.')\n          );\n        };\n\n        const utf8Decoder = new TextDecoder('utf-8');\n\n        const typedArrayToString = function (typedArray, begin, end) {\n          return utf8Decoder.decode(typedArrayPart(typedArray, begin, end));\n        };\n\n        const flexibleString = function (v) {\n          if (isSQLableTypedArray(v)) {\n            return typedArrayToString(\n              v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n            );\n          } else if (Array.isArray(v)) return v.join('');\n          else if (wasm.isPtr(v)) v = wasm.cstrToJs(v);\n          return v;\n        };\n\n        class WasmAllocError extends Error {\n          constructor(...args) {\n            if (2 === args.length && 'object' === typeof args[1]) {\n              super(...args);\n            } else if (args.length) {\n              super(args.join(' '));\n            } else {\n              super('Allocation failed.');\n            }\n            this.resultCode = capi.SQLITE_NOMEM;\n            this.name = 'WasmAllocError';\n          }\n        }\n\n        WasmAllocError.toss = (...args) => {\n          throw new WasmAllocError(...args);\n        };\n\n        Object.assign(capi, {\n          sqlite3_bind_blob: undefined,\n\n          sqlite3_bind_text: undefined,\n\n          sqlite3_create_function_v2: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) => {},\n\n          sqlite3_create_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) => {},\n\n          sqlite3_create_window_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xStep,\n            xFinal,\n            xValue,\n            xInverse,\n            xDestroy,\n          ) => {},\n\n          sqlite3_prepare_v3: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            prepFlags,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_prepare_v2: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_exec: (pDb, sql, callback, pVoid, pErrMsg) => {},\n\n          sqlite3_randomness: (n, outPtr) => {},\n        });\n\n        const util = {\n          affirmBindableTypedArray,\n          flexibleString,\n          bigIntFits32,\n          bigIntFits64,\n          bigIntFitsDouble,\n          isBindableTypedArray,\n          isInt32,\n          isSQLableTypedArray,\n          isTypedArray,\n          typedArrayToString,\n          isUIThread: () =>\n            globalThis.window === globalThis && !!globalThis.document,\n\n          isSharedTypedArray,\n          toss: function (...args) {\n            throw new Error(args.join(' '));\n          },\n          toss3,\n          typedArrayPart,\n        };\n\n        Object.assign(wasm, {\n          ptrSizeof: config.wasmPtrSizeof || 4,\n\n          ptrIR: config.wasmPtrIR || 'i32',\n\n          bigIntEnabled: !!config.bigIntEnabled,\n\n          exports:\n            config.exports ||\n            toss3('Missing API config.exports (WASM module exports).'),\n\n          memory:\n            config.memory ||\n            config.exports['memory'] ||\n            toss3(\n              'API config object requires a WebAssembly.Memory object',\n              'in either config.exports.memory (exported)',\n              'or config.memory (imported).',\n            ),\n\n          alloc: undefined,\n\n          realloc: undefined,\n\n          dealloc: undefined,\n        });\n\n        wasm.allocFromTypedArray = function (srcTypedArray) {\n          if (srcTypedArray instanceof ArrayBuffer) {\n            srcTypedArray = new Uint8Array(srcTypedArray);\n          }\n          affirmBindableTypedArray(srcTypedArray);\n          const pRet = wasm.alloc(srcTypedArray.byteLength || 1);\n          wasm\n            .heapForSize(srcTypedArray.constructor)\n            .set(srcTypedArray.byteLength ? srcTypedArray : [0], pRet);\n          return pRet;\n        };\n\n        {\n          const keyAlloc = config.allocExportName,\n            keyDealloc = config.deallocExportName,\n            keyRealloc = config.reallocExportName;\n          for (const key of [keyAlloc, keyDealloc, keyRealloc]) {\n            const f = wasm.exports[key];\n            if (!(f instanceof Function))\n              toss3('Missing required exports[', key, '] function.');\n          }\n\n          wasm.alloc = function f(n) {\n            return (\n              f.impl(n) ||\n              WasmAllocError.toss('Failed to allocate', n, ' bytes.')\n            );\n          };\n          wasm.alloc.impl = wasm.exports[keyAlloc];\n          wasm.realloc = function f(m, n) {\n            const m2 = f.impl(m, n);\n            return n\n              ? m2 || WasmAllocError.toss('Failed to reallocate', n, ' bytes.')\n              : 0;\n          };\n          wasm.realloc.impl = wasm.exports[keyRealloc];\n          wasm.dealloc = wasm.exports[keyDealloc];\n        }\n\n        wasm.compileOptionUsed = function f(optName) {\n          if (!arguments.length) {\n            if (f._result) return f._result;\n            else if (!f._opt) {\n              f._rx = /^([^=]+)=(.+)/;\n              f._rxInt = /^-?\\d+$/;\n              f._opt = function (opt, rv) {\n                const m = f._rx.exec(opt);\n                rv[0] = m ? m[1] : opt;\n                rv[1] = m ? (f._rxInt.test(m[2]) ? +m[2] : m[2]) : true;\n              };\n            }\n            const rc = {},\n              ov = [0, 0];\n            let i = 0,\n              k;\n            while ((k = capi.sqlite3_compileoption_get(i++))) {\n              f._opt(k, ov);\n              rc[ov[0]] = ov[1];\n            }\n            return (f._result = rc);\n          } else if (Array.isArray(optName)) {\n            const rc = {};\n            optName.forEach((v) => {\n              rc[v] = capi.sqlite3_compileoption_used(v);\n            });\n            return rc;\n          } else if ('object' === typeof optName) {\n            Object.keys(optName).forEach((k) => {\n              optName[k] = capi.sqlite3_compileoption_used(k);\n            });\n            return optName;\n          }\n          return 'string' === typeof optName\n            ? !!capi.sqlite3_compileoption_used(optName)\n            : false;\n        };\n\n        wasm.pstack = Object.assign(Object.create(null), {\n          restore: wasm.exports.sqlite3_wasm_pstack_restore,\n\n          alloc: function (n) {\n            if ('string' === typeof n && !(n = wasm.sizeofIR(n))) {\n              WasmAllocError.toss(\n                'Invalid value for pstack.alloc(',\n                arguments[0],\n                ')',\n              );\n            }\n            return (\n              wasm.exports.sqlite3_wasm_pstack_alloc(n) ||\n              WasmAllocError.toss(\n                'Could not allocate',\n                n,\n                'bytes from the pstack.',\n              )\n            );\n          },\n\n          allocChunks: function (n, sz) {\n            if ('string' === typeof sz && !(sz = wasm.sizeofIR(sz))) {\n              WasmAllocError.toss(\n                'Invalid size value for allocChunks(',\n                arguments[1],\n                ')',\n              );\n            }\n            const mem = wasm.pstack.alloc(n * sz);\n            const rc = [];\n            let i = 0,\n              offset = 0;\n            for (; i < n; ++i, offset += sz) rc.push(mem + offset);\n            return rc;\n          },\n\n          allocPtr: (n = 1, safePtrSize = true) => {\n            return 1 === n\n              ? wasm.pstack.alloc(safePtrSize ? 8 : wasm.ptrSizeof)\n              : wasm.pstack.allocChunks(n, safePtrSize ? 8 : wasm.ptrSizeof);\n          },\n        });\n        Object.defineProperties(wasm.pstack, {\n          pointer: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3_wasm_pstack_ptr,\n          },\n\n          quota: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3_wasm_pstack_quota,\n          },\n\n          remaining: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3_wasm_pstack_remaining,\n          },\n        });\n\n        capi.sqlite3_randomness = (...args) => {\n          if (\n            1 === args.length &&\n            util.isTypedArray(args[0]) &&\n            1 === args[0].BYTES_PER_ELEMENT\n          ) {\n            const ta = args[0];\n            if (0 === ta.byteLength) {\n              wasm.exports.sqlite3_randomness(0, 0);\n              return ta;\n            }\n            const stack = wasm.pstack.pointer;\n            try {\n              let n = ta.byteLength,\n                offset = 0;\n              const r = wasm.exports.sqlite3_randomness;\n              const heap = wasm.heap8u();\n              const nAlloc = n < 512 ? n : 512;\n              const ptr = wasm.pstack.alloc(nAlloc);\n              do {\n                const j = n > nAlloc ? nAlloc : n;\n                r(j, ptr);\n                ta.set(typedArrayPart(heap, ptr, ptr + j), offset);\n                n -= j;\n                offset += j;\n              } while (n > 0);\n            } catch (e) {\n              console.error(\n                'Highly unexpected (and ignored!) ' +\n                  'exception in sqlite3_randomness():',\n                e,\n              );\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            return ta;\n          }\n          wasm.exports.sqlite3_randomness(...args);\n        };\n\n        let __wasmfsOpfsDir = undefined;\n\n        capi.sqlite3_wasmfs_opfs_dir = function () {\n          if (undefined !== __wasmfsOpfsDir) return __wasmfsOpfsDir;\n\n          const pdir = config.wasmfsOpfsDir;\n          if (\n            !pdir ||\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle\n          ) {\n            return (__wasmfsOpfsDir = '');\n          }\n          try {\n            if (\n              pdir &&\n              0 ===\n                wasm.xCallWrapped(\n                  'sqlite3_wasm_init_wasmfs',\n                  'i32',\n                  ['string'],\n                  pdir,\n                )\n            ) {\n              return (__wasmfsOpfsDir = pdir);\n            } else {\n              return (__wasmfsOpfsDir = '');\n            }\n          } catch (e) {\n            return (__wasmfsOpfsDir = '');\n          }\n        };\n\n        capi.sqlite3_wasmfs_filename_is_persistent = function (name) {\n          const p = capi.sqlite3_wasmfs_opfs_dir();\n          return p && name ? name.startsWith(p + '/') : false;\n        };\n\n        capi.sqlite3_js_db_uses_vfs = function (pDb, vfsName, dbName = 0) {\n          try {\n            const pK = capi.sqlite3_vfs_find(vfsName);\n            if (!pK) return false;\n            else if (!pDb) {\n              return pK === capi.sqlite3_vfs_find(0) ? pK : false;\n            } else {\n              return pK === capi.sqlite3_js_db_vfs(pDb, dbName) ? pK : false;\n            }\n          } catch (e) {\n            return false;\n          }\n        };\n\n        capi.sqlite3_js_vfs_list = function () {\n          const rc = [];\n          let pVfs = capi.sqlite3_vfs_find(0);\n          while (pVfs) {\n            const oVfs = new capi.sqlite3_vfs(pVfs);\n            rc.push(wasm.cstrToJs(oVfs.$zName));\n            pVfs = oVfs.$pNext;\n            oVfs.dispose();\n          }\n          return rc;\n        };\n\n        capi.sqlite3_js_db_export = function (pDb, schema = 0) {\n          pDb = wasm.xWrap.testConvertArg('sqlite3*', pDb);\n          if (!pDb) toss3('Invalid sqlite3* argument.');\n          if (!wasm.bigIntEnabled) toss3('BigInt64 support is not enabled.');\n          const scope = wasm.scopedAllocPush();\n          let pOut;\n          try {\n            const pSize = wasm.scopedAlloc(8 + wasm.ptrSizeof);\n            const ppOut = pSize + 8;\n\n            const zSchema = schema\n              ? wasm.isPtr(schema)\n                ? schema\n                : wasm.scopedAllocCString('' + schema)\n              : 0;\n            let rc = wasm.exports.sqlite3_wasm_db_serialize(\n              pDb,\n              zSchema,\n              ppOut,\n              pSize,\n              0,\n            );\n            if (rc) {\n              toss3(\n                'Database serialization failed with code',\n                sqlite3.capi.sqlite3_js_rc_str(rc),\n              );\n            }\n            pOut = wasm.peekPtr(ppOut);\n            const nOut = wasm.peek(pSize, 'i64');\n            rc = nOut\n              ? wasm.heap8u().slice(pOut, pOut + Number(nOut))\n              : new Uint8Array();\n            return rc;\n          } finally {\n            if (pOut) wasm.exports.sqlite3_free(pOut);\n            wasm.scopedAllocPop(scope);\n          }\n        };\n\n        capi.sqlite3_js_db_vfs = (dbPointer, dbName = 0) =>\n          wasm.sqlite3_wasm_db_vfs(dbPointer, dbName);\n\n        capi.sqlite3_js_aggregate_context = (pCtx, n) => {\n          return (\n            capi.sqlite3_aggregate_context(pCtx, n) ||\n            (n\n              ? WasmAllocError.toss(\n                  'Cannot allocate',\n                  n,\n                  'bytes for sqlite3_aggregate_context()',\n                )\n              : 0)\n          );\n        };\n\n        capi.sqlite3_js_posix_create_file = function (filename, data, dataLen) {\n          let pData;\n          if (data && wasm.isPtr(data)) {\n            pData = data;\n          } else if (\n            data instanceof ArrayBuffer ||\n            data instanceof Uint8Array\n          ) {\n            pData = wasm.allocFromTypedArray(data);\n            if (arguments.length < 3 || !util.isInt32(dataLen) || dataLen < 0) {\n              dataLen = data.byteLength;\n            }\n          } else {\n            SQLite3Error.toss(\n              'Invalid 2nd argument for sqlite3_js_posix_create_file().',\n            );\n          }\n          try {\n            if (!util.isInt32(dataLen) || dataLen < 0) {\n              SQLite3Error.toss(\n                'Invalid 3rd argument for sqlite3_js_posix_create_file().',\n              );\n            }\n            const rc = wasm.sqlite3_wasm_posix_create_file(\n              filename,\n              pData,\n              dataLen,\n            );\n            if (rc)\n              SQLite3Error.toss(\n                'Creation of file failed with sqlite3 result code',\n                capi.sqlite3_js_rc_str(rc),\n              );\n          } finally {\n            wasm.dealloc(pData);\n          }\n        };\n\n        capi.sqlite3_js_vfs_create_file = function (\n          vfs,\n          filename,\n          data,\n          dataLen,\n        ) {\n          config.warn(\n            'sqlite3_js_vfs_create_file() is deprecated and',\n            'should be avoided because it can lead to C-level crashes.',\n            'See its documentation for alternative options.',\n          );\n          let pData;\n          if (data) {\n            if (wasm.isPtr(data)) {\n              pData = data;\n            } else if (data instanceof ArrayBuffer) {\n              data = new Uint8Array(data);\n            }\n            if (data instanceof Uint8Array) {\n              pData = wasm.allocFromTypedArray(data);\n              if (\n                arguments.length < 4 ||\n                !util.isInt32(dataLen) ||\n                dataLen < 0\n              ) {\n                dataLen = data.byteLength;\n              }\n            } else {\n              SQLite3Error.toss(\n                'Invalid 3rd argument type for sqlite3_js_vfs_create_file().',\n              );\n            }\n          } else {\n            pData = 0;\n          }\n          if (!util.isInt32(dataLen) || dataLen < 0) {\n            wasm.dealloc(pData);\n            SQLite3Error.toss(\n              'Invalid 4th argument for sqlite3_js_vfs_create_file().',\n            );\n          }\n          try {\n            const rc = wasm.sqlite3_wasm_vfs_create_file(\n              vfs,\n              filename,\n              pData,\n              dataLen,\n            );\n            if (rc)\n              SQLite3Error.toss(\n                'Creation of file failed with sqlite3 result code',\n                capi.sqlite3_js_rc_str(rc),\n              );\n          } finally {\n            wasm.dealloc(pData);\n          }\n        };\n\n        if (util.isUIThread()) {\n          const __kvvfsInfo = function (which) {\n            const rc = Object.create(null);\n            rc.prefix = 'kvvfs-' + which;\n            rc.stores = [];\n            if ('session' === which || '' === which)\n              rc.stores.push(globalThis.sessionStorage);\n            if ('local' === which || '' === which)\n              rc.stores.push(globalThis.localStorage);\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_clear = function (which = '') {\n            let rc = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              const toRm = [];\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) toRm.push(k);\n              }\n              toRm.forEach((kk) => s.removeItem(kk));\n              rc += toRm.length;\n            });\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_size = function (which = '') {\n            let sz = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) {\n                  sz += k.length;\n                  sz += s.getItem(k).length;\n                }\n              }\n            });\n            return sz * 2;\n          };\n        }\n\n        capi.sqlite3_db_config = function (pDb, op, ...args) {\n          if (!this.s) {\n            this.s = wasm.xWrap('sqlite3_wasm_db_config_s', 'int', [\n              'sqlite3*',\n              'int',\n              'string:static',\n            ]);\n            this.pii = wasm.xWrap('sqlite3_wasm_db_config_pii', 'int', [\n              'sqlite3*',\n              'int',\n              '*',\n              'int',\n              'int',\n            ]);\n            this.ip = wasm.xWrap('sqlite3_wasm_db_config_ip', 'int', [\n              'sqlite3*',\n              'int',\n              'int',\n              '*',\n            ]);\n          }\n          switch (op) {\n            case capi.SQLITE_DBCONFIG_ENABLE_FKEY:\n            case capi.SQLITE_DBCONFIG_ENABLE_TRIGGER:\n            case capi.SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER:\n            case capi.SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION:\n            case capi.SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE:\n            case capi.SQLITE_DBCONFIG_ENABLE_QPSG:\n            case capi.SQLITE_DBCONFIG_TRIGGER_EQP:\n            case capi.SQLITE_DBCONFIG_RESET_DATABASE:\n            case capi.SQLITE_DBCONFIG_DEFENSIVE:\n            case capi.SQLITE_DBCONFIG_WRITABLE_SCHEMA:\n            case capi.SQLITE_DBCONFIG_LEGACY_ALTER_TABLE:\n            case capi.SQLITE_DBCONFIG_DQS_DML:\n            case capi.SQLITE_DBCONFIG_DQS_DDL:\n            case capi.SQLITE_DBCONFIG_ENABLE_VIEW:\n            case capi.SQLITE_DBCONFIG_LEGACY_FILE_FORMAT:\n            case capi.SQLITE_DBCONFIG_TRUSTED_SCHEMA:\n            case capi.SQLITE_DBCONFIG_STMT_SCANSTATUS:\n            case capi.SQLITE_DBCONFIG_REVERSE_SCANORDER:\n              return this.ip(pDb, op, args[0], args[1] || 0);\n            case capi.SQLITE_DBCONFIG_LOOKASIDE:\n              return this.pii(pDb, op, args[0], args[1], args[2]);\n            case capi.SQLITE_DBCONFIG_MAINDBNAME:\n              return this.s(pDb, op, args[0]);\n            default:\n              return capi.SQLITE_MISUSE;\n          }\n        }.bind(Object.create(null));\n\n        capi.sqlite3_value_to_js = function (\n          pVal,\n          throwIfCannotConvert = true,\n        ) {\n          let arg;\n          const valType = capi.sqlite3_value_type(pVal);\n          switch (valType) {\n            case capi.SQLITE_INTEGER:\n              if (wasm.bigIntEnabled) {\n                arg = capi.sqlite3_value_int64(pVal);\n                if (util.bigIntFitsDouble(arg)) arg = Number(arg);\n              } else arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_FLOAT:\n              arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_TEXT:\n              arg = capi.sqlite3_value_text(pVal);\n              break;\n            case capi.SQLITE_BLOB: {\n              const n = capi.sqlite3_value_bytes(pVal);\n              const pBlob = capi.sqlite3_value_blob(pVal);\n              if (n && !pBlob)\n                sqlite3.WasmAllocError.toss(\n                  'Cannot allocate memory for blob argument of',\n                  n,\n                  'byte(s)',\n                );\n              arg = n ? wasm.heap8u().slice(pBlob, pBlob + Number(n)) : null;\n              break;\n            }\n            case capi.SQLITE_NULL:\n              arg = null;\n              break;\n            default:\n              if (throwIfCannotConvert) {\n                toss3(\n                  capi.SQLITE_MISMATCH,\n                  'Unhandled sqlite3_value_type():',\n                  valType,\n                );\n              }\n              arg = undefined;\n          }\n          return arg;\n        };\n\n        capi.sqlite3_values_to_js = function (\n          argc,\n          pArgv,\n          throwIfCannotConvert = true,\n        ) {\n          let i;\n          const tgt = [];\n          for (i = 0; i < argc; ++i) {\n            tgt.push(\n              capi.sqlite3_value_to_js(\n                wasm.peekPtr(pArgv + wasm.ptrSizeof * i),\n                throwIfCannotConvert,\n              ),\n            );\n          }\n          return tgt;\n        };\n\n        capi.sqlite3_result_error_js = function (pCtx, e) {\n          if (e instanceof WasmAllocError) {\n            capi.sqlite3_result_error_nomem(pCtx);\n          } else {\n            capi.sqlite3_result_error(pCtx, '' + e, -1);\n          }\n        };\n\n        capi.sqlite3_result_js = function (pCtx, val) {\n          if (val instanceof Error) {\n            capi.sqlite3_result_error_js(pCtx, val);\n            return;\n          }\n          try {\n            switch (typeof val) {\n              case 'undefined':\n                break;\n              case 'boolean':\n                capi.sqlite3_result_int(pCtx, val ? 1 : 0);\n                break;\n              case 'bigint':\n                if (util.bigIntFits32(val)) {\n                  capi.sqlite3_result_int(pCtx, Number(val));\n                } else if (util.bigIntFitsDouble(val)) {\n                  capi.sqlite3_result_double(pCtx, Number(val));\n                } else if (wasm.bigIntEnabled) {\n                  if (util.bigIntFits64(val))\n                    capi.sqlite3_result_int64(pCtx, val);\n                  else\n                    toss3(\n                      'BigInt value',\n                      val.toString(),\n                      'is too BigInt for int64.',\n                    );\n                } else {\n                  toss3('BigInt value', val.toString(), 'is too BigInt.');\n                }\n                break;\n              case 'number': {\n                let f;\n                if (util.isInt32(val)) {\n                  f = capi.sqlite3_result_int;\n                } else if (\n                  wasm.bigIntEnabled &&\n                  Number.isInteger(val) &&\n                  util.bigIntFits64(BigInt(val))\n                ) {\n                  f = capi.sqlite3_result_int64;\n                } else {\n                  f = capi.sqlite3_result_double;\n                }\n                f(pCtx, val);\n                break;\n              }\n              case 'string': {\n                const [p, n] = wasm.allocCString(val, true);\n                capi.sqlite3_result_text(pCtx, p, n, capi.SQLITE_WASM_DEALLOC);\n                break;\n              }\n              case 'object':\n                if (null === val) {\n                  capi.sqlite3_result_null(pCtx);\n                  break;\n                } else if (util.isBindableTypedArray(val)) {\n                  const pBlob = wasm.allocFromTypedArray(val);\n                  capi.sqlite3_result_blob(\n                    pCtx,\n                    pBlob,\n                    val.byteLength,\n                    capi.SQLITE_WASM_DEALLOC,\n                  );\n                  break;\n                }\n\n              default:\n                toss3(\n                  \"Don't not how to handle this UDF result value:\",\n                  typeof val,\n                  val,\n                );\n            }\n          } catch (e) {\n            capi.sqlite3_result_error_js(pCtx, e);\n          }\n        };\n\n        capi.sqlite3_column_js = function (\n          pStmt,\n          iCol,\n          throwIfCannotConvert = true,\n        ) {\n          const v = capi.sqlite3_column_value(pStmt, iCol);\n          return 0 === v\n            ? undefined\n            : capi.sqlite3_value_to_js(v, throwIfCannotConvert);\n        };\n\n        const __newOldValue = function (pObj, iCol, impl) {\n          impl = capi[impl];\n          if (!this.ptr) this.ptr = wasm.allocPtr();\n          else wasm.pokePtr(this.ptr, 0);\n          const rc = impl(pObj, iCol, this.ptr);\n          if (rc)\n            return SQLite3Error.toss(\n              rc,\n              arguments[2] + '() failed with code ' + rc,\n            );\n          const pv = wasm.peekPtr(this.ptr);\n          return pv ? capi.sqlite3_value_to_js(pv, true) : undefined;\n        }.bind(Object.create(null));\n\n        capi.sqlite3_preupdate_new_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_new');\n\n        capi.sqlite3_preupdate_old_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_old');\n\n        capi.sqlite3changeset_new_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_new');\n\n        capi.sqlite3changeset_old_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_old');\n\n        const sqlite3 = {\n          WasmAllocError: WasmAllocError,\n          SQLite3Error: SQLite3Error,\n          capi,\n          util,\n          wasm,\n          config,\n\n          version: Object.create(null),\n\n          client: undefined,\n\n          asyncPostInit: async function ff() {\n            if (ff.isReady instanceof Promise) return ff.isReady;\n            let lia = sqlite3ApiBootstrap.initializersAsync;\n            delete sqlite3ApiBootstrap.initializersAsync;\n            const postInit = async () => {\n              if (!sqlite3.__isUnderTest) {\n                delete sqlite3.util;\n\n                delete sqlite3.StructBinder;\n              }\n              return sqlite3;\n            };\n            const catcher = (e) => {\n              config.error('an async sqlite3 initializer failed:', e);\n              throw e;\n            };\n            if (!lia || !lia.length) {\n              return (ff.isReady = postInit().catch(catcher));\n            }\n            lia = lia.map((f) => {\n              return f instanceof Function ? async (x) => f(sqlite3) : f;\n            });\n            lia.push(postInit);\n            let p = Promise.resolve(sqlite3);\n            while (lia.length) p = p.then(lia.shift());\n            return (ff.isReady = p.catch(catcher));\n          },\n\n          scriptInfo: undefined,\n        };\n        try {\n          sqlite3ApiBootstrap.initializers.forEach((f) => {\n            f(sqlite3);\n          });\n        } catch (e) {\n          console.error('sqlite3 bootstrap initializer threw:', e);\n          throw e;\n        }\n        delete sqlite3ApiBootstrap.initializers;\n        sqlite3ApiBootstrap.sqlite3 = sqlite3;\n        return sqlite3;\n      };\n\n      globalThis.sqlite3ApiBootstrap.initializers = [];\n\n      globalThis.sqlite3ApiBootstrap.initializersAsync = [];\n\n      globalThis.sqlite3ApiBootstrap.defaultConfig = Object.create(null);\n\n      globalThis.sqlite3ApiBootstrap.sqlite3 = undefined;\n\n      globalThis.WhWasmUtilInstaller = function (target) {\n        'use strict';\n        if (undefined === target.bigIntEnabled) {\n          target.bigIntEnabled = !!globalThis['BigInt64Array'];\n        }\n\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (!target.exports) {\n          Object.defineProperty(target, 'exports', {\n            enumerable: true,\n            configurable: true,\n            get: () => target.instance && target.instance.exports,\n          });\n        }\n\n        const ptrIR = target.pointerIR || 'i32';\n        const ptrSizeof = (target.ptrSizeof =\n          'i32' === ptrIR\n            ? 4\n            : 'i64' === ptrIR\n            ? 8\n            : toss('Unhandled ptrSizeof:', ptrIR));\n\n        const cache = Object.create(null);\n\n        cache.heapSize = 0;\n\n        cache.memory = null;\n\n        cache.freeFuncIndexes = [];\n\n        cache.scopedAlloc = [];\n\n        cache.utf8Decoder = new TextDecoder();\n        cache.utf8Encoder = new TextEncoder('utf-8');\n\n        target.sizeofIR = (n) => {\n          switch (n) {\n            case 'i8':\n              return 1;\n            case 'i16':\n              return 2;\n            case 'i32':\n            case 'f32':\n            case 'float':\n              return 4;\n            case 'i64':\n            case 'f64':\n            case 'double':\n              return 8;\n            case '*':\n              return ptrSizeof;\n            default:\n              return ('' + n).endsWith('*') ? ptrSizeof : undefined;\n          }\n        };\n\n        const heapWrappers = function () {\n          if (!cache.memory) {\n            cache.memory =\n              target.memory instanceof WebAssembly.Memory\n                ? target.memory\n                : target.exports.memory;\n          } else if (cache.heapSize === cache.memory.buffer.byteLength) {\n            return cache;\n          }\n\n          const b = cache.memory.buffer;\n          cache.HEAP8 = new Int8Array(b);\n          cache.HEAP8U = new Uint8Array(b);\n          cache.HEAP16 = new Int16Array(b);\n          cache.HEAP16U = new Uint16Array(b);\n          cache.HEAP32 = new Int32Array(b);\n          cache.HEAP32U = new Uint32Array(b);\n          if (target.bigIntEnabled) {\n            cache.HEAP64 = new BigInt64Array(b);\n            cache.HEAP64U = new BigUint64Array(b);\n          }\n          cache.HEAP32F = new Float32Array(b);\n          cache.HEAP64F = new Float64Array(b);\n          cache.heapSize = b.byteLength;\n          return cache;\n        };\n\n        target.heap8 = () => heapWrappers().HEAP8;\n\n        target.heap8u = () => heapWrappers().HEAP8U;\n\n        target.heap16 = () => heapWrappers().HEAP16;\n\n        target.heap16u = () => heapWrappers().HEAP16U;\n\n        target.heap32 = () => heapWrappers().HEAP32;\n\n        target.heap32u = () => heapWrappers().HEAP32U;\n\n        target.heapForSize = function (n, unsigned = true) {\n          let ctor;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          switch (n) {\n            case Int8Array:\n              return c.HEAP8;\n            case Uint8Array:\n              return c.HEAP8U;\n            case Int16Array:\n              return c.HEAP16;\n            case Uint16Array:\n              return c.HEAP16U;\n            case Int32Array:\n              return c.HEAP32;\n            case Uint32Array:\n              return c.HEAP32U;\n            case 8:\n              return unsigned ? c.HEAP8U : c.HEAP8;\n            case 16:\n              return unsigned ? c.HEAP16U : c.HEAP16;\n            case 32:\n              return unsigned ? c.HEAP32U : c.HEAP32;\n            case 64:\n              if (c.HEAP64) return unsigned ? c.HEAP64U : c.HEAP64;\n              break;\n            default:\n              if (target.bigIntEnabled) {\n                if (n === globalThis['BigUint64Array']) return c.HEAP64U;\n                else if (n === globalThis['BigInt64Array']) return c.HEAP64;\n                break;\n              }\n          }\n          toss(\n            'Invalid heapForSize() size: expecting 8, 16, 32,',\n            'or (if BigInt is enabled) 64.',\n          );\n        };\n\n        target.functionTable = function () {\n          return target.exports.__indirect_function_table;\n        };\n\n        target.functionEntry = function (fptr) {\n          const ft = target.functionTable();\n          return fptr < ft.length ? ft.get(fptr) : undefined;\n        };\n\n        target.jsFuncToWasm = function f(func, sig) {\n          if (!f._) {\n            f._ = {\n              sigTypes: Object.assign(Object.create(null), {\n                i: 'i32',\n                p: 'i32',\n                P: 'i32',\n                s: 'i32',\n                j: 'i64',\n                f: 'f32',\n                d: 'f64',\n              }),\n\n              typeCodes: Object.assign(Object.create(null), {\n                f64: 0x7c,\n                f32: 0x7d,\n                i64: 0x7e,\n                i32: 0x7f,\n              }),\n\n              uleb128Encode: function (tgt, method, n) {\n                if (n < 128) tgt[method](n);\n                else tgt[method](n % 128 | 128, n >> 7);\n              },\n\n              rxJSig: /^(\\w)\\((\\w*)\\)$/,\n\n              sigParams: function (sig) {\n                const m = f._.rxJSig.exec(sig);\n                return m ? m[2] : sig.substr(1);\n              },\n\n              letterType: (x) =>\n                f._.sigTypes[x] || toss('Invalid signature letter:', x),\n\n              pushSigType: (dest, letter) =>\n                dest.push(f._.typeCodes[f._.letterType(letter)]),\n            };\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          const sigParams = f._.sigParams(sig);\n          const wasmCode = [0x01, 0x60];\n          f._.uleb128Encode(wasmCode, 'push', sigParams.length);\n          for (const x of sigParams) f._.pushSigType(wasmCode, x);\n          if ('v' === sig[0]) wasmCode.push(0);\n          else {\n            wasmCode.push(1);\n            f._.pushSigType(wasmCode, sig[0]);\n          }\n          f._.uleb128Encode(wasmCode, 'unshift', wasmCode.length);\n          wasmCode.unshift(\n            0x00,\n            0x61,\n            0x73,\n            0x6d,\n            0x01,\n            0x00,\n            0x00,\n            0x00,\n            0x01,\n          );\n          wasmCode.push(\n            0x02,\n            0x07,\n\n            0x01,\n            0x01,\n            0x65,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n            0x07,\n            0x05,\n\n            0x01,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n          );\n          return new WebAssembly.Instance(\n            new WebAssembly.Module(new Uint8Array(wasmCode)),\n            {\n              e: { f: func },\n            },\n          ).exports['f'];\n        };\n\n        const __installFunction = function f(func, sig, scoped) {\n          if (scoped && !cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          if ('string' !== typeof sig || !(func instanceof Function)) {\n            toss(\n              'Invalid arguments: expecting (function,signature) ' +\n                'or (signature,function).',\n            );\n          }\n          const ft = target.functionTable();\n          const oldLen = ft.length;\n          let ptr;\n          while (cache.freeFuncIndexes.length) {\n            ptr = cache.freeFuncIndexes.pop();\n            if (ft.get(ptr)) {\n              ptr = null;\n              continue;\n            } else {\n              break;\n            }\n          }\n          if (!ptr) {\n            ptr = oldLen;\n            ft.grow(1);\n          }\n          try {\n            ft.set(ptr, func);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n            return ptr;\n          } catch (e) {\n            if (!(e instanceof TypeError)) {\n              if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n              throw e;\n            }\n          }\n\n          try {\n            const fptr = target.jsFuncToWasm(func, sig);\n            ft.set(ptr, fptr);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n          } catch (e) {\n            if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n            throw e;\n          }\n          return ptr;\n        };\n\n        target.installFunction = (func, sig) =>\n          __installFunction(func, sig, false);\n\n        target.scopedInstallFunction = (func, sig) =>\n          __installFunction(func, sig, true);\n\n        target.uninstallFunction = function (ptr) {\n          if (!ptr && 0 !== ptr) return undefined;\n          const fi = cache.freeFuncIndexes;\n          const ft = target.functionTable();\n          fi.push(ptr);\n          const rc = ft.get(ptr);\n          ft.set(ptr, null);\n          return rc;\n        };\n\n        target.peek = function f(ptr, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          const list = Array.isArray(ptr) ? [] : undefined;\n          let rc;\n          do {\n            if (list) ptr = arguments[0].shift();\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                rc = c.HEAP8[ptr >> 0];\n                break;\n              case 'i16':\n                rc = c.HEAP16[ptr >> 1];\n                break;\n              case 'i32':\n                rc = c.HEAP32[ptr >> 2];\n                break;\n              case 'float':\n              case 'f32':\n                rc = c.HEAP32F[ptr >> 2];\n                break;\n              case 'double':\n              case 'f64':\n                rc = Number(c.HEAP64F[ptr >> 3]);\n                break;\n              case 'i64':\n                if (target.bigIntEnabled) {\n                  rc = BigInt(c.HEAP64[ptr >> 3]);\n                  break;\n                }\n\n              default:\n                toss('Invalid type for peek():', type);\n            }\n            if (list) list.push(rc);\n          } while (list && arguments[0].length);\n          return list || rc;\n        };\n\n        target.poke = function (ptr, value, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          for (const p of Array.isArray(ptr) ? ptr : [ptr]) {\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                c.HEAP8[p >> 0] = value;\n                continue;\n              case 'i16':\n                c.HEAP16[p >> 1] = value;\n                continue;\n              case 'i32':\n                c.HEAP32[p >> 2] = value;\n                continue;\n              case 'float':\n              case 'f32':\n                c.HEAP32F[p >> 2] = value;\n                continue;\n              case 'double':\n              case 'f64':\n                c.HEAP64F[p >> 3] = value;\n                continue;\n              case 'i64':\n                if (c.HEAP64) {\n                  c.HEAP64[p >> 3] = BigInt(value);\n                  continue;\n                }\n\n              default:\n                toss('Invalid type for poke(): ' + type);\n            }\n          }\n          return this;\n        };\n\n        target.peekPtr = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, ptrIR);\n\n        target.pokePtr = (ptr, value = 0) => target.poke(ptr, value, ptrIR);\n\n        target.peek8 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i8');\n\n        target.poke8 = (ptr, value) => target.poke(ptr, value, 'i8');\n\n        target.peek16 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i16');\n\n        target.poke16 = (ptr, value) => target.poke(ptr, value, 'i16');\n\n        target.peek32 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i32');\n\n        target.poke32 = (ptr, value) => target.poke(ptr, value, 'i32');\n\n        target.peek64 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i64');\n\n        target.poke64 = (ptr, value) => target.poke(ptr, value, 'i64');\n\n        target.peek32f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f32');\n\n        target.poke32f = (ptr, value) => target.poke(ptr, value, 'f32');\n\n        target.peek64f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f64');\n\n        target.poke64f = (ptr, value) => target.poke(ptr, value, 'f64');\n\n        target.getMemValue = target.peek;\n\n        target.getPtrValue = target.peekPtr;\n\n        target.setMemValue = target.poke;\n\n        target.setPtrValue = target.pokePtr;\n\n        target.isPtr32 = (ptr) =>\n          'number' === typeof ptr && ptr === (ptr | 0) && ptr >= 0;\n\n        target.isPtr = target.isPtr32;\n\n        target.cstrlen = function (ptr) {\n          if (!ptr || !target.isPtr(ptr)) return null;\n          const h = heapWrappers().HEAP8U;\n          let pos = ptr;\n          for (; h[pos] !== 0; ++pos) {}\n          return pos - ptr;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return cache.utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        target.cstrToJs = function (ptr) {\n          const n = target.cstrlen(ptr);\n          return n\n            ? __utf8Decode(heapWrappers().HEAP8U, ptr, ptr + n)\n            : null === n\n            ? n\n            : '';\n        };\n\n        target.jstrlen = function (str) {\n          if ('string' !== typeof str) return null;\n          const n = str.length;\n          let len = 0;\n          for (let i = 0; i < n; ++i) {\n            let u = str.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) | (str.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) ++len;\n            else if (u <= 0x7ff) len += 2;\n            else if (u <= 0xffff) len += 3;\n            else len += 4;\n          }\n          return len;\n        };\n\n        target.jstrcpy = function (\n          jstr,\n          tgt,\n          offset = 0,\n          maxBytes = -1,\n          addNul = true,\n        ) {\n          if (\n            !tgt ||\n            (!(tgt instanceof Int8Array) && !(tgt instanceof Uint8Array))\n          ) {\n            toss('jstrcpy() target must be an Int8Array or Uint8Array.');\n          }\n          if (maxBytes < 0) maxBytes = tgt.length - offset;\n          if (!(maxBytes > 0) || !(offset >= 0)) return 0;\n          let i = 0,\n            max = jstr.length;\n          const begin = offset,\n            end = offset + maxBytes - (addNul ? 1 : 0);\n          for (; i < max && offset < end; ++i) {\n            let u = jstr.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) |\n                (jstr.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) {\n              if (offset >= end) break;\n              tgt[offset++] = u;\n            } else if (u <= 0x7ff) {\n              if (offset + 1 >= end) break;\n              tgt[offset++] = 0xc0 | (u >> 6);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else if (u <= 0xffff) {\n              if (offset + 2 >= end) break;\n              tgt[offset++] = 0xe0 | (u >> 12);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else {\n              if (offset + 3 >= end) break;\n              tgt[offset++] = 0xf0 | (u >> 18);\n              tgt[offset++] = 0x80 | ((u >> 12) & 0x3f);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            }\n          }\n          if (addNul) tgt[offset++] = 0;\n          return offset - begin;\n        };\n\n        target.cstrncpy = function (tgtPtr, srcPtr, n) {\n          if (!tgtPtr || !srcPtr)\n            toss('cstrncpy() does not accept NULL strings.');\n          if (n < 0) n = target.cstrlen(strPtr) + 1;\n          else if (!(n > 0)) return 0;\n          const heap = target.heap8u();\n          let i = 0,\n            ch;\n          for (; i < n && (ch = heap[srcPtr + i]); ++i) {\n            heap[tgtPtr + i] = ch;\n          }\n          if (i < n) heap[tgtPtr + i++] = 0;\n          return i;\n        };\n\n        target.jstrToUintArray = (str, addNul = false) => {\n          return cache.utf8Encoder.encode(addNul ? str + '\\0' : str);\n        };\n\n        const __affirmAlloc = (obj, funcName) => {\n          if (\n            !(obj.alloc instanceof Function) ||\n            !(obj.dealloc instanceof Function)\n          ) {\n            toss(\n              'Object is missing alloc() and/or dealloc() function(s)',\n              'required by',\n              funcName + '().',\n            );\n          }\n        };\n\n        const __allocCStr = function (\n          jstr,\n          returnWithLength,\n          allocator,\n          funcName,\n        ) {\n          __affirmAlloc(target, funcName);\n          if ('string' !== typeof jstr) return null;\n          if (0) {\n            const n = target.jstrlen(jstr),\n              ptr = allocator(n + 1);\n            target.jstrcpy(jstr, target.heap8u(), ptr, n + 1, true);\n            return returnWithLength ? [ptr, n] : ptr;\n          } else {\n            const u = cache.utf8Encoder.encode(jstr),\n              ptr = allocator(u.length + 1),\n              heap = heapWrappers().HEAP8U;\n            heap.set(u, ptr);\n            heap[ptr + u.length] = 0;\n            return returnWithLength ? [ptr, u.length] : ptr;\n          }\n        };\n\n        target.allocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(jstr, returnWithLength, target.alloc, 'allocCString()');\n\n        target.scopedAllocPush = function () {\n          __affirmAlloc(target, 'scopedAllocPush');\n          const a = [];\n          cache.scopedAlloc.push(a);\n          return a;\n        };\n\n        target.scopedAllocPop = function (state) {\n          __affirmAlloc(target, 'scopedAllocPop');\n          const n = arguments.length\n            ? cache.scopedAlloc.indexOf(state)\n            : cache.scopedAlloc.length - 1;\n          if (n < 0) toss('Invalid state object for scopedAllocPop().');\n          if (0 === arguments.length) state = cache.scopedAlloc[n];\n          cache.scopedAlloc.splice(n, 1);\n          for (let p; (p = state.pop()); ) {\n            if (target.functionEntry(p)) {\n              target.uninstallFunction(p);\n            } else target.dealloc(p);\n          }\n        };\n\n        target.scopedAlloc = function (n) {\n          if (!cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          const p = target.alloc(n);\n          cache.scopedAlloc[cache.scopedAlloc.length - 1].push(p);\n          return p;\n        };\n\n        Object.defineProperty(target.scopedAlloc, 'level', {\n          configurable: false,\n          enumerable: false,\n          get: () => cache.scopedAlloc.length,\n          set: () => toss(\"The 'active' property is read-only.\"),\n        });\n\n        target.scopedAllocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(\n            jstr,\n            returnWithLength,\n            target.scopedAlloc,\n            'scopedAllocCString()',\n          );\n\n        const __allocMainArgv = function (isScoped, list) {\n          const pList = target[isScoped ? 'scopedAlloc' : 'alloc'](\n            (list.length + 1) * target.ptrSizeof,\n          );\n          let i = 0;\n          list.forEach((e) => {\n            target.pokePtr(\n              pList + target.ptrSizeof * i++,\n              target[isScoped ? 'scopedAllocCString' : 'allocCString']('' + e),\n            );\n          });\n          target.pokePtr(pList + target.ptrSizeof * i, 0);\n          return pList;\n        };\n\n        target.scopedAllocMainArgv = (list) => __allocMainArgv(true, list);\n\n        target.allocMainArgv = (list) => __allocMainArgv(false, list);\n\n        target.cArgvToJs = (argc, pArgv) => {\n          const list = [];\n          for (let i = 0; i < argc; ++i) {\n            const arg = target.peekPtr(pArgv + target.ptrSizeof * i);\n            list.push(arg ? target.cstrToJs(arg) : null);\n          }\n          return list;\n        };\n\n        target.scopedAllocCall = function (func) {\n          target.scopedAllocPush();\n          try {\n            return func();\n          } finally {\n            target.scopedAllocPop();\n          }\n        };\n\n        const __allocPtr = function (howMany, safePtrSize, method) {\n          __affirmAlloc(target, method);\n          const pIr = safePtrSize ? 'i64' : ptrIR;\n          let m = target[method](howMany * (safePtrSize ? 8 : ptrSizeof));\n          target.poke(m, 0, pIr);\n          if (1 === howMany) {\n            return m;\n          }\n          const a = [m];\n          for (let i = 1; i < howMany; ++i) {\n            m += safePtrSize ? 8 : ptrSizeof;\n            a[i] = m;\n            target.poke(m, 0, pIr);\n          }\n          return a;\n        };\n\n        target.allocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'alloc');\n\n        target.scopedAllocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'scopedAlloc');\n\n        target.xGet = function (name) {\n          return (\n            target.exports[name] || toss('Cannot find exported symbol:', name)\n          );\n        };\n\n        const __argcMismatch = (f, n) =>\n          toss(f + '() requires', n, 'argument(s).');\n\n        target.xCall = function (fname, ...args) {\n          const f = target.xGet(fname);\n          if (!(f instanceof Function))\n            toss('Exported symbol', fname, 'is not a function.');\n          if (f.length !== args.length) __argcMismatch(fname, f.length);\n          return 2 === arguments.length && Array.isArray(arguments[1])\n            ? f.apply(null, arguments[1])\n            : f.apply(null, args);\n        };\n\n        cache.xWrap = Object.create(null);\n        cache.xWrap.convert = Object.create(null);\n\n        cache.xWrap.convert.arg = new Map();\n\n        cache.xWrap.convert.result = new Map();\n        const xArg = cache.xWrap.convert.arg,\n          xResult = cache.xWrap.convert.result;\n\n        if (target.bigIntEnabled) {\n          xArg.set('i64', (i) => BigInt(i));\n        }\n        const __xArgPtr =\n          'i32' === ptrIR ? (i) => i | 0 : (i) => BigInt(i) | BigInt(0);\n        xArg\n          .set('i32', __xArgPtr)\n          .set('i16', (i) => (i | 0) & 0xffff)\n          .set('i8', (i) => (i | 0) & 0xff)\n          .set('f32', (i) => Number(i).valueOf())\n          .set('float', xArg.get('f32'))\n          .set('f64', xArg.get('f32'))\n          .set('double', xArg.get('f64'))\n          .set('int', xArg.get('i32'))\n          .set('null', (i) => i)\n          .set(null, xArg.get('null'))\n          .set('**', __xArgPtr)\n          .set('*', __xArgPtr);\n        xResult\n          .set('*', __xArgPtr)\n          .set('pointer', __xArgPtr)\n          .set('number', (v) => Number(v))\n          .set('void', (v) => undefined)\n          .set('null', (v) => v)\n          .set(null, xResult.get('null'));\n\n        {\n          const copyToResult = [\n            'i8',\n            'i16',\n            'i32',\n            'int',\n            'f32',\n            'float',\n            'f64',\n            'double',\n          ];\n          if (target.bigIntEnabled) copyToResult.push('i64');\n          const adaptPtr = xArg.get(ptrIR);\n          for (const t of copyToResult) {\n            xArg.set(t + '*', adaptPtr);\n            xResult.set(t + '*', adaptPtr);\n            xResult.set(t, xArg.get(t) || toss('Missing arg converter:', t));\n          }\n        }\n\n        const __xArgString = function (v) {\n          if ('string' === typeof v) return target.scopedAllocCString(v);\n          return v ? __xArgPtr(v) : null;\n        };\n        xArg\n          .set('string', __xArgString)\n          .set('utf8', __xArgString)\n          .set('pointer', __xArgString);\n\n        xResult\n          .set('string', (i) => target.cstrToJs(i))\n          .set('utf8', xResult.get('string'))\n          .set('string:dealloc', (i) => {\n            try {\n              return i ? target.cstrToJs(i) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          })\n          .set('utf8:dealloc', xResult.get('string:dealloc'))\n          .set('json', (i) => JSON.parse(target.cstrToJs(i)))\n          .set('json:dealloc', (i) => {\n            try {\n              return i ? JSON.parse(target.cstrToJs(i)) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          });\n\n        const AbstractArgAdapter = class {\n          constructor(opt) {\n            this.name = opt.name || 'unnamed adapter';\n          }\n\n          convertArg(v, argv, argIndex) {\n            toss('AbstractArgAdapter must be subclassed.');\n          }\n        };\n\n        xArg.FuncPtrAdapter = class FuncPtrAdapter extends AbstractArgAdapter {\n          constructor(opt) {\n            super(opt);\n            if (xArg.FuncPtrAdapter.warnOnUse) {\n              console.warn(\n                'xArg.FuncPtrAdapter is an internal-only API',\n                'and is not intended to be invoked from',\n                'client-level code. Invoked with:',\n                opt,\n              );\n            }\n            this.name = opt.name || 'unnamed';\n            this.signature = opt.signature;\n            if (opt.contextKey instanceof Function) {\n              this.contextKey = opt.contextKey;\n              if (!opt.bindScope) opt.bindScope = 'context';\n            }\n            this.bindScope =\n              opt.bindScope ||\n              toss(\n                'FuncPtrAdapter options requires a bindScope (explicit or implied).',\n              );\n            if (FuncPtrAdapter.bindScopes.indexOf(opt.bindScope) < 0) {\n              toss(\n                'Invalid options.bindScope (' +\n                  opt.bindMod +\n                  ') for FuncPtrAdapter. ' +\n                  'Expecting one of: (' +\n                  FuncPtrAdapter.bindScopes.join(', ') +\n                  ')',\n              );\n            }\n            this.isTransient = 'transient' === this.bindScope;\n            this.isContext = 'context' === this.bindScope;\n            this.isPermanent = 'permanent' === this.bindScope;\n            this.singleton = 'singleton' === this.bindScope ? [] : undefined;\n\n            this.callProxy =\n              opt.callProxy instanceof Function ? opt.callProxy : undefined;\n          }\n\n          contextKey(argv, argIndex) {\n            return this;\n          }\n\n          contextMap(key) {\n            const cm = this.__cmap || (this.__cmap = new Map());\n            let rc = cm.get(key);\n            if (undefined === rc) cm.set(key, (rc = []));\n            return rc;\n          }\n\n          convertArg(v, argv, argIndex) {\n            let pair = this.singleton;\n            if (!pair && this.isContext) {\n              pair = this.contextMap(this.contextKey(argv, argIndex));\n            }\n            if (pair && pair[0] === v) return pair[1];\n            if (v instanceof Function) {\n              if (this.callProxy) v = this.callProxy(v);\n              const fp = __installFunction(v, this.signature, this.isTransient);\n              if (FuncPtrAdapter.debugFuncInstall) {\n                FuncPtrAdapter.debugOut(\n                  'FuncPtrAdapter installed',\n                  this,\n                  this.contextKey(argv, argIndex),\n                  '@' + fp,\n                  v,\n                );\n              }\n              if (pair) {\n                if (pair[1]) {\n                  if (FuncPtrAdapter.debugFuncInstall) {\n                    FuncPtrAdapter.debugOut(\n                      'FuncPtrAdapter uninstalling',\n                      this,\n                      this.contextKey(argv, argIndex),\n                      '@' + pair[1],\n                      v,\n                    );\n                  }\n                  try {\n                    cache.scopedAlloc[cache.scopedAlloc.length - 1].push(\n                      pair[1],\n                    );\n                  } catch (e) {}\n                }\n                pair[0] = v;\n                pair[1] = fp;\n              }\n              return fp;\n            } else if (target.isPtr(v) || null === v || undefined === v) {\n              if (pair && pair[1] && pair[1] !== v) {\n                if (FuncPtrAdapter.debugFuncInstall) {\n                  FuncPtrAdapter.debugOut(\n                    'FuncPtrAdapter uninstalling',\n                    this,\n                    this.contextKey(argv, argIndex),\n                    '@' + pair[1],\n                    v,\n                  );\n                }\n                try {\n                  cache.scopedAlloc[cache.scopedAlloc.length - 1].push(pair[1]);\n                } catch (e) {}\n                pair[0] = pair[1] = v | 0;\n              }\n              return v || 0;\n            } else {\n              throw new TypeError(\n                'Invalid FuncPtrAdapter argument type. ' +\n                  'Expecting a function pointer or a ' +\n                  (this.name ? this.name + ' ' : '') +\n                  'function matching signature ' +\n                  this.signature +\n                  '.',\n              );\n            }\n          }\n        };\n\n        xArg.FuncPtrAdapter.warnOnUse = false;\n\n        xArg.FuncPtrAdapter.debugFuncInstall = false;\n\n        xArg.FuncPtrAdapter.debugOut = console.debug.bind(console);\n\n        xArg.FuncPtrAdapter.bindScopes = [\n          'transient',\n          'context',\n          'singleton',\n          'permanent',\n        ];\n\n        const __xArgAdapterCheck = (t) =>\n          xArg.get(t) || toss('Argument adapter not found:', t);\n\n        const __xResultAdapterCheck = (t) =>\n          xResult.get(t) || toss('Result adapter not found:', t);\n\n        cache.xWrap.convertArg = (t, ...args) => __xArgAdapterCheck(t)(...args);\n        cache.xWrap.convertArgNoCheck = (t, ...args) => xArg.get(t)(...args);\n\n        cache.xWrap.convertResult = (t, v) =>\n          null === t ? v : t ? __xResultAdapterCheck(t)(v) : undefined;\n        cache.xWrap.convertResultNoCheck = (t, v) =>\n          null === t ? v : t ? xResult.get(t)(v) : undefined;\n\n        target.xWrap = function (fArg, resultType, ...argTypes) {\n          if (3 === arguments.length && Array.isArray(arguments[2])) {\n            argTypes = arguments[2];\n          }\n          if (target.isPtr(fArg)) {\n            fArg =\n              target.functionEntry(fArg) ||\n              toss('Function pointer not found in WASM function table.');\n          }\n          const fIsFunc = fArg instanceof Function;\n          const xf = fIsFunc ? fArg : target.xGet(fArg);\n          if (fIsFunc) fArg = xf.name || 'unnamed function';\n          if (argTypes.length !== xf.length) __argcMismatch(fArg, xf.length);\n          if (null === resultType && 0 === xf.length) {\n            return xf;\n          }\n          if (undefined !== resultType && null !== resultType)\n            __xResultAdapterCheck(resultType);\n          for (const t of argTypes) {\n            if (t instanceof AbstractArgAdapter)\n              xArg.set(t, (...args) => t.convertArg(...args));\n            else __xArgAdapterCheck(t);\n          }\n          const cxw = cache.xWrap;\n          if (0 === xf.length) {\n            return (...args) =>\n              args.length\n                ? __argcMismatch(fArg, xf.length)\n                : cxw.convertResult(resultType, xf.call(null));\n          }\n          return function (...args) {\n            if (args.length !== xf.length) __argcMismatch(fArg, xf.length);\n            const scope = target.scopedAllocPush();\n            try {\n              for (const i in args)\n                args[i] = cxw.convertArgNoCheck(argTypes[i], args[i], args, i);\n              return cxw.convertResultNoCheck(resultType, xf.apply(null, args));\n            } finally {\n              target.scopedAllocPop(scope);\n            }\n          };\n        };\n\n        const __xAdapter = function (\n          func,\n          argc,\n          typeName,\n          adapter,\n          modeName,\n          xcvPart,\n        ) {\n          if ('string' === typeof typeName) {\n            if (1 === argc) return xcvPart.get(typeName);\n            else if (2 === argc) {\n              if (!adapter) {\n                delete xcvPart.get(typeName);\n                return func;\n              } else if (!(adapter instanceof Function)) {\n                toss(modeName, 'requires a function argument.');\n              }\n              xcvPart.set(typeName, adapter);\n              return func;\n            }\n          }\n          toss('Invalid arguments to', modeName);\n        };\n\n        target.xWrap.resultAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'resultAdapter()',\n            xResult,\n          );\n        };\n\n        target.xWrap.argAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'argAdapter()',\n            xArg,\n          );\n        };\n\n        target.xWrap.FuncPtrAdapter = xArg.FuncPtrAdapter;\n\n        target.xCallWrapped = function (fArg, resultType, argTypes, ...args) {\n          if (Array.isArray(arguments[3])) args = arguments[3];\n          return target\n            .xWrap(fArg, resultType, argTypes || [])\n            .apply(null, args || []);\n        };\n\n        target.xWrap.testConvertArg = cache.xWrap.convertArg;\n\n        target.xWrap.testConvertResult = cache.xWrap.convertResult;\n\n        return target;\n      };\n\n      globalThis.WhWasmUtilInstaller.yawl = function (config) {\n        const wfetch = () => fetch(config.uri, { credentials: 'same-origin' });\n        const wui = this;\n        const finalThen = function (arg) {\n          if (config.wasmUtilTarget) {\n            const toss = (...args) => {\n              throw new Error(args.join(' '));\n            };\n            const tgt = config.wasmUtilTarget;\n            tgt.module = arg.module;\n            tgt.instance = arg.instance;\n\n            if (!tgt.instance.exports.memory) {\n              tgt.memory =\n                (config.imports &&\n                  config.imports.env &&\n                  config.imports.env.memory) ||\n                toss(\"Missing 'memory' object!\");\n            }\n            if (!tgt.alloc && arg.instance.exports.malloc) {\n              const exports = arg.instance.exports;\n              tgt.alloc = function (n) {\n                return (\n                  exports.malloc(n) || toss('Allocation of', n, 'bytes failed.')\n                );\n              };\n              tgt.dealloc = function (m) {\n                exports.free(m);\n              };\n            }\n            wui(tgt);\n          }\n          if (config.onload) config.onload(arg, config);\n          return arg;\n        };\n        const loadWasm = WebAssembly.instantiateStreaming\n          ? function loadWasmStreaming() {\n              return WebAssembly.instantiateStreaming(\n                wfetch(),\n                config.imports || {},\n              ).then(finalThen);\n            }\n          : function loadWasmOldSchool() {\n              return wfetch()\n                .then((response) => response.arrayBuffer())\n                .then((bytes) =>\n                  WebAssembly.instantiate(bytes, config.imports || {}),\n                )\n                .then(finalThen);\n            };\n        return loadWasm;\n      }.bind(globalThis.WhWasmUtilInstaller);\n\n      ('use strict');\n      globalThis.Jaccwabyt = function StructBinderFactory(config) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (\n          !(config.heap instanceof WebAssembly.Memory) &&\n          !(config.heap instanceof Function)\n        ) {\n          toss(\n            'config.heap must be WebAssembly.Memory instance or a function.',\n          );\n        }\n        ['alloc', 'dealloc'].forEach(function (k) {\n          config[k] instanceof Function ||\n            toss(\"Config option '\" + k + \"' must be a function.\");\n        });\n        const SBF = StructBinderFactory;\n        const heap =\n            config.heap instanceof Function\n              ? config.heap\n              : () => new Uint8Array(config.heap.buffer),\n          alloc = config.alloc,\n          dealloc = config.dealloc,\n          log = config.log || console.log.bind(console),\n          memberPrefix = config.memberPrefix || '',\n          memberSuffix = config.memberSuffix || '',\n          bigIntEnabled =\n            undefined === config.bigIntEnabled\n              ? !!globalThis['BigInt64Array']\n              : !!config.bigIntEnabled,\n          BigInt = globalThis['BigInt'],\n          BigInt64Array = globalThis['BigInt64Array'],\n          ptrSizeof = config.ptrSizeof || 4,\n          ptrIR = config.ptrIR || 'i32';\n        if (!SBF.debugFlags) {\n          SBF.__makeDebugFlags = function (deriveFrom = null) {\n            if (deriveFrom && deriveFrom.__flags)\n              deriveFrom = deriveFrom.__flags;\n            const f = function f(flags) {\n              if (0 === arguments.length) {\n                return f.__flags;\n              }\n              if (flags < 0) {\n                delete f.__flags.getter;\n                delete f.__flags.setter;\n                delete f.__flags.alloc;\n                delete f.__flags.dealloc;\n              } else {\n                f.__flags.getter = 0 !== (0x01 & flags);\n                f.__flags.setter = 0 !== (0x02 & flags);\n                f.__flags.alloc = 0 !== (0x04 & flags);\n                f.__flags.dealloc = 0 !== (0x08 & flags);\n              }\n              return f._flags;\n            };\n            Object.defineProperty(f, '__flags', {\n              iterable: false,\n              writable: false,\n              value: Object.create(deriveFrom),\n            });\n            if (!deriveFrom) f(0);\n            return f;\n          };\n          SBF.debugFlags = SBF.__makeDebugFlags();\n        }\n\n        const isLittleEndian = (function () {\n          const buffer = new ArrayBuffer(2);\n          new DataView(buffer).setInt16(0, 256, true);\n\n          return new Int16Array(buffer)[0] === 256;\n        })();\n\n        const isFuncSig = (s) => '(' === s[1];\n\n        const isPtrSig = (s) => 'p' === s || 'P' === s;\n        const isAutoPtrSig = (s) => 'P' === s;\n        const sigLetter = (s) => (isFuncSig(s) ? 'p' : s[0]);\n\n        const sigIR = function (s) {\n          switch (sigLetter(s)) {\n            case 'c':\n            case 'C':\n              return 'i8';\n            case 'i':\n              return 'i32';\n            case 'p':\n            case 'P':\n            case 's':\n              return ptrIR;\n            case 'j':\n              return 'i64';\n            case 'f':\n              return 'float';\n            case 'd':\n              return 'double';\n          }\n          toss('Unhandled signature IR:', s);\n        };\n\n        const affirmBigIntArray = BigInt64Array\n          ? () => true\n          : () => toss('BigInt64Array is not available.');\n\n        const sigDVGetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'getInt32';\n                case 8:\n                  return affirmBigIntArray() && 'getBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'getInt32';\n            case 'c':\n              return 'getInt8';\n            case 'C':\n              return 'getUint8';\n            case 'j':\n              return affirmBigIntArray() && 'getBigInt64';\n            case 'f':\n              return 'getFloat32';\n            case 'd':\n              return 'getFloat64';\n          }\n          toss('Unhandled DataView getter for signature:', s);\n        };\n\n        const sigDVSetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'setInt32';\n                case 8:\n                  return affirmBigIntArray() && 'setBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'setInt32';\n            case 'c':\n              return 'setInt8';\n            case 'C':\n              return 'setUint8';\n            case 'j':\n              return affirmBigIntArray() && 'setBigInt64';\n            case 'f':\n              return 'setFloat32';\n            case 'd':\n              return 'setFloat64';\n          }\n          toss('Unhandled DataView setter for signature:', s);\n        };\n\n        const sigDVSetWrapper = function (s) {\n          switch (sigLetter(s)) {\n            case 'i':\n            case 'f':\n            case 'c':\n            case 'C':\n            case 'd':\n              return Number;\n            case 'j':\n              return affirmBigIntArray() && BigInt;\n            case 'p':\n            case 'P':\n            case 's':\n              switch (ptrSizeof) {\n                case 4:\n                  return Number;\n                case 8:\n                  return affirmBigIntArray() && BigInt;\n              }\n              break;\n          }\n          toss('Unhandled DataView set wrapper for signature:', s);\n        };\n\n        const sPropName = (s, k) => s + '::' + k;\n\n        const __propThrowOnSet = function (structName, propName) {\n          return () => toss(sPropName(structName, propName), 'is read-only.');\n        };\n\n        const __instancePointerMap = new WeakMap();\n\n        const xPtrPropName = '(pointer-is-external)';\n\n        const __freeStruct = function (ctor, obj, m) {\n          if (!m) m = __instancePointerMap.get(obj);\n          if (m) {\n            __instancePointerMap.delete(obj);\n            if (Array.isArray(obj.ondispose)) {\n              let x;\n              while ((x = obj.ondispose.shift())) {\n                try {\n                  if (x instanceof Function) x.call(obj);\n                  else if (x instanceof StructType) x.dispose();\n                  else if ('number' === typeof x) dealloc(x);\n                } catch (e) {\n                  console.warn(\n                    'ondispose() for',\n                    ctor.structName,\n                    '@',\n                    m,\n                    'threw. NOT propagating it.',\n                    e,\n                  );\n                }\n              }\n            } else if (obj.ondispose instanceof Function) {\n              try {\n                obj.ondispose();\n              } catch (e) {\n                console.warn(\n                  'ondispose() for',\n                  ctor.structName,\n                  '@',\n                  m,\n                  'threw. NOT propagating it.',\n                  e,\n                );\n              }\n            }\n            delete obj.ondispose;\n            if (ctor.debugFlags.__flags.dealloc) {\n              log(\n                'debug.dealloc:',\n                obj[xPtrPropName] ? 'EXTERNAL' : '',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (!obj[xPtrPropName]) dealloc(m);\n          }\n        };\n\n        const rop = (v) => {\n          return {\n            configurable: false,\n            writable: false,\n            iterable: false,\n            value: v,\n          };\n        };\n\n        const __allocStruct = function (ctor, obj, m) {\n          let fill = !m;\n          if (m) Object.defineProperty(obj, xPtrPropName, rop(m));\n          else {\n            m = alloc(ctor.structInfo.sizeof);\n            if (!m) toss('Allocation of', ctor.structName, 'structure failed.');\n          }\n          try {\n            if (ctor.debugFlags.__flags.alloc) {\n              log(\n                'debug.alloc:',\n                fill ? '' : 'EXTERNAL',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (fill) heap().fill(0, m, m + ctor.structInfo.sizeof);\n            __instancePointerMap.set(obj, m);\n          } catch (e) {\n            __freeStruct(ctor, obj, m);\n            throw e;\n          }\n        };\n\n        const __memoryDump = function () {\n          const p = this.pointer;\n          return p\n            ? new Uint8Array(heap().slice(p, p + this.structInfo.sizeof))\n            : null;\n        };\n\n        const __memberKey = (k) => memberPrefix + k + memberSuffix;\n        const __memberKeyProp = rop(__memberKey);\n\n        const __lookupMember = function (\n          structInfo,\n          memberName,\n          tossIfNotFound = true,\n        ) {\n          let m = structInfo.members[memberName];\n          if (!m && (memberPrefix || memberSuffix)) {\n            for (const v of Object.values(structInfo.members)) {\n              if (v.key === memberName) {\n                m = v;\n                break;\n              }\n            }\n            if (!m && tossIfNotFound) {\n              toss(\n                sPropName(structInfo.name, memberName),\n                'is not a mapped struct member.',\n              );\n            }\n          }\n          return m;\n        };\n\n        const __memberSignature = function f(\n          obj,\n          memberName,\n          emscriptenFormat = false,\n        ) {\n          if (!f._)\n            f._ = (x) =>\n              x.replace(/[^vipPsjrdcC]/g, '').replace(/[pPscC]/g, 'i');\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          return emscriptenFormat ? f._(m.signature) : m.signature;\n        };\n\n        const __ptrPropDescriptor = {\n          configurable: false,\n          enumerable: false,\n          get: function () {\n            return __instancePointerMap.get(this);\n          },\n          set: () => toss(\"Cannot assign the 'pointer' property of a struct.\"),\n        };\n\n        const __structMemberKeys = rop(function () {\n          const a = [];\n          for (const k of Object.keys(this.structInfo.members)) {\n            a.push(this.memberKey(k));\n          }\n          return a;\n        });\n\n        const __utf8Decoder = new TextDecoder('utf-8');\n        const __utf8Encoder = new TextEncoder();\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return __utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        const __memberIsString = function (\n          obj,\n          memberName,\n          tossIfNotFound = false,\n        ) {\n          const m = __lookupMember(obj.structInfo, memberName, tossIfNotFound);\n          return m && 1 === m.signature.length && 's' === m.signature[0]\n            ? m\n            : false;\n        };\n\n        const __affirmCStringSignature = function (member) {\n          if ('s' === member.signature) return;\n          toss(\n            'Invalid member type signature for C-string value:',\n            JSON.stringify(member),\n          );\n        };\n\n        const __memberToJsString = function f(obj, memberName) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n          const addr = obj[m.key];\n\n          if (!addr) return null;\n          let pos = addr;\n          const mem = heap();\n          for (; mem[pos] !== 0; ++pos) {}\n\n          return addr === pos ? '' : __utf8Decode(mem, addr, pos);\n        };\n\n        const __addOnDispose = function (obj, ...v) {\n          if (obj.ondispose) {\n            if (!Array.isArray(obj.ondispose)) {\n              obj.ondispose = [obj.ondispose];\n            }\n          } else {\n            obj.ondispose = [];\n          }\n          obj.ondispose.push(...v);\n        };\n\n        const __allocCString = function (str) {\n          const u = __utf8Encoder.encode(str);\n          const mem = alloc(u.length + 1);\n          if (!mem) toss('Allocation error while duplicating string:', str);\n          const h = heap();\n\n          h.set(u, mem);\n          h[mem + u.length] = 0;\n\n          return mem;\n        };\n\n        const __setMemberCString = function (obj, memberName, str) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n\n          const mem = __allocCString(str);\n          obj[m.key] = mem;\n          __addOnDispose(obj, mem);\n          return obj;\n        };\n\n        const StructType = function ctor(structName, structInfo) {\n          if (arguments[2] !== rop) {\n            toss(\n              'Do not call the StructType constructor',\n              'from client-level code.',\n            );\n          }\n          Object.defineProperties(this, {\n            structName: rop(structName),\n            structInfo: rop(structInfo),\n          });\n        };\n\n        StructType.prototype = Object.create(null, {\n          dispose: rop(function () {\n            __freeStruct(this.constructor, this);\n          }),\n          lookupMember: rop(function (memberName, tossIfNotFound = true) {\n            return __lookupMember(this.structInfo, memberName, tossIfNotFound);\n          }),\n          memberToJsString: rop(function (memberName) {\n            return __memberToJsString(this, memberName);\n          }),\n          memberIsString: rop(function (memberName, tossIfNotFound = true) {\n            return __memberIsString(this, memberName, tossIfNotFound);\n          }),\n          memberKey: __memberKeyProp,\n          memberKeys: __structMemberKeys,\n          memberSignature: rop(function (memberName, emscriptenFormat = false) {\n            return __memberSignature(this, memberName, emscriptenFormat);\n          }),\n          memoryDump: rop(__memoryDump),\n          pointer: __ptrPropDescriptor,\n          setMemberCString: rop(function (memberName, str) {\n            return __setMemberCString(this, memberName, str);\n          }),\n        });\n\n        Object.assign(StructType.prototype, {\n          addOnDispose: function (...v) {\n            __addOnDispose(this, ...v);\n            return this;\n          },\n        });\n\n        Object.defineProperties(StructType, {\n          allocCString: rop(__allocCString),\n          isA: rop((v) => v instanceof StructType),\n          hasExternalPointer: rop(\n            (v) => v instanceof StructType && !!v[xPtrPropName],\n          ),\n          memberKey: __memberKeyProp,\n        });\n\n        const isNumericValue = (v) =>\n          Number.isFinite(v) || v instanceof (BigInt || Number);\n\n        const makeMemberWrapper = function f(ctor, name, descr) {\n          if (!f._) {\n            f._ = { getters: {}, setters: {}, sw: {} };\n            const a = ['i', 'c', 'C', 'p', 'P', 's', 'f', 'd', 'v()'];\n            if (bigIntEnabled) a.push('j');\n            a.forEach(function (v) {\n              f._.getters[v] = sigDVGetter(v);\n              f._.setters[v] = sigDVSetter(v);\n              f._.sw[v] = sigDVSetWrapper(v);\n            });\n            const rxSig1 = /^[ipPsjfdcC]$/,\n              rxSig2 = /^[vipPsjfdcC]\\([ipPsjfdcC]*\\)$/;\n            f.sigCheck = function (obj, name, key, sig) {\n              if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                toss(obj.structName, 'already has a property named', key + '.');\n              }\n              rxSig1.test(sig) ||\n                rxSig2.test(sig) ||\n                toss(\n                  'Malformed signature for',\n                  sPropName(obj.structName, name) + ':',\n                  sig,\n                );\n            };\n          }\n          const key = ctor.memberKey(name);\n          f.sigCheck(ctor.prototype, name, key, descr.signature);\n          descr.key = key;\n          descr.name = name;\n          const sigGlyph = sigLetter(descr.signature);\n          const xPropName = sPropName(ctor.prototype.structName, key);\n          const dbg = ctor.prototype.debugFlags.__flags;\n\n          const prop = Object.create(null);\n          prop.configurable = false;\n          prop.enumerable = false;\n          prop.get = function () {\n            if (dbg.getter) {\n              log(\n                'debug.getter:',\n                f._.getters[sigGlyph],\n                'for',\n                sigIR(sigGlyph),\n                xPropName,\n                '@',\n                this.pointer,\n                '+',\n                descr.offset,\n                'sz',\n                descr.sizeof,\n              );\n            }\n            let rc = new DataView(\n              heap().buffer,\n              this.pointer + descr.offset,\n              descr.sizeof,\n            )[f._.getters[sigGlyph]](0, isLittleEndian);\n            if (dbg.getter) log('debug.getter:', xPropName, 'result =', rc);\n            return rc;\n          };\n          if (descr.readOnly) {\n            prop.set = __propThrowOnSet(ctor.prototype.structName, key);\n          } else {\n            prop.set = function (v) {\n              if (dbg.setter) {\n                log(\n                  'debug.setter:',\n                  f._.setters[sigGlyph],\n                  'for',\n                  sigIR(sigGlyph),\n                  xPropName,\n                  '@',\n                  this.pointer,\n                  '+',\n                  descr.offset,\n                  'sz',\n                  descr.sizeof,\n                  v,\n                );\n              }\n              if (!this.pointer) {\n                toss('Cannot set struct property on disposed instance.');\n              }\n              if (null === v) v = 0;\n              else\n                while (!isNumericValue(v)) {\n                  if (\n                    isAutoPtrSig(descr.signature) &&\n                    v instanceof StructType\n                  ) {\n                    v = v.pointer || 0;\n                    if (dbg.setter)\n                      log('debug.setter:', xPropName, 'resolved to', v);\n                    break;\n                  }\n                  toss('Invalid value for pointer-type', xPropName + '.');\n                }\n              new DataView(\n                heap().buffer,\n                this.pointer + descr.offset,\n                descr.sizeof,\n              )[f._.setters[sigGlyph]](0, f._.sw[sigGlyph](v), isLittleEndian);\n            };\n          }\n          Object.defineProperty(ctor.prototype, key, prop);\n        };\n\n        const StructBinder = function StructBinder(structName, structInfo) {\n          if (1 === arguments.length) {\n            structInfo = structName;\n            structName = structInfo.name;\n          } else if (!structInfo.name) {\n            structInfo.name = structName;\n          }\n          if (!structName) toss('Struct name is required.');\n          let lastMember = false;\n          Object.keys(structInfo.members).forEach((k) => {\n            const m = structInfo.members[k];\n            if (!m.sizeof) toss(structName, 'member', k, 'is missing sizeof.');\n            else if (m.sizeof === 1) {\n              m.signature === 'c' ||\n                m.signature === 'C' ||\n                toss(\n                  'Unexpected sizeof==1 member',\n                  sPropName(structInfo.name, k),\n                  'with signature',\n                  m.signature,\n                );\n            } else {\n              if (0 !== m.sizeof % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'sizeof is not aligned. sizeof=' + m.sizeof,\n                );\n              }\n              if (0 !== m.offset % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'offset is not aligned. offset=' + m.offset,\n                );\n              }\n            }\n            if (!lastMember || lastMember.offset < m.offset) lastMember = m;\n          });\n          if (!lastMember) toss('No member property descriptions found.');\n          else if (structInfo.sizeof < lastMember.offset + lastMember.sizeof) {\n            toss(\n              'Invalid struct config:',\n              structName,\n              'max member offset (' + lastMember.offset + ') ',\n              'extends past end of struct (sizeof=' + structInfo.sizeof + ').',\n            );\n          }\n          const debugFlags = rop(SBF.__makeDebugFlags(StructBinder.debugFlags));\n\n          const StructCtor = function StructCtor(externalMemory) {\n            if (!(this instanceof StructCtor)) {\n              toss(\n                'The',\n                structName,\n                \"constructor may only be called via 'new'.\",\n              );\n            } else if (arguments.length) {\n              if (\n                externalMemory !== (externalMemory | 0) ||\n                externalMemory <= 0\n              ) {\n                toss('Invalid pointer value for', structName, 'constructor.');\n              }\n              __allocStruct(StructCtor, this, externalMemory);\n            } else {\n              __allocStruct(StructCtor, this);\n            }\n          };\n          Object.defineProperties(StructCtor, {\n            debugFlags: debugFlags,\n            isA: rop((v) => v instanceof StructCtor),\n            memberKey: __memberKeyProp,\n            memberKeys: __structMemberKeys,\n            methodInfoForKey: rop(function (mKey) {}),\n            structInfo: rop(structInfo),\n            structName: rop(structName),\n          });\n          StructCtor.prototype = new StructType(structName, structInfo, rop);\n          Object.defineProperties(StructCtor.prototype, {\n            debugFlags: debugFlags,\n            constructor: rop(StructCtor),\n          });\n          Object.keys(structInfo.members).forEach((name) =>\n            makeMemberWrapper(StructCtor, name, structInfo.members[name]),\n          );\n          return StructCtor;\n        };\n        StructBinder.StructType = StructType;\n        StructBinder.config = config;\n        StructBinder.allocCString = __allocCString;\n        if (!StructBinder.debugFlags) {\n          StructBinder.debugFlags = SBF.__makeDebugFlags(SBF.debugFlags);\n        }\n        return StructBinder;\n      };\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        'use strict';\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = sqlite3.SQLite3Error.toss;\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n        globalThis.WhWasmUtilInstaller(wasm);\n        delete globalThis.WhWasmUtilInstaller;\n\n        if (0) {\n          const dealloc = wasm.exports[sqlite3.config.deallocExportName];\n          const nFunc = wasm.functionTable().length;\n          let i;\n          for (i = 0; i < nFunc; ++i) {\n            const e = wasm.functionEntry(i);\n            if (dealloc === e) {\n              capi.SQLITE_WASM_DEALLOC = i;\n              break;\n            }\n          }\n          if (dealloc !== wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot find function pointer for SQLITE_WASM_DEALLOC.',\n            );\n          }\n        }\n\n        wasm.bindingSignatures = [\n          ['sqlite3_aggregate_context', 'void*', 'sqlite3_context*', 'int'],\n\n          ['sqlite3_bind_double', 'int', 'sqlite3_stmt*', 'int', 'f64'],\n          ['sqlite3_bind_int', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_bind_null', undefined, 'sqlite3_stmt*', 'int'],\n          ['sqlite3_bind_parameter_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_bind_parameter_index', 'int', 'sqlite3_stmt*', 'string'],\n          [\n            'sqlite3_bind_pointer',\n            'int',\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'string:static',\n            '*',\n          ],\n          [\n            'sqlite3_busy_handler',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pi)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_busy_timeout', 'int', 'sqlite3*', 'int'],\n\n          ['sqlite3_changes', 'int', 'sqlite3*'],\n          ['sqlite3_clear_bindings', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_collation_needed', 'int', 'sqlite3*', '*', '*'],\n          ['sqlite3_column_blob', '*', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_bytes', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_column_double', 'f64', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_int', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_name', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_text', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_type', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_value', 'sqlite3_value*', 'sqlite3_stmt*', 'int'],\n          [\n            'sqlite3_commit_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_commit_hook',\n                signature: 'i(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_compileoption_get', 'string', 'int'],\n          ['sqlite3_compileoption_used', 'int', 'string'],\n          ['sqlite3_complete', 'int', 'string:flexible'],\n          ['sqlite3_context_db_handle', 'sqlite3*', 'sqlite3_context*'],\n\n          ['sqlite3_data_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_db_filename', 'string', 'sqlite3*', 'string'],\n          ['sqlite3_db_handle', 'sqlite3*', 'sqlite3_stmt*'],\n          ['sqlite3_db_name', 'string', 'sqlite3*', 'int'],\n          ['sqlite3_db_status', 'int', 'sqlite3*', 'int', '*', '*', 'int'],\n          ['sqlite3_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_errmsg', 'string', 'sqlite3*'],\n          ['sqlite3_error_offset', 'int', 'sqlite3*'],\n          ['sqlite3_errstr', 'string', 'int'],\n          [\n            'sqlite3_exec',\n            'int',\n            [\n              'sqlite3*',\n              'string:flexible',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pipp)',\n                bindScope: 'transient',\n                callProxy: (callback) => {\n                  let aNames;\n                  return (pVoid, nCols, pColVals, pColNames) => {\n                    try {\n                      const aVals = wasm.cArgvToJs(nCols, pColVals);\n                      if (!aNames) aNames = wasm.cArgvToJs(nCols, pColNames);\n                      return callback(aVals, aNames) | 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n              '**',\n            ],\n          ],\n          ['sqlite3_expanded_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_extended_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_extended_result_codes', 'int', 'sqlite3*', 'int'],\n          ['sqlite3_file_control', 'int', 'sqlite3*', 'string', 'int', '*'],\n          ['sqlite3_finalize', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_free', undefined, '*'],\n          ['sqlite3_get_auxdata', '*', 'sqlite3_context*', 'int'],\n          ['sqlite3_initialize', undefined],\n\n          ['sqlite3_keyword_count', 'int'],\n          ['sqlite3_keyword_name', 'int', ['int', '**', '*']],\n          ['sqlite3_keyword_check', 'int', ['string', 'int']],\n          ['sqlite3_libversion', 'string'],\n          ['sqlite3_libversion_number', 'int'],\n          ['sqlite3_limit', 'int', ['sqlite3*', 'int', 'int']],\n          ['sqlite3_malloc', '*', 'int'],\n          ['sqlite3_open', 'int', 'string', '*'],\n          ['sqlite3_open_v2', 'int', 'string', '*', 'int', 'string'],\n\n          [\n            'sqlite3_progress_handler',\n            undefined,\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xProgressHandler',\n                signature: 'i(p)',\n                bindScope: 'context',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_realloc', '*', '*', 'int'],\n          ['sqlite3_reset', 'int', 'sqlite3_stmt*'],\n\n          [\n            'sqlite3_result_blob',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_double', undefined, 'sqlite3_context*', 'f64'],\n          [\n            'sqlite3_result_error',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n          ],\n          ['sqlite3_result_error_code', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_error_nomem', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_error_toobig', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_int', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_null', undefined, 'sqlite3_context*'],\n          [\n            'sqlite3_result_pointer',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'string:static',\n            '*',\n          ],\n          ['sqlite3_result_subtype', undefined, 'sqlite3_value*', 'int'],\n          [\n            'sqlite3_result_text',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_zeroblob', undefined, 'sqlite3_context*', 'int'],\n          [\n            'sqlite3_rollback_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_rollback_hook',\n                signature: 'v(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          [\n            'sqlite3_set_authorizer',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_set_authorizer::xAuth',\n                signature: 'i(pi' + 'ssss)',\n                contextKey: (argv, argIndex) => argv[0],\n                callProxy: (callback) => {\n                  return (pV, iCode, s0, s1, s2, s3) => {\n                    try {\n                      s0 = s0 && wasm.cstrToJs(s0);\n                      s1 = s1 && wasm.cstrToJs(s1);\n                      s2 = s2 && wasm.cstrToJs(s2);\n                      s3 = s3 && wasm.cstrToJs(s3);\n                      return callback(pV, iCode, s0, s1, s2, s3) || 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          [\n            'sqlite3_set_auxdata',\n            undefined,\n            [\n              'sqlite3_context*',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroyAuxData',\n                signature: 'v(*)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n            ],\n          ],\n          ['sqlite3_shutdown', undefined],\n          ['sqlite3_sourceid', 'string'],\n          ['sqlite3_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_status', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_step', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_stmt_isexplain', 'int', ['sqlite3_stmt*']],\n          ['sqlite3_stmt_readonly', 'int', ['sqlite3_stmt*']],\n          ['sqlite3_stmt_status', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_strglob', 'int', 'string', 'string'],\n          ['sqlite3_stricmp', 'int', 'string', 'string'],\n          ['sqlite3_strlike', 'int', 'string', 'string', 'int'],\n          ['sqlite3_strnicmp', 'int', 'string', 'string', 'int'],\n          [\n            'sqlite3_table_column_metadata',\n            'int',\n            'sqlite3*',\n            'string',\n            'string',\n            'string',\n            '**',\n            '**',\n            '*',\n            '*',\n            '*',\n          ],\n          ['sqlite3_total_changes', 'int', 'sqlite3*'],\n          [\n            'sqlite3_trace_v2',\n            'int',\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_trace_v2::callback',\n                signature: 'i(ippp)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_txn_state', 'int', ['sqlite3*', 'string']],\n\n          ['sqlite3_uri_boolean', 'int', 'sqlite3_filename', 'string', 'int'],\n          ['sqlite3_uri_key', 'string', 'sqlite3_filename', 'int'],\n          ['sqlite3_uri_parameter', 'string', 'sqlite3_filename', 'string'],\n          ['sqlite3_user_data', 'void*', 'sqlite3_context*'],\n          ['sqlite3_value_blob', '*', 'sqlite3_value*'],\n          ['sqlite3_value_bytes', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_double', 'f64', 'sqlite3_value*'],\n          ['sqlite3_value_dup', 'sqlite3_value*', 'sqlite3_value*'],\n          ['sqlite3_value_free', undefined, 'sqlite3_value*'],\n          ['sqlite3_value_frombind', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_int', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_nochange', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_numeric_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_pointer', '*', 'sqlite3_value*', 'string:static'],\n          ['sqlite3_value_subtype', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_text', 'string', 'sqlite3_value*'],\n          ['sqlite3_value_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_vfs_find', '*', 'string'],\n          ['sqlite3_vfs_register', 'int', 'sqlite3_vfs*', 'int'],\n          ['sqlite3_vfs_unregister', 'int', 'sqlite3_vfs*'],\n        ];\n\n        if (false && wasm.compileOptionUsed('SQLITE_ENABLE_NORMALIZE')) {\n          wasm.bindingSignatures.push([\n            'sqlite3_normalized_sql',\n            'string',\n            'sqlite3_stmt*',\n          ]);\n        }\n\n        if (wasm.exports.sqlite3_activate_see instanceof Function) {\n          wasm.bindingSignatures.push(\n            ['sqlite3_key', 'int', 'sqlite3*', 'string', 'int'],\n            ['sqlite3_key_v2', 'int', 'sqlite3*', 'string', '*', 'int'],\n            ['sqlite3_rekey', 'int', 'sqlite3*', 'string', 'int'],\n            ['sqlite3_rekey_v2', 'int', 'sqlite3*', 'string', '*', 'int'],\n            ['sqlite3_activate_see', undefined, 'string'],\n          );\n        }\n\n        wasm.bindingSignatures.int64 = [\n          ['sqlite3_bind_int64', 'int', ['sqlite3_stmt*', 'int', 'i64']],\n          ['sqlite3_changes64', 'i64', ['sqlite3*']],\n          ['sqlite3_column_int64', 'i64', ['sqlite3_stmt*', 'int']],\n          [\n            'sqlite3_create_module',\n            'int',\n            ['sqlite3*', 'string', 'sqlite3_module*', '*'],\n          ],\n          [\n            'sqlite3_create_module_v2',\n            'int',\n            ['sqlite3*', 'string', 'sqlite3_module*', '*', '*'],\n          ],\n          ['sqlite3_declare_vtab', 'int', ['sqlite3*', 'string:flexible']],\n          [\n            'sqlite3_deserialize',\n            'int',\n            'sqlite3*',\n            'string',\n            '*',\n            'i64',\n            'i64',\n            'int',\n          ],\n          ['sqlite3_drop_modules', 'int', ['sqlite3*', '**']],\n          ['sqlite3_last_insert_rowid', 'i64', ['sqlite3*']],\n          ['sqlite3_malloc64', '*', 'i64'],\n          ['sqlite3_msize', 'i64', '*'],\n          ['sqlite3_overload_function', 'int', ['sqlite3*', 'string', 'int']],\n          ['sqlite3_preupdate_blobwrite', 'int', 'sqlite3*'],\n          ['sqlite3_preupdate_count', 'int', 'sqlite3*'],\n          ['sqlite3_preupdate_depth', 'int', 'sqlite3*'],\n          [\n            'sqlite3_preupdate_hook',\n            '*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_preupdate_hook',\n                signature: 'v(ppippjj)',\n                contextKey: (argv) => argv[0],\n                callProxy: (callback) => {\n                  return (p, db, op, zDb, zTbl, iKey1, iKey2) => {\n                    callback(\n                      p,\n                      db,\n                      op,\n                      wasm.cstrToJs(zDb),\n                      wasm.cstrToJs(zTbl),\n                      iKey1,\n                      iKey2,\n                    );\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_preupdate_new', 'int', ['sqlite3*', 'int', '**']],\n          ['sqlite3_preupdate_old', 'int', ['sqlite3*', 'int', '**']],\n          ['sqlite3_realloc64', '*', '*', 'i64'],\n          ['sqlite3_result_int64', undefined, '*', 'i64'],\n          ['sqlite3_result_zeroblob64', 'int', '*', 'i64'],\n          ['sqlite3_serialize', '*', 'sqlite3*', 'string', '*', 'int'],\n          ['sqlite3_set_last_insert_rowid', undefined, ['sqlite3*', 'i64']],\n          ['sqlite3_status64', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_total_changes64', 'i64', ['sqlite3*']],\n          [\n            'sqlite3_update_hook',\n            '*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_update_hook',\n                signature: 'v(iippj)',\n                contextKey: (argv) => argv[0],\n                callProxy: (callback) => {\n                  return (p, op, z0, z1, rowid) => {\n                    callback(\n                      p,\n                      op,\n                      wasm.cstrToJs(z0),\n                      wasm.cstrToJs(z1),\n                      rowid,\n                    );\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_uri_int64', 'i64', ['sqlite3_filename', 'string', 'i64']],\n          ['sqlite3_value_int64', 'i64', 'sqlite3_value*'],\n          ['sqlite3_vtab_collation', 'string', 'sqlite3_index_info*', 'int'],\n          ['sqlite3_vtab_distinct', 'int', 'sqlite3_index_info*'],\n          ['sqlite3_vtab_in', 'int', 'sqlite3_index_info*', 'int', 'int'],\n          ['sqlite3_vtab_in_first', 'int', 'sqlite3_value*', '**'],\n          ['sqlite3_vtab_in_next', 'int', 'sqlite3_value*', '**'],\n\n          ['sqlite3_vtab_nochange', 'int', 'sqlite3_context*'],\n          ['sqlite3_vtab_on_conflict', 'int', 'sqlite3*'],\n          ['sqlite3_vtab_rhs_value', 'int', 'sqlite3_index_info*', 'int', '**'],\n        ];\n\n        if (wasm.bigIntEnabled && !!wasm.exports.sqlite3changegroup_add) {\n          const __ipsProxy = {\n            signature: 'i(ps)',\n            callProxy: (callback) => {\n              return (p, s) => {\n                try {\n                  return callback(p, wasm.cstrToJs(s)) | 0;\n                } catch (e) {\n                  return e.resultCode || capi.SQLITE_ERROR;\n                }\n              };\n            },\n          };\n\n          wasm.bindingSignatures.int64.push(\n            ...[\n              [\n                'sqlite3changegroup_add',\n                'int',\n                ['sqlite3_changegroup*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3changegroup_add_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changegroup_delete',\n                undefined,\n                ['sqlite3_changegroup*'],\n              ],\n              ['sqlite3changegroup_new', 'int', ['**']],\n              [\n                'sqlite3changegroup_output',\n                'int',\n                ['sqlite3_changegroup*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changegroup_output_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_concat',\n                'int',\n                ['int', 'void*', 'int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_concat_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputA',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputB',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_conflict',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_finalize', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_fk_conflicts',\n                'int',\n                ['sqlite3_changeset_iter*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_invert',\n                'int',\n                ['int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_invert_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_new',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_next', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_old',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              [\n                'sqlite3changeset_op',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*', 'int*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_pk',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*'],\n              ],\n              ['sqlite3changeset_start', 'int', ['**', 'int', '*']],\n              [\n                'sqlite3changeset_start_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3changeset_start_v2', 'int', ['**', 'int', '*', 'int']],\n              [\n                'sqlite3changeset_start_v2_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  'int',\n                ],\n              ],\n              ['sqlite3session_attach', 'int', ['sqlite3_session*', 'string']],\n              [\n                'sqlite3session_changeset',\n                'int',\n                ['sqlite3_session*', 'int*', '**'],\n              ],\n              ['sqlite3session_changeset_size', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_changeset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3session_config', 'int', ['int', 'void*']],\n              ['sqlite3session_create', 'int', ['sqlite3*', 'string', '**']],\n\n              [\n                'sqlite3session_diff',\n                'int',\n                ['sqlite3_session*', 'string', 'string', '**'],\n              ],\n              ['sqlite3session_enable', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_indirect', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_isempty', 'int', ['sqlite3_session*']],\n              ['sqlite3session_memory_used', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_object_config',\n                'int',\n                ['sqlite3_session*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3session_patchset',\n                'int',\n                ['sqlite3_session*', '*', '**'],\n              ],\n              [\n                'sqlite3session_patchset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3session_table_filter',\n                undefined,\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    ...__ipsProxy,\n                    contextKey: (argv, argIndex) => argv[0],\n                  }),\n                  '*',\n                ],\n              ],\n            ],\n          );\n        }\n\n        wasm.bindingSignatures.wasm = [\n          ['sqlite3_wasm_db_reset', 'int', 'sqlite3*'],\n          ['sqlite3_wasm_db_vfs', 'sqlite3_vfs*', 'sqlite3*', 'string'],\n          [\n            'sqlite3_wasm_vfs_create_file',\n            'int',\n            'sqlite3_vfs*',\n            'string',\n            '*',\n            'int',\n          ],\n          ['sqlite3_wasm_posix_create_file', 'int', 'string', '*', 'int'],\n          ['sqlite3_wasm_vfs_unlink', 'int', 'sqlite3_vfs*', 'string'],\n        ];\n\n        sqlite3.StructBinder = globalThis.Jaccwabyt({\n          heap: 0 ? wasm.memory : wasm.heap8u,\n          alloc: wasm.alloc,\n          dealloc: wasm.dealloc,\n          bigIntEnabled: wasm.bigIntEnabled,\n          memberPrefix: '$',\n        });\n        delete globalThis.Jaccwabyt;\n\n        {\n          const __xString = wasm.xWrap.argAdapter('string');\n          wasm.xWrap.argAdapter('string:flexible', (v) =>\n            __xString(util.flexibleString(v)),\n          );\n\n          wasm.xWrap.argAdapter(\n            'string:static',\n            function (v) {\n              if (wasm.isPtr(v)) return v;\n              v = '' + v;\n              let rc = this[v];\n              return rc || (this[v] = wasm.allocCString(v));\n            }.bind(Object.create(null)),\n          );\n\n          const __xArgPtr = wasm.xWrap.argAdapter('*');\n          const nilType = function () {};\n          wasm.xWrap.argAdapter('sqlite3_filename', __xArgPtr)(\n            'sqlite3_context*',\n            __xArgPtr,\n          )('sqlite3_value*', __xArgPtr)('void*', __xArgPtr)(\n            'sqlite3_changegroup*',\n            __xArgPtr,\n          )('sqlite3_changeset_iter*', __xArgPtr)(\n            'sqlite3_session*',\n            __xArgPtr,\n          )('sqlite3_stmt*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.Stmt || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.DB || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_index_info*', (v) =>\n            __xArgPtr(\n              v instanceof (capi.sqlite3_index_info || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_module*', (v) =>\n            __xArgPtr(\n              v instanceof (capi.sqlite3_module || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_vfs*', (v) => {\n            if ('string' === typeof v) {\n              return (\n                capi.sqlite3_vfs_find(v) ||\n                sqlite3.SQLite3Error.toss(\n                  capi.SQLITE_NOTFOUND,\n                  'Unknown sqlite3_vfs name:',\n                  v,\n                )\n              );\n            }\n            return __xArgPtr(\n              v instanceof (capi.sqlite3_vfs || nilType) ? v.pointer : v,\n            );\n          });\n\n          const __xRcPtr = wasm.xWrap.resultAdapter('*');\n          wasm.xWrap.resultAdapter('sqlite3*', __xRcPtr)(\n            'sqlite3_context*',\n            __xRcPtr,\n          )('sqlite3_stmt*', __xRcPtr)('sqlite3_value*', __xRcPtr)(\n            'sqlite3_vfs*',\n            __xRcPtr,\n          )('void*', __xRcPtr);\n\n          if (0 === wasm.exports.sqlite3_step.length) {\n            wasm.xWrap.doArgcCheck = false;\n            sqlite3.config.warn(\n              'Disabling sqlite3.wasm.xWrap.doArgcCheck due to environmental quirks.',\n            );\n          }\n          for (const e of wasm.bindingSignatures) {\n            capi[e[0]] = wasm.xWrap.apply(null, e);\n          }\n          for (const e of wasm.bindingSignatures.wasm) {\n            wasm[e[0]] = wasm.xWrap.apply(null, e);\n          }\n\n          const fI64Disabled = function (fname) {\n            return () =>\n              toss(\n                fname + '() is unavailable due to lack',\n                'of BigInt support in this build.',\n              );\n          };\n          for (const e of wasm.bindingSignatures.int64) {\n            capi[e[0]] = wasm.bigIntEnabled\n              ? wasm.xWrap.apply(null, e)\n              : fI64Disabled(e[0]);\n          }\n\n          delete wasm.bindingSignatures;\n\n          if (wasm.exports.sqlite3_wasm_db_error) {\n            const __db_err = wasm.xWrap(\n              'sqlite3_wasm_db_error',\n              'int',\n              'sqlite3*',\n              'int',\n              'string',\n            );\n\n            util.sqlite3_wasm_db_error = function (pDb, resultCode, message) {\n              if (resultCode instanceof sqlite3.WasmAllocError) {\n                resultCode = capi.SQLITE_NOMEM;\n                message = 0;\n              } else if (resultCode instanceof Error) {\n                message = message || '' + resultCode;\n                resultCode = resultCode.resultCode || capi.SQLITE_ERROR;\n              }\n              return pDb ? __db_err(pDb, resultCode, message) : resultCode;\n            };\n          } else {\n            util.sqlite3_wasm_db_error = function (pDb, errCode, msg) {\n              console.warn(\n                'sqlite3_wasm_db_error() is not exported.',\n                arguments,\n              );\n              return errCode;\n            };\n          }\n        }\n\n        {\n          const cJson = wasm.xCall('sqlite3_wasm_enum_json');\n          if (!cJson) {\n            toss(\n              \"Maintenance required: increase sqlite3_wasm_enum_json()'s\",\n              'static buffer size!',\n            );\n          }\n\n          wasm.ctype = JSON.parse(wasm.cstrToJs(cJson));\n\n          const defineGroups = [\n            'access',\n            'authorizer',\n            'blobFinalizers',\n            'changeset',\n            'config',\n            'dataTypes',\n            'dbConfig',\n            'dbStatus',\n            'encodings',\n            'fcntl',\n            'flock',\n            'ioCap',\n            'limits',\n            'openFlags',\n            'prepareFlags',\n            'resultCodes',\n            'sqlite3Status',\n            'stmtStatus',\n            'syncFlags',\n            'trace',\n            'txnState',\n            'udfFlags',\n            'version',\n          ];\n          if (wasm.bigIntEnabled) {\n            defineGroups.push('serialize', 'session', 'vtab');\n          }\n          for (const t of defineGroups) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              capi[e[0]] = e[1];\n            }\n          }\n          if (!wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot resolve exported function',\n              'entry SQLITE_WASM_DEALLOC (==' + capi.SQLITE_WASM_DEALLOC + ').',\n            );\n          }\n          const __rcMap = Object.create(null);\n          for (const t of ['resultCodes']) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              __rcMap[e[1]] = e[0];\n            }\n          }\n\n          capi.sqlite3_js_rc_str = (rc) => __rcMap[rc];\n\n          const notThese = Object.assign(Object.create(null), {\n            WasmTestStruct: true,\n\n            sqlite3_kvvfs_methods: !util.isUIThread(),\n\n            sqlite3_index_info: !wasm.bigIntEnabled,\n            sqlite3_index_constraint: !wasm.bigIntEnabled,\n            sqlite3_index_orderby: !wasm.bigIntEnabled,\n            sqlite3_index_constraint_usage: !wasm.bigIntEnabled,\n          });\n          for (const s of wasm.ctype.structs) {\n            if (!notThese[s.name]) {\n              capi[s.name] = sqlite3.StructBinder(s);\n            }\n          }\n          if (capi.sqlite3_index_info) {\n            for (const k of [\n              'sqlite3_index_constraint',\n              'sqlite3_index_orderby',\n              'sqlite3_index_constraint_usage',\n            ]) {\n              capi.sqlite3_index_info[k] = capi[k];\n              delete capi[k];\n            }\n            capi.sqlite3_vtab_config = wasm.xWrap(\n              'sqlite3_wasm_vtab_config',\n              'int',\n              ['sqlite3*', 'int', 'int'],\n            );\n          }\n        }\n\n        const __dbArgcMismatch = (pDb, f, n) => {\n          return util.sqlite3_wasm_db_error(\n            pDb,\n            capi.SQLITE_MISUSE,\n            f + '() requires ' + n + ' argument' + (1 === n ? '' : 's') + '.',\n          );\n        };\n\n        const __errEncoding = (pDb) => {\n          return util.sqlite3_wasm_db_error(\n            pDb,\n            capi.SQLITE_FORMAT,\n            'SQLITE_UTF8 is the only supported encoding.',\n          );\n        };\n\n        const __argPDb = (pDb) => wasm.xWrap.argAdapter('sqlite3*')(pDb);\n        const __argStr = (str) => (wasm.isPtr(str) ? wasm.cstrToJs(str) : str);\n        const __dbCleanupMap = function (pDb, mode) {\n          pDb = __argPDb(pDb);\n          let m = this.dbMap.get(pDb);\n          if (!mode) {\n            this.dbMap.delete(pDb);\n            return m;\n          } else if (!m && mode > 0) {\n            this.dbMap.set(pDb, (m = Object.create(null)));\n          }\n          return m;\n        }.bind(\n          Object.assign(Object.create(null), {\n            dbMap: new Map(),\n          }),\n        );\n\n        __dbCleanupMap.addCollation = function (pDb, name) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.collation) m.collation = new Set();\n          m.collation.add(__argStr(name).toLowerCase());\n        };\n\n        __dbCleanupMap._addUDF = function (pDb, name, arity, map) {\n          name = __argStr(name).toLowerCase();\n          let u = map.get(name);\n          if (!u) map.set(name, (u = new Set()));\n          u.add(arity < 0 ? -1 : arity);\n        };\n\n        __dbCleanupMap.addFunction = function (pDb, name, arity) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.udf) m.udf = new Map();\n          this._addUDF(pDb, name, arity, m.udf);\n        };\n\n        __dbCleanupMap.addWindowFunc = function (pDb, name, arity) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.wudf) m.wudf = new Map();\n          this._addUDF(pDb, name, arity, m.wudf);\n        };\n\n        __dbCleanupMap.cleanup = function (pDb) {\n          pDb = __argPDb(pDb);\n\n          const closeArgs = [pDb];\n          for (const name of [\n            'sqlite3_busy_handler',\n            'sqlite3_commit_hook',\n            'sqlite3_preupdate_hook',\n            'sqlite3_progress_handler',\n            'sqlite3_rollback_hook',\n            'sqlite3_set_authorizer',\n            'sqlite3_trace_v2',\n            'sqlite3_update_hook',\n          ]) {\n            const x = wasm.exports[name];\n            closeArgs.length = x.length;\n            try {\n              capi[name](...closeArgs);\n            } catch (e) {\n              console.warn(\n                'close-time call of',\n                name + '(',\n                closeArgs,\n                ') threw:',\n                e,\n              );\n            }\n          }\n          const m = __dbCleanupMap(pDb, 0);\n          if (!m) return;\n          if (m.collation) {\n            for (const name of m.collation) {\n              try {\n                capi.sqlite3_create_collation_v2(\n                  pDb,\n                  name,\n                  capi.SQLITE_UTF8,\n                  0,\n                  0,\n                  0,\n                );\n              } catch (e) {}\n            }\n            delete m.collation;\n          }\n          let i;\n          for (i = 0; i < 2; ++i) {\n            const fmap = i ? m.wudf : m.udf;\n            if (!fmap) continue;\n            const func = i\n              ? capi.sqlite3_create_window_function\n              : capi.sqlite3_create_function_v2;\n            for (const e of fmap) {\n              const name = e[0],\n                arities = e[1];\n              const fargs = [pDb, name, 0, capi.SQLITE_UTF8, 0, 0, 0, 0, 0];\n              if (i) fargs.push(0);\n              for (const arity of arities) {\n                try {\n                  fargs[2] = arity;\n                  func.apply(null, fargs);\n                } catch (e) {}\n              }\n              arities.clear();\n            }\n            fmap.clear();\n          }\n          delete m.udf;\n          delete m.wudf;\n        };\n\n        {\n          const __sqlite3CloseV2 = wasm.xWrap(\n            'sqlite3_close_v2',\n            'int',\n            'sqlite3*',\n          );\n          capi.sqlite3_close_v2 = function (pDb) {\n            if (1 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_close_v2', 1);\n            if (pDb) {\n              try {\n                __dbCleanupMap.cleanup(pDb);\n              } catch (e) {}\n            }\n            return __sqlite3CloseV2(pDb);\n          };\n        }\n\n        if (capi.sqlite3session_table_filter) {\n          const __sqlite3SessionDelete = wasm.xWrap(\n            'sqlite3session_delete',\n            undefined,\n            ['sqlite3_session*'],\n          );\n          capi.sqlite3session_delete = function (pSession) {\n            if (1 !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3session_delete', 1);\n            } else if (pSession) {\n              capi.sqlite3session_table_filter(pSession, 0, 0);\n            }\n            __sqlite3SessionDelete(pSession);\n          };\n        }\n\n        {\n          const contextKey = (argv, argIndex) => {\n            return (\n              'argv[' +\n              argIndex +\n              ']:' +\n              argv[0] +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n          const __sqlite3CreateCollationV2 = wasm.xWrap(\n            'sqlite3_create_collation_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xCompare',\n                signature: 'i(pipip)',\n                contextKey,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                signature: 'v(p)',\n                contextKey,\n              }),\n            ],\n          );\n\n          capi.sqlite3_create_collation_v2 = function (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n            xDestroy,\n          ) {\n            if (6 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_create_collation_v2', 6);\n            else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateCollationV2(\n                pDb,\n                zName,\n                eTextRep,\n                pArg,\n                xCompare,\n                xDestroy,\n              );\n              if (0 === rc && xCompare instanceof Function) {\n                __dbCleanupMap.addCollation(pDb, zName);\n              }\n              return rc;\n            } catch (e) {\n              return util.sqlite3_wasm_db_error(pDb, e);\n            }\n          };\n\n          capi.sqlite3_create_collation = (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n          ) => {\n            return 5 === arguments.length\n              ? capi.sqlite3_create_collation_v2(\n                  pDb,\n                  zName,\n                  eTextRep,\n                  pArg,\n                  xCompare,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_collation', 5);\n          };\n        }\n\n        {\n          const contextKey = function (argv, argIndex) {\n            return (\n              argv[0] +\n              ':' +\n              (argv[2] < 0 ? -1 : argv[2]) +\n              ':' +\n              argIndex +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n\n          const __cfProxy = Object.assign(Object.create(null), {\n            xInverseAndStep: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFinalAndValue: {\n              signature: 'v(p)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx) => {\n                  try {\n                    capi.sqlite3_result_js(pCtx, callback(pCtx));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFunc: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    capi.sqlite3_result_js(\n                      pCtx,\n                      callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv)),\n                    );\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xDestroy: {\n              signature: 'v(p)',\n              contextKey,\n\n              callProxy: (callback) => {\n                return (pVoid) => {\n                  try {\n                    callback(pVoid);\n                  } catch (e) {\n                    console.error('UDF xDestroy method threw:', e);\n                  }\n                };\n              },\n            },\n          });\n\n          const __sqlite3CreateFunction = wasm.xWrap(\n            'sqlite3_create_function_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFunc',\n                ...__cfProxy.xFunc,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xStep',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFinal',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                ...__cfProxy.xDestroy,\n              }),\n            ],\n          );\n\n          const __sqlite3CreateWindowFunction = wasm.xWrap(\n            'sqlite3_create_window_function',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xStep',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFinal',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xValue',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xInverse',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                ...__cfProxy.xDestroy,\n              }),\n            ],\n          );\n\n          capi.sqlite3_create_function_v2 = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                pDb,\n                'sqlite3_create_function_v2',\n                f.length,\n              );\n            } else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateFunction(\n                pDb,\n                funcName,\n                nArg,\n                eTextRep,\n                pApp,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n              if (\n                0 === rc &&\n                (xFunc instanceof Function ||\n                  xStep instanceof Function ||\n                  xFinal instanceof Function ||\n                  xDestroy instanceof Function)\n              ) {\n                __dbCleanupMap.addFunction(pDb, funcName, nArg);\n              }\n              return rc;\n            } catch (e) {\n              console.error('sqlite3_create_function_v2() setup threw:', e);\n              return util.sqlite3_wasm_db_error(\n                pDb,\n                e,\n                'Creation of UDF threw: ' + e,\n              );\n            }\n          };\n\n          capi.sqlite3_create_function = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_create_function_v2(\n                  pDb,\n                  funcName,\n                  nArg,\n                  eTextRep,\n                  pApp,\n                  xFunc,\n                  xStep,\n                  xFinal,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_function', f.length);\n          };\n\n          capi.sqlite3_create_window_function = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xStep,\n            xFinal,\n            xValue,\n            xInverse,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                pDb,\n                'sqlite3_create_window_function',\n                f.length,\n              );\n            } else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateWindowFunction(\n                pDb,\n                funcName,\n                nArg,\n                eTextRep,\n                pApp,\n                xStep,\n                xFinal,\n                xValue,\n                xInverse,\n                xDestroy,\n              );\n              if (\n                0 === rc &&\n                (xStep instanceof Function ||\n                  xFinal instanceof Function ||\n                  xValue instanceof Function ||\n                  xInverse instanceof Function ||\n                  xDestroy instanceof Function)\n              ) {\n                __dbCleanupMap.addWindowFunc(pDb, funcName, nArg);\n              }\n              return rc;\n            } catch (e) {\n              console.error('sqlite3_create_window_function() setup threw:', e);\n              return util.sqlite3_wasm_db_error(\n                pDb,\n                e,\n                'Creation of UDF threw: ' + e,\n              );\n            }\n          };\n\n          capi.sqlite3_create_function_v2.udfSetResult =\n            capi.sqlite3_create_function.udfSetResult =\n            capi.sqlite3_create_window_function.udfSetResult =\n              capi.sqlite3_result_js;\n\n          capi.sqlite3_create_function_v2.udfConvertArgs =\n            capi.sqlite3_create_function.udfConvertArgs =\n            capi.sqlite3_create_window_function.udfConvertArgs =\n              capi.sqlite3_values_to_js;\n\n          capi.sqlite3_create_function_v2.udfSetError =\n            capi.sqlite3_create_function.udfSetError =\n            capi.sqlite3_create_window_function.udfSetError =\n              capi.sqlite3_result_error_js;\n        }\n\n        {\n          const __flexiString = (v, n) => {\n            if ('string' === typeof v) {\n              n = -1;\n            } else if (util.isSQLableTypedArray(v)) {\n              n = v.byteLength;\n              v = util.typedArrayToString(\n                v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n              );\n            } else if (Array.isArray(v)) {\n              v = v.join('');\n              n = -1;\n            }\n            return [v, n];\n          };\n\n          const __prepare = {\n            basic: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n\n            full: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              '*',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n          };\n\n          capi.sqlite3_prepare_v3 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            prepFlags,\n            ppStmt,\n            pzTail,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3_prepare_v3', f.length);\n            }\n            const [xSql, xSqlLen] = __flexiString(sql, sqlLen);\n            switch (typeof xSql) {\n              case 'string':\n                return __prepare.basic(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  null,\n                );\n              case 'number':\n                return __prepare.full(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  pzTail,\n                );\n              default:\n                return util.sqlite3_wasm_db_error(\n                  pDb,\n                  capi.SQLITE_MISUSE,\n                  'Invalid SQL argument type for sqlite3_prepare_v2/v3().',\n                );\n            }\n          };\n\n          capi.sqlite3_prepare_v2 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            ppStmt,\n            pzTail,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_prepare_v3(pDb, sql, sqlLen, 0, ppStmt, pzTail)\n              : __dbArgcMismatch(pDb, 'sqlite3_prepare_v2', f.length);\n          };\n        }\n\n        {\n          const __bindText = wasm.xWrap('sqlite3_bind_text', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            'string',\n            'int',\n            '*',\n          ]);\n          const __bindBlob = wasm.xWrap('sqlite3_bind_blob', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'int',\n            '*',\n          ]);\n\n          capi.sqlite3_bind_text = function f(\n            pStmt,\n            iCol,\n            text,\n            nText,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_text',\n                f.length,\n              );\n            } else if (wasm.isPtr(text) || null === text) {\n              return __bindText(pStmt, iCol, text, nText, xDestroy);\n            } else if (text instanceof ArrayBuffer) {\n              text = new Uint8Array(text);\n            } else if (Array.isArray(pMem)) {\n              text = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isSQLableTypedArray(text)) {\n                p = wasm.allocFromTypedArray(text);\n                n = text.byteLength;\n              } else if ('string' === typeof text) {\n                [p, n] = wasm.allocCString(text);\n              } else {\n                return util.sqlite3_wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_text().',\n                );\n              }\n              return __bindText(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3_wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n\n          capi.sqlite3_bind_blob = function f(\n            pStmt,\n            iCol,\n            pMem,\n            nMem,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_blob',\n                f.length,\n              );\n            } else if (wasm.isPtr(pMem) || null === pMem) {\n              return __bindBlob(pStmt, iCol, pMem, nMem, xDestroy);\n            } else if (pMem instanceof ArrayBuffer) {\n              pMem = new Uint8Array(pMem);\n            } else if (Array.isArray(pMem)) {\n              pMem = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isBindableTypedArray(pMem)) {\n                p = wasm.allocFromTypedArray(pMem);\n                n = nMem >= 0 ? nMem : pMem.byteLength;\n              } else if ('string' === typeof pMem) {\n                [p, n] = wasm.allocCString(pMem);\n              } else {\n                return util.sqlite3_wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_blob().',\n                );\n              }\n              return __bindBlob(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3_wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n        }\n\n        {\n          capi.sqlite3_config = function (op, ...args) {\n            if (arguments.length < 2) return capi.SQLITE_MISUSE;\n            switch (op) {\n              case capi.SQLITE_CONFIG_COVERING_INDEX_SCAN:\n              case capi.SQLITE_CONFIG_MEMSTATUS:\n              case capi.SQLITE_CONFIG_SMALL_MALLOC:\n              case capi.SQLITE_CONFIG_SORTERREF_SIZE:\n              case capi.SQLITE_CONFIG_STMTJRNL_SPILL:\n              case capi.SQLITE_CONFIG_URI:\n                return wasm.exports.sqlite3_wasm_config_i(op, args[0]);\n              case capi.SQLITE_CONFIG_LOOKASIDE:\n                return wasm.exports.sqlite3_wasm_config_ii(\n                  op,\n                  args[0],\n                  args[1],\n                );\n              case capi.SQLITE_CONFIG_MEMDB_MAXSIZE:\n                return wasm.exports.sqlite3_wasm_config_j(op, args[0]);\n              case capi.SQLITE_CONFIG_GETMALLOC:\n              case capi.SQLITE_CONFIG_GETMUTEX:\n              case capi.SQLITE_CONFIG_GETPCACHE2:\n              case capi.SQLITE_CONFIG_GETPCACHE:\n              case capi.SQLITE_CONFIG_HEAP:\n              case capi.SQLITE_CONFIG_LOG:\n              case capi.SQLITE_CONFIG_MALLOC:\n              case capi.SQLITE_CONFIG_MMAP_SIZE:\n              case capi.SQLITE_CONFIG_MULTITHREAD:\n              case capi.SQLITE_CONFIG_MUTEX:\n              case capi.SQLITE_CONFIG_PAGECACHE:\n              case capi.SQLITE_CONFIG_PCACHE2:\n              case capi.SQLITE_CONFIG_PCACHE:\n              case capi.SQLITE_CONFIG_PCACHE_HDRSZ:\n              case capi.SQLITE_CONFIG_PMASZ:\n              case capi.SQLITE_CONFIG_SERIALIZED:\n              case capi.SQLITE_CONFIG_SINGLETHREAD:\n              case capi.SQLITE_CONFIG_SQLLOG:\n              case capi.SQLITE_CONFIG_WIN32_HEAPSIZE:\n              default:\n                return capi.SQLITE_NOTFOUND;\n            }\n          };\n        }\n\n        {\n          const __autoExtFptr = new Set();\n\n          capi.sqlite3_auto_extension = function (fPtr) {\n            if (fPtr instanceof Function) {\n              fPtr = wasm.installFunction('i(ppp)', fPtr);\n            } else if (1 !== arguments.length || !wasm.isPtr(fPtr)) {\n              return capi.SQLITE_MISUSE;\n            }\n            const rc = wasm.exports.sqlite3_auto_extension(fPtr);\n            if (fPtr !== arguments[0]) {\n              if (0 === rc) __autoExtFptr.add(fPtr);\n              else wasm.uninstallFunction(fPtr);\n            }\n            return rc;\n          };\n\n          capi.sqlite3_cancel_auto_extension = function (fPtr) {\n            if (!fPtr || 1 !== arguments.length || !wasm.isPtr(fPtr)) return 0;\n            return wasm.exports.sqlite3_cancel_auto_extension(fPtr);\n          };\n\n          capi.sqlite3_reset_auto_extension = function () {\n            wasm.exports.sqlite3_reset_auto_extension();\n            for (const fp of __autoExtFptr) wasm.uninstallFunction(fp);\n            __autoExtFptr.clear();\n          };\n        }\n\n        const pKvvfs = capi.sqlite3_vfs_find('kvvfs');\n        if (pKvvfs) {\n          if (util.isUIThread()) {\n            const kvvfsMethods = new capi.sqlite3_kvvfs_methods(\n              wasm.exports.sqlite3_wasm_kvvfs_methods(),\n            );\n            delete capi.sqlite3_kvvfs_methods;\n\n            const kvvfsMakeKey = wasm.exports.sqlite3_wasm_kvvfsMakeKeyOnPstack,\n              pstack = wasm.pstack;\n\n            const kvvfsStorage = (zClass) =>\n              115 === wasm.peek(zClass) ? sessionStorage : localStorage;\n\n            const kvvfsImpls = {\n              xRead: (zClass, zKey, zBuf, nBuf) => {\n                const stack = pstack.pointer,\n                  astack = wasm.scopedAllocPush();\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return -3;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  const jV = kvvfsStorage(zClass).getItem(jKey);\n                  if (!jV) return -1;\n                  const nV = jV.length;\n                  if (nBuf <= 0) return nV;\n                  else if (1 === nBuf) {\n                    wasm.poke(zBuf, 0);\n                    return nV;\n                  }\n                  const zV = wasm.scopedAllocCString(jV);\n                  if (nBuf > nV + 1) nBuf = nV + 1;\n                  wasm.heap8u().copyWithin(zBuf, zV, zV + nBuf - 1);\n                  wasm.poke(zBuf + nBuf - 1, 0);\n                  return nBuf - 1;\n                } catch (e) {\n                  console.error('kvstorageRead()', e);\n                  return -2;\n                } finally {\n                  pstack.restore(stack);\n                  wasm.scopedAllocPop(astack);\n                }\n              },\n              xWrite: (zClass, zKey, zData) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  kvvfsStorage(zClass).setItem(jKey, wasm.cstrToJs(zData));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageWrite()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n              xDelete: (zClass, zKey) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  kvvfsStorage(zClass).removeItem(wasm.cstrToJs(zXKey));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageDelete()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n            };\n            for (const k of Object.keys(kvvfsImpls)) {\n              kvvfsMethods[kvvfsMethods.memberKey(k)] = wasm.installFunction(\n                kvvfsMethods.memberSignature(k),\n                kvvfsImpls[k],\n              );\n            }\n          } else {\n            capi.sqlite3_vfs_unregister(pKvvfs);\n          }\n        }\n\n        wasm.xWrap.FuncPtrAdapter.warnOnUse = true;\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        sqlite3.version = {\n          libVersion: '3.43.2',\n          libVersionNumber: 3043002,\n          sourceId:\n            '2023-10-10 12:14:04 4310099cce5a487035fa535dd3002c59ac7f1d1bec68d7cf317fd3e769484790',\n          downloadVersion: 3430200,\n        };\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = (...args) => {\n          throw new sqlite3.SQLite3Error(...args);\n        };\n\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n\n        const __ptrMap = new WeakMap();\n\n        const __stmtMap = new WeakMap();\n\n        const getOwnOption = (opts, p, dflt) => {\n          const d = Object.getOwnPropertyDescriptor(opts, p);\n          return d ? d.value : dflt;\n        };\n\n        const checkSqlite3Rc = function (dbPtr, sqliteResultCode) {\n          if (sqliteResultCode) {\n            if (dbPtr instanceof DB) dbPtr = dbPtr.pointer;\n            toss3(\n              sqliteResultCode,\n              'sqlite3 result code',\n              sqliteResultCode + ':',\n              dbPtr\n                ? capi.sqlite3_errmsg(dbPtr)\n                : capi.sqlite3_errstr(sqliteResultCode),\n            );\n          }\n          return arguments[0];\n        };\n\n        const __dbTraceToConsole = wasm.installFunction(\n          'i(ippp)',\n          function (t, c, p, x) {\n            if (capi.SQLITE_TRACE_STMT === t) {\n              console.log(\n                'SQL TRACE #' + ++this.counter + ' via sqlite3@' + c + ':',\n                wasm.cstrToJs(x),\n              );\n            }\n          }.bind({ counter: 0 }),\n        );\n\n        const __vfsPostOpenSql = Object.create(null);\n\n        const dbCtorHelper = function ctor(...args) {\n          if (!ctor._name2vfs) {\n            ctor._name2vfs = Object.create(null);\n            const isWorkerThread =\n              'function' === typeof importScripts\n                ? (n) =>\n                    toss3(\n                      'The VFS for',\n                      n,\n                      'is only available in the main window thread.',\n                    )\n                : false;\n            ctor._name2vfs[':localStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'local'),\n            };\n            ctor._name2vfs[':sessionStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'session'),\n            };\n          }\n          const opt = ctor.normalizeArgs(...args);\n          let fn = opt.filename,\n            vfsName = opt.vfs,\n            flagsStr = opt.flags;\n          if (\n            ('string' !== typeof fn && 'number' !== typeof fn) ||\n            'string' !== typeof flagsStr ||\n            (vfsName &&\n              'string' !== typeof vfsName &&\n              'number' !== typeof vfsName)\n          ) {\n            sqlite3.config.error('Invalid DB ctor args', opt, arguments);\n            toss3('Invalid arguments for DB constructor.');\n          }\n          let fnJs = 'number' === typeof fn ? wasm.cstrToJs(fn) : fn;\n          const vfsCheck = ctor._name2vfs[fnJs];\n          if (vfsCheck) {\n            vfsName = vfsCheck.vfs;\n            fn = fnJs = vfsCheck.filename(fnJs);\n          }\n          let pDb,\n            oflags = 0;\n          if (flagsStr.indexOf('c') >= 0) {\n            oflags |= capi.SQLITE_OPEN_CREATE | capi.SQLITE_OPEN_READWRITE;\n          }\n          if (flagsStr.indexOf('w') >= 0) oflags |= capi.SQLITE_OPEN_READWRITE;\n          if (0 === oflags) oflags |= capi.SQLITE_OPEN_READONLY;\n          oflags |= capi.SQLITE_OPEN_EXRESCODE;\n          const stack = wasm.pstack.pointer;\n          try {\n            const pPtr = wasm.pstack.allocPtr();\n            let rc = capi.sqlite3_open_v2(fn, pPtr, oflags, vfsName || 0);\n            pDb = wasm.peekPtr(pPtr);\n            checkSqlite3Rc(pDb, rc);\n            capi.sqlite3_extended_result_codes(pDb, 1);\n            if (flagsStr.indexOf('t') >= 0) {\n              capi.sqlite3_trace_v2(\n                pDb,\n                capi.SQLITE_TRACE_STMT,\n                __dbTraceToConsole,\n                pDb,\n              );\n            }\n          } catch (e) {\n            if (pDb) capi.sqlite3_close_v2(pDb);\n            throw e;\n          } finally {\n            wasm.pstack.restore(stack);\n          }\n          this.filename = fnJs;\n          __ptrMap.set(this, pDb);\n          __stmtMap.set(this, Object.create(null));\n          try {\n            const pVfs = capi.sqlite3_js_db_vfs(pDb);\n            if (!pVfs)\n              toss3('Internal error: cannot get VFS for new db handle.');\n            const postInitSql = __vfsPostOpenSql[pVfs];\n            if (postInitSql instanceof Function) {\n              postInitSql(this, sqlite3);\n            } else if (postInitSql) {\n              checkSqlite3Rc(pDb, capi.sqlite3_exec(pDb, postInitSql, 0, 0, 0));\n            }\n          } catch (e) {\n            this.close();\n            throw e;\n          }\n        };\n\n        dbCtorHelper.setVfsPostOpenSql = function (pVfs, sql) {\n          __vfsPostOpenSql[pVfs] = sql;\n        };\n\n        dbCtorHelper.normalizeArgs = function (\n          filename = ':memory:',\n          flags = 'c',\n          vfs = null,\n        ) {\n          const arg = {};\n          if (\n            1 === arguments.length &&\n            arguments[0] &&\n            'object' === typeof arguments[0]\n          ) {\n            Object.assign(arg, arguments[0]);\n            if (undefined === arg.flags) arg.flags = 'c';\n            if (undefined === arg.vfs) arg.vfs = null;\n            if (undefined === arg.filename) arg.filename = ':memory:';\n          } else {\n            arg.filename = filename;\n            arg.flags = flags;\n            arg.vfs = vfs;\n          }\n          return arg;\n        };\n\n        const DB = function (...args) {\n          dbCtorHelper.apply(this, args);\n        };\n        DB.dbCtorHelper = dbCtorHelper;\n\n        const BindTypes = {\n          null: 1,\n          number: 2,\n          string: 3,\n          boolean: 4,\n          blob: 5,\n        };\n        BindTypes['undefined'] == BindTypes.null;\n        if (wasm.bigIntEnabled) {\n          BindTypes.bigint = BindTypes.number;\n        }\n\n        const Stmt = function () {\n          if (BindTypes !== arguments[2]) {\n            toss3(\n              capi.SQLITE_MISUSE,\n              'Do not call the Stmt constructor directly. Use DB.prepare().',\n            );\n          }\n          this.db = arguments[0];\n          __ptrMap.set(this, arguments[1]);\n          this.parameterCount = capi.sqlite3_bind_parameter_count(this.pointer);\n        };\n\n        const affirmDbOpen = function (db) {\n          if (!db.pointer) toss3('DB has been closed.');\n          return db;\n        };\n\n        const affirmColIndex = function (stmt, ndx) {\n          if (ndx !== (ndx | 0) || ndx < 0 || ndx >= stmt.columnCount) {\n            toss3('Column index', ndx, 'is out of range.');\n          }\n          return stmt;\n        };\n\n        const parseExecArgs = function (db, args) {\n          const out = Object.create(null);\n          out.opt = Object.create(null);\n          switch (args.length) {\n            case 1:\n              if (\n                'string' === typeof args[0] ||\n                util.isSQLableTypedArray(args[0])\n              ) {\n                out.sql = args[0];\n              } else if (Array.isArray(args[0])) {\n                out.sql = args[0];\n              } else if (args[0] && 'object' === typeof args[0]) {\n                out.opt = args[0];\n                out.sql = out.opt.sql;\n              }\n              break;\n            case 2:\n              out.sql = args[0];\n              out.opt = args[1];\n              break;\n            default:\n              toss3('Invalid argument count for exec().');\n          }\n          out.sql = util.flexibleString(out.sql);\n          if ('string' !== typeof out.sql) {\n            toss3('Missing SQL argument or unsupported SQL value type.');\n          }\n          const opt = out.opt;\n          switch (opt.returnValue) {\n            case 'resultRows':\n              if (!opt.resultRows) opt.resultRows = [];\n              out.returnVal = () => opt.resultRows;\n              break;\n            case 'saveSql':\n              if (!opt.saveSql) opt.saveSql = [];\n              out.returnVal = () => opt.saveSql;\n              break;\n            case undefined:\n            case 'this':\n              out.returnVal = () => db;\n              break;\n            default:\n              toss3('Invalid returnValue value:', opt.returnValue);\n          }\n          if (!opt.callback && !opt.returnValue && undefined !== opt.rowMode) {\n            if (!opt.resultRows) opt.resultRows = [];\n            out.returnVal = () => opt.resultRows;\n          }\n          if (opt.callback || opt.resultRows) {\n            switch (undefined === opt.rowMode ? 'array' : opt.rowMode) {\n              case 'object':\n                out.cbArg = (stmt) => stmt.get(Object.create(null));\n                break;\n              case 'array':\n                out.cbArg = (stmt) => stmt.get([]);\n                break;\n              case 'stmt':\n                if (Array.isArray(opt.resultRows)) {\n                  toss3(\n                    'exec(): invalid rowMode for a resultRows array: must',\n                    \"be one of 'array', 'object',\",\n                    'a result column number, or column name reference.',\n                  );\n                }\n                out.cbArg = (stmt) => stmt;\n                break;\n              default:\n                if (util.isInt32(opt.rowMode)) {\n                  out.cbArg = (stmt) => stmt.get(opt.rowMode);\n                  break;\n                } else if (\n                  'string' === typeof opt.rowMode &&\n                  opt.rowMode.length > 1 &&\n                  '$' === opt.rowMode[0]\n                ) {\n                  const $colName = opt.rowMode.substr(1);\n                  out.cbArg = (stmt) => {\n                    const rc = stmt.get(Object.create(null))[$colName];\n                    return undefined === rc\n                      ? toss3(\n                          capi.SQLITE_NOTFOUND,\n                          'exec(): unknown result column:',\n                          $colName,\n                        )\n                      : rc;\n                  };\n                  break;\n                }\n                toss3('Invalid rowMode:', opt.rowMode);\n            }\n          }\n          return out;\n        };\n\n        const __selectFirstRow = (db, sql, bind, ...getArgs) => {\n          const stmt = db.prepare(sql);\n          try {\n            const rc = stmt.bind(bind).step()\n              ? stmt.get(...getArgs)\n              : undefined;\n            stmt.reset();\n            return rc;\n          } finally {\n            stmt.finalize();\n          }\n        };\n\n        const __selectAll = (db, sql, bind, rowMode) =>\n          db.exec({\n            sql,\n            bind,\n            rowMode,\n            returnValue: 'resultRows',\n          });\n\n        DB.checkRc = (db, resultCode) => checkSqlite3Rc(db, resultCode);\n\n        DB.prototype = {\n          isOpen: function () {\n            return !!this.pointer;\n          },\n\n          affirmOpen: function () {\n            return affirmDbOpen(this);\n          },\n\n          close: function () {\n            if (this.pointer) {\n              if (this.onclose && this.onclose.before instanceof Function) {\n                try {\n                  this.onclose.before(this);\n                } catch (e) {}\n              }\n              const pDb = this.pointer;\n              Object.keys(__stmtMap.get(this)).forEach((k, s) => {\n                if (s && s.pointer) {\n                  try {\n                    s.finalize();\n                  } catch (e) {}\n                }\n              });\n              __ptrMap.delete(this);\n              __stmtMap.delete(this);\n              capi.sqlite3_close_v2(pDb);\n              if (this.onclose && this.onclose.after instanceof Function) {\n                try {\n                  this.onclose.after(this);\n                } catch (e) {}\n              }\n              delete this.filename;\n            }\n          },\n\n          changes: function (total = false, sixtyFour = false) {\n            const p = affirmDbOpen(this).pointer;\n            if (total) {\n              return sixtyFour\n                ? capi.sqlite3_total_changes64(p)\n                : capi.sqlite3_total_changes(p);\n            } else {\n              return sixtyFour\n                ? capi.sqlite3_changes64(p)\n                : capi.sqlite3_changes(p);\n            }\n          },\n\n          dbFilename: function (dbName = 'main') {\n            return capi.sqlite3_db_filename(affirmDbOpen(this).pointer, dbName);\n          },\n\n          dbName: function (dbNumber = 0) {\n            return capi.sqlite3_db_name(affirmDbOpen(this).pointer, dbNumber);\n          },\n\n          dbVfsName: function (dbName = 0) {\n            let rc;\n            const pVfs = capi.sqlite3_js_db_vfs(\n              affirmDbOpen(this).pointer,\n              dbName,\n            );\n            if (pVfs) {\n              const v = new capi.sqlite3_vfs(pVfs);\n              try {\n                rc = wasm.cstrToJs(v.$zName);\n              } finally {\n                v.dispose();\n              }\n            }\n            return rc;\n          },\n\n          prepare: function (sql) {\n            affirmDbOpen(this);\n            const stack = wasm.pstack.pointer;\n            let ppStmt, pStmt;\n            try {\n              ppStmt = wasm.pstack.alloc(8);\n              DB.checkRc(\n                this,\n                capi.sqlite3_prepare_v2(this.pointer, sql, -1, ppStmt, null),\n              );\n              pStmt = wasm.peekPtr(ppStmt);\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            if (!pStmt) toss3('Cannot prepare empty SQL.');\n            const stmt = new Stmt(this, pStmt, BindTypes);\n            __stmtMap.get(this)[pStmt] = stmt;\n            return stmt;\n          },\n\n          exec: function () {\n            affirmDbOpen(this);\n            const arg = parseExecArgs(this, arguments);\n            if (!arg.sql) {\n              return toss3('exec() requires an SQL string.');\n            }\n            const opt = arg.opt;\n            const callback = opt.callback;\n            const resultRows = Array.isArray(opt.resultRows)\n              ? opt.resultRows\n              : undefined;\n            let stmt;\n            let bind = opt.bind;\n            let evalFirstResult = !!(\n              arg.cbArg ||\n              opt.columnNames ||\n              resultRows\n            );\n            const stack = wasm.scopedAllocPush();\n            const saveSql = Array.isArray(opt.saveSql)\n              ? opt.saveSql\n              : undefined;\n            try {\n              const isTA = util.isSQLableTypedArray(arg.sql);\n              let sqlByteLen = isTA\n                ? arg.sql.byteLength\n                : wasm.jstrlen(arg.sql);\n              const ppStmt = wasm.scopedAlloc(\n                2 * wasm.ptrSizeof + (sqlByteLen + 1),\n              );\n              const pzTail = ppStmt + wasm.ptrSizeof;\n              let pSql = pzTail + wasm.ptrSizeof;\n              const pSqlEnd = pSql + sqlByteLen;\n              if (isTA) wasm.heap8().set(arg.sql, pSql);\n              else wasm.jstrcpy(arg.sql, wasm.heap8(), pSql, sqlByteLen, false);\n              wasm.poke(pSql + sqlByteLen, 0);\n              while (pSql && wasm.peek(pSql, 'i8')) {\n                wasm.pokePtr([ppStmt, pzTail], 0);\n                DB.checkRc(\n                  this,\n                  capi.sqlite3_prepare_v3(\n                    this.pointer,\n                    pSql,\n                    sqlByteLen,\n                    0,\n                    ppStmt,\n                    pzTail,\n                  ),\n                );\n                const pStmt = wasm.peekPtr(ppStmt);\n                pSql = wasm.peekPtr(pzTail);\n                sqlByteLen = pSqlEnd - pSql;\n                if (!pStmt) continue;\n                if (saveSql) saveSql.push(capi.sqlite3_sql(pStmt).trim());\n                stmt = new Stmt(this, pStmt, BindTypes);\n                if (bind && stmt.parameterCount) {\n                  stmt.bind(bind);\n                  bind = null;\n                }\n                if (evalFirstResult && stmt.columnCount) {\n                  let gotColNames = Array.isArray(opt.columnNames) ? 0 : 1;\n                  evalFirstResult = false;\n                  if (arg.cbArg || resultRows) {\n                    for (; stmt.step(); stmt._lockedByExec = false) {\n                      if (0 === gotColNames++)\n                        stmt.getColumnNames(opt.columnNames);\n                      stmt._lockedByExec = true;\n                      const row = arg.cbArg(stmt);\n                      if (resultRows) resultRows.push(row);\n                      if (callback && false === callback.call(opt, row, stmt)) {\n                        break;\n                      }\n                    }\n                    stmt._lockedByExec = false;\n                  }\n                  if (0 === gotColNames) {\n                    stmt.getColumnNames(opt.columnNames);\n                  }\n                } else {\n                  stmt.step();\n                }\n                stmt.reset().finalize();\n                stmt = null;\n              }\n            } finally {\n              wasm.scopedAllocPop(stack);\n              if (stmt) {\n                delete stmt._lockedByExec;\n                stmt.finalize();\n              }\n            }\n            return arg.returnVal();\n          },\n\n          createFunction: function f(name, xFunc, opt) {\n            const isFunc = (f) => f instanceof Function;\n            switch (arguments.length) {\n              case 1:\n                opt = name;\n                name = opt.name;\n                xFunc = opt.xFunc || 0;\n                break;\n              case 2:\n                if (!isFunc(xFunc)) {\n                  opt = xFunc;\n                  xFunc = opt.xFunc || 0;\n                }\n                break;\n              case 3:\n                break;\n              default:\n                break;\n            }\n            if (!opt) opt = {};\n            if ('string' !== typeof name) {\n              toss3('Invalid arguments: missing function name.');\n            }\n            let xStep = opt.xStep || 0;\n            let xFinal = opt.xFinal || 0;\n            const xValue = opt.xValue || 0;\n            const xInverse = opt.xInverse || 0;\n            let isWindow = undefined;\n            if (isFunc(xFunc)) {\n              isWindow = false;\n              if (isFunc(xStep) || isFunc(xFinal)) {\n                toss3('Ambiguous arguments: scalar or aggregate?');\n              }\n              xStep = xFinal = null;\n            } else if (isFunc(xStep)) {\n              if (!isFunc(xFinal)) {\n                toss3('Missing xFinal() callback for aggregate or window UDF.');\n              }\n              xFunc = null;\n            } else if (isFunc(xFinal)) {\n              toss3('Missing xStep() callback for aggregate or window UDF.');\n            } else {\n              toss3('Missing function-type properties.');\n            }\n            if (false === isWindow) {\n              if (isFunc(xValue) || isFunc(xInverse)) {\n                toss3(\n                  'xValue and xInverse are not permitted for non-window UDFs.',\n                );\n              }\n            } else if (isFunc(xValue)) {\n              if (!isFunc(xInverse)) {\n                toss3('xInverse must be provided if xValue is.');\n              }\n              isWindow = true;\n            } else if (isFunc(xInverse)) {\n              toss3('xValue must be provided if xInverse is.');\n            }\n            const pApp = opt.pApp;\n            if (\n              undefined !== pApp &&\n              null !== pApp &&\n              ('number' !== typeof pApp || !util.isInt32(pApp))\n            ) {\n              toss3(\n                'Invalid value for pApp property. Must be a legal WASM pointer value.',\n              );\n            }\n            const xDestroy = opt.xDestroy || 0;\n            if (xDestroy && !isFunc(xDestroy)) {\n              toss3('xDestroy property must be a function.');\n            }\n            let fFlags = 0;\n            if (getOwnOption(opt, 'deterministic'))\n              fFlags |= capi.SQLITE_DETERMINISTIC;\n            if (getOwnOption(opt, 'directOnly'))\n              fFlags |= capi.SQLITE_DIRECTONLY;\n            if (getOwnOption(opt, 'innocuous')) fFlags |= capi.SQLITE_INNOCUOUS;\n            name = name.toLowerCase();\n            const xArity = xFunc || xStep;\n            const arity = getOwnOption(opt, 'arity');\n            const arityArg =\n              'number' === typeof arity\n                ? arity\n                : xArity.length\n                ? xArity.length - 1\n                : 0;\n            let rc;\n            if (isWindow) {\n              rc = capi.sqlite3_create_window_function(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xStep,\n                xFinal,\n                xValue,\n                xInverse,\n                xDestroy,\n              );\n            } else {\n              rc = capi.sqlite3_create_function_v2(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n            }\n            DB.checkRc(this, rc);\n            return this;\n          },\n\n          selectValue: function (sql, bind, asType) {\n            return __selectFirstRow(this, sql, bind, 0, asType);\n          },\n\n          selectValues: function (sql, bind, asType) {\n            const stmt = this.prepare(sql),\n              rc = [];\n            try {\n              stmt.bind(bind);\n              while (stmt.step()) rc.push(stmt.get(0, asType));\n              stmt.reset();\n            } finally {\n              stmt.finalize();\n            }\n            return rc;\n          },\n\n          selectArray: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, []);\n          },\n\n          selectObject: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, {});\n          },\n\n          selectArrays: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'array');\n          },\n\n          selectObjects: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'object');\n          },\n\n          openStatementCount: function () {\n            return this.pointer ? Object.keys(__stmtMap.get(this)).length : 0;\n          },\n\n          transaction: function (callback) {\n            let opener = 'BEGIN';\n            if (arguments.length > 1) {\n              if (/[^a-zA-Z]/.test(arguments[0])) {\n                toss3(\n                  capi.SQLITE_MISUSE,\n                  'Invalid argument for BEGIN qualifier.',\n                );\n              }\n              opener += ' ' + arguments[0];\n              callback = arguments[1];\n            }\n            affirmDbOpen(this).exec(opener);\n            try {\n              const rc = callback(this);\n              this.exec('COMMIT');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK');\n              throw e;\n            }\n          },\n\n          savepoint: function (callback) {\n            affirmDbOpen(this).exec('SAVEPOINT oo1');\n            try {\n              const rc = callback(this);\n              this.exec('RELEASE oo1');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK to SAVEPOINT oo1; RELEASE SAVEPOINT oo1');\n              throw e;\n            }\n          },\n\n          checkRc: function (resultCode) {\n            return checkSqlite3Rc(this, resultCode);\n          },\n        };\n\n        const affirmStmtOpen = function (stmt) {\n          if (!stmt.pointer) toss3('Stmt has been closed.');\n          return stmt;\n        };\n\n        const isSupportedBindType = function (v) {\n          let t = BindTypes[null === v || undefined === v ? 'null' : typeof v];\n          switch (t) {\n            case BindTypes.boolean:\n            case BindTypes.null:\n            case BindTypes.number:\n            case BindTypes.string:\n              return t;\n            case BindTypes.bigint:\n              if (wasm.bigIntEnabled) return t;\n\n            default:\n              return util.isBindableTypedArray(v) ? BindTypes.blob : undefined;\n          }\n        };\n\n        const affirmSupportedBindType = function (v) {\n          return (\n            isSupportedBindType(v) ||\n            toss3('Unsupported bind() argument type:', typeof v)\n          );\n        };\n\n        const affirmParamIndex = function (stmt, key) {\n          const n =\n            'number' === typeof key\n              ? key\n              : capi.sqlite3_bind_parameter_index(stmt.pointer, key);\n          if (0 === n || !util.isInt32(n)) {\n            toss3('Invalid bind() parameter name: ' + key);\n          } else if (n < 1 || n > stmt.parameterCount)\n            toss3('Bind index', key, 'is out of range.');\n          return n;\n        };\n\n        const affirmNotLockedByExec = function (stmt, currentOpName) {\n          if (stmt._lockedByExec) {\n            toss3(\n              'Operation is illegal when statement is locked:',\n              currentOpName,\n            );\n          }\n          return stmt;\n        };\n\n        const bindOne = function f(stmt, ndx, bindType, val) {\n          affirmNotLockedByExec(affirmStmtOpen(stmt), 'bind()');\n          if (!f._) {\n            f._tooBigInt = (v) =>\n              toss3(\n                'BigInt value is too big to store without precision loss:',\n                v,\n              );\n            f._ = {\n              string: function (stmt, ndx, val, asBlob) {\n                const [pStr, n] = wasm.allocCString(val, true);\n                const f = asBlob\n                  ? capi.sqlite3_bind_blob\n                  : capi.sqlite3_bind_text;\n                return f(stmt.pointer, ndx, pStr, n, capi.SQLITE_WASM_DEALLOC);\n              },\n            };\n          }\n          affirmSupportedBindType(val);\n          ndx = affirmParamIndex(stmt, ndx);\n          let rc = 0;\n          switch (\n            null === val || undefined === val ? BindTypes.null : bindType\n          ) {\n            case BindTypes.null:\n              rc = capi.sqlite3_bind_null(stmt.pointer, ndx);\n              break;\n            case BindTypes.string:\n              rc = f._.string(stmt, ndx, val, false);\n              break;\n            case BindTypes.number: {\n              let m;\n              if (util.isInt32(val)) m = capi.sqlite3_bind_int;\n              else if ('bigint' === typeof val) {\n                if (!util.bigIntFits64(val)) {\n                  f._tooBigInt(val);\n                } else if (wasm.bigIntEnabled) {\n                  m = capi.sqlite3_bind_int64;\n                } else if (util.bigIntFitsDouble(val)) {\n                  val = Number(val);\n                  m = capi.sqlite3_bind_double;\n                } else {\n                  f._tooBigInt(val);\n                }\n              } else {\n                val = Number(val);\n                if (wasm.bigIntEnabled && Number.isInteger(val)) {\n                  m = capi.sqlite3_bind_int64;\n                } else {\n                  m = capi.sqlite3_bind_double;\n                }\n              }\n              rc = m(stmt.pointer, ndx, val);\n              break;\n            }\n            case BindTypes.boolean:\n              rc = capi.sqlite3_bind_int(stmt.pointer, ndx, val ? 1 : 0);\n              break;\n            case BindTypes.blob: {\n              if ('string' === typeof val) {\n                rc = f._.string(stmt, ndx, val, true);\n                break;\n              } else if (val instanceof ArrayBuffer) {\n                val = new Uint8Array(val);\n              } else if (!util.isBindableTypedArray(val)) {\n                toss3(\n                  'Binding a value as a blob requires',\n                  'that it be a string, Uint8Array, Int8Array, or ArrayBuffer.',\n                );\n              }\n              const pBlob = wasm.alloc(val.byteLength || 1);\n              wasm.heap8().set(val.byteLength ? val : [0], pBlob);\n              rc = capi.sqlite3_bind_blob(\n                stmt.pointer,\n                ndx,\n                pBlob,\n                val.byteLength,\n                capi.SQLITE_WASM_DEALLOC,\n              );\n              break;\n            }\n            default:\n              sqlite3.config.warn('Unsupported bind() argument type:', val);\n              toss3('Unsupported bind() argument type: ' + typeof val);\n          }\n          if (rc) DB.checkRc(stmt.db.pointer, rc);\n          stmt._mayGet = false;\n          return stmt;\n        };\n\n        Stmt.prototype = {\n          finalize: function () {\n            if (this.pointer) {\n              affirmNotLockedByExec(this, 'finalize()');\n              const rc = capi.sqlite3_finalize(this.pointer);\n              delete __stmtMap.get(this.db)[this.pointer];\n              __ptrMap.delete(this);\n              delete this._mayGet;\n              delete this.parameterCount;\n              delete this._lockedByExec;\n              delete this.db;\n              return rc;\n            }\n          },\n\n          clearBindings: function () {\n            affirmNotLockedByExec(affirmStmtOpen(this), 'clearBindings()');\n            capi.sqlite3_clear_bindings(this.pointer);\n            this._mayGet = false;\n            return this;\n          },\n\n          reset: function (alsoClearBinds) {\n            affirmNotLockedByExec(this, 'reset()');\n            if (alsoClearBinds) this.clearBindings();\n            const rc = capi.sqlite3_reset(affirmStmtOpen(this).pointer);\n            this._mayGet = false;\n            checkSqlite3Rc(this.db, rc);\n            return this;\n          },\n\n          bind: function () {\n            affirmStmtOpen(this);\n            let ndx, arg;\n            switch (arguments.length) {\n              case 1:\n                ndx = 1;\n                arg = arguments[0];\n                break;\n              case 2:\n                ndx = arguments[0];\n                arg = arguments[1];\n                break;\n              default:\n                toss3('Invalid bind() arguments.');\n            }\n            if (undefined === arg) {\n              return this;\n            } else if (!this.parameterCount) {\n              toss3('This statement has no bindable parameters.');\n            }\n            this._mayGet = false;\n            if (null === arg) {\n              return bindOne(this, ndx, BindTypes.null, arg);\n            } else if (Array.isArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an array, an index argument is not permitted.',\n                );\n              }\n              arg.forEach((v, i) =>\n                bindOne(this, i + 1, affirmSupportedBindType(v), v),\n              );\n              return this;\n            } else if (arg instanceof ArrayBuffer) {\n              arg = new Uint8Array(arg);\n            }\n            if ('object' === typeof arg && !util.isBindableTypedArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an object, an index argument is not permitted.',\n                );\n              }\n              Object.keys(arg).forEach((k) =>\n                bindOne(this, k, affirmSupportedBindType(arg[k]), arg[k]),\n              );\n              return this;\n            } else {\n              return bindOne(this, ndx, affirmSupportedBindType(arg), arg);\n            }\n            toss3('Should not reach this point.');\n          },\n\n          bindAsBlob: function (ndx, arg) {\n            affirmStmtOpen(this);\n            if (1 === arguments.length) {\n              arg = ndx;\n              ndx = 1;\n            }\n            const t = affirmSupportedBindType(arg);\n            if (\n              BindTypes.string !== t &&\n              BindTypes.blob !== t &&\n              BindTypes.null !== t\n            ) {\n              toss3('Invalid value type for bindAsBlob()');\n            }\n            return bindOne(this, ndx, BindTypes.blob, arg);\n          },\n\n          step: function () {\n            affirmNotLockedByExec(this, 'step()');\n            const rc = capi.sqlite3_step(affirmStmtOpen(this).pointer);\n            switch (rc) {\n              case capi.SQLITE_DONE:\n                return (this._mayGet = false);\n              case capi.SQLITE_ROW:\n                return (this._mayGet = true);\n              default:\n                this._mayGet = false;\n                sqlite3.config.warn(\n                  'sqlite3_step() rc=',\n                  rc,\n                  capi.sqlite3_js_rc_str(rc),\n                  'SQL =',\n                  capi.sqlite3_sql(this.pointer),\n                );\n                DB.checkRc(this.db.pointer, rc);\n            }\n          },\n\n          stepReset: function () {\n            this.step();\n            return this.reset();\n          },\n\n          stepFinalize: function () {\n            try {\n              const rc = this.step();\n              this.reset();\n              return rc;\n            } finally {\n              try {\n                this.finalize();\n              } catch (e) {}\n            }\n          },\n\n          get: function (ndx, asType) {\n            if (!affirmStmtOpen(this)._mayGet) {\n              toss3('Stmt.step() has not (recently) returned true.');\n            }\n            if (Array.isArray(ndx)) {\n              let i = 0;\n              const n = this.columnCount;\n              while (i < n) {\n                ndx[i] = this.get(i++);\n              }\n              return ndx;\n            } else if (ndx && 'object' === typeof ndx) {\n              let i = 0;\n              const n = this.columnCount;\n              while (i < n) {\n                ndx[capi.sqlite3_column_name(this.pointer, i)] = this.get(i++);\n              }\n              return ndx;\n            }\n            affirmColIndex(this, ndx);\n            switch (\n              undefined === asType\n                ? capi.sqlite3_column_type(this.pointer, ndx)\n                : asType\n            ) {\n              case capi.SQLITE_NULL:\n                return null;\n              case capi.SQLITE_INTEGER: {\n                if (wasm.bigIntEnabled) {\n                  const rc = capi.sqlite3_column_int64(this.pointer, ndx);\n                  if (\n                    rc >= Number.MIN_SAFE_INTEGER &&\n                    rc <= Number.MAX_SAFE_INTEGER\n                  ) {\n                    return Number(rc).valueOf();\n                  }\n                  return rc;\n                } else {\n                  const rc = capi.sqlite3_column_double(this.pointer, ndx);\n                  if (\n                    rc > Number.MAX_SAFE_INTEGER ||\n                    rc < Number.MIN_SAFE_INTEGER\n                  ) {\n                    toss3(\n                      'Integer is out of range for JS integer range: ' + rc,\n                    );\n                  }\n\n                  return util.isInt32(rc) ? rc | 0 : rc;\n                }\n              }\n              case capi.SQLITE_FLOAT:\n                return capi.sqlite3_column_double(this.pointer, ndx);\n              case capi.SQLITE_TEXT:\n                return capi.sqlite3_column_text(this.pointer, ndx);\n              case capi.SQLITE_BLOB: {\n                const n = capi.sqlite3_column_bytes(this.pointer, ndx),\n                  ptr = capi.sqlite3_column_blob(this.pointer, ndx),\n                  rc = new Uint8Array(n);\n\n                if (n) rc.set(wasm.heap8u().slice(ptr, ptr + n), 0);\n\n                if (n && this.db._blobXfer instanceof Array) {\n                  this.db._blobXfer.push(rc.buffer);\n                }\n                return rc;\n              }\n              default:\n                toss3(\n                  \"Don't know how to translate\",\n                  'type of result column #' + ndx + '.',\n                );\n            }\n            toss3('Not reached.');\n          },\n\n          getInt: function (ndx) {\n            return this.get(ndx, capi.SQLITE_INTEGER);\n          },\n\n          getFloat: function (ndx) {\n            return this.get(ndx, capi.SQLITE_FLOAT);\n          },\n\n          getString: function (ndx) {\n            return this.get(ndx, capi.SQLITE_TEXT);\n          },\n\n          getBlob: function (ndx) {\n            return this.get(ndx, capi.SQLITE_BLOB);\n          },\n\n          getJSON: function (ndx) {\n            const s = this.get(ndx, capi.SQLITE_STRING);\n            return null === s ? s : JSON.parse(s);\n          },\n\n          getColumnName: function (ndx) {\n            return capi.sqlite3_column_name(\n              affirmColIndex(affirmStmtOpen(this), ndx).pointer,\n              ndx,\n            );\n          },\n\n          getColumnNames: function (tgt = []) {\n            affirmColIndex(affirmStmtOpen(this), 0);\n            const n = this.columnCount;\n            for (let i = 0; i < n; ++i) {\n              tgt.push(capi.sqlite3_column_name(this.pointer, i));\n            }\n            return tgt;\n          },\n\n          getParamIndex: function (name) {\n            return affirmStmtOpen(this).parameterCount\n              ? capi.sqlite3_bind_parameter_index(this.pointer, name)\n              : undefined;\n          },\n        };\n\n        {\n          const prop = {\n            enumerable: true,\n            get: function () {\n              return __ptrMap.get(this);\n            },\n            set: () => toss3('The pointer property is read-only.'),\n          };\n          Object.defineProperty(Stmt.prototype, 'pointer', prop);\n          Object.defineProperty(DB.prototype, 'pointer', prop);\n        }\n\n        Object.defineProperty(Stmt.prototype, 'columnCount', {\n          enumerable: false,\n          get: function () {\n            return capi.sqlite3_column_count(this.pointer);\n          },\n          set: () => toss3('The columnCount property is read-only.'),\n        });\n\n        sqlite3.oo1 = {\n          DB,\n          Stmt,\n        };\n\n        if (util.isUIThread()) {\n          sqlite3.oo1.JsStorageDb = function (storageName = 'session') {\n            if ('session' !== storageName && 'local' !== storageName) {\n              toss3(\"JsStorageDb db name must be one of 'session' or 'local'.\");\n            }\n            dbCtorHelper.call(this, {\n              filename: storageName,\n              flags: 'c',\n              vfs: 'kvvfs',\n            });\n          };\n          const jdb = sqlite3.oo1.JsStorageDb;\n          jdb.prototype = Object.create(DB.prototype);\n\n          jdb.clearStorage = capi.sqlite3_js_kvvfs_clear;\n\n          jdb.prototype.clearStorage = function () {\n            return jdb.clearStorage(affirmDbOpen(this).filename);\n          };\n\n          jdb.storageSize = capi.sqlite3_js_kvvfs_size;\n\n          jdb.prototype.storageSize = function () {\n            return jdb.storageSize(affirmDbOpen(this).filename);\n          };\n        }\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        sqlite3.initWorker1API = function () {\n          'use strict';\n          const toss = (...args) => {\n            throw new Error(args.join(' '));\n          };\n          if (!(globalThis.WorkerGlobalScope instanceof Function)) {\n            toss('initWorker1API() must be run from a Worker thread.');\n          }\n          const self = this.self;\n          const sqlite3 = this.sqlite3 || toss('Missing this.sqlite3 object.');\n          const DB = sqlite3.oo1.DB;\n\n          const getDbId = function (db) {\n            let id = wState.idMap.get(db);\n            if (id) return id;\n            id = 'db#' + ++wState.idSeq + '@' + db.pointer;\n\n            wState.idMap.set(db, id);\n            return id;\n          };\n\n          const wState = {\n            dbList: [],\n\n            idSeq: 0,\n\n            idMap: new WeakMap(),\n\n            xfer: [],\n            open: function (opt) {\n              const db = new DB(opt);\n              this.dbs[getDbId(db)] = db;\n              if (this.dbList.indexOf(db) < 0) this.dbList.push(db);\n              return db;\n            },\n            close: function (db, alsoUnlink) {\n              if (db) {\n                delete this.dbs[getDbId(db)];\n                const filename = db.filename;\n                const pVfs = sqlite3.wasm.sqlite3_wasm_db_vfs(db.pointer, 0);\n                db.close();\n                const ddNdx = this.dbList.indexOf(db);\n                if (ddNdx >= 0) this.dbList.splice(ddNdx, 1);\n                if (alsoUnlink && filename && pVfs) {\n                  sqlite3.wasm.sqlite3_wasm_vfs_unlink(pVfs, filename);\n                }\n              }\n            },\n\n            post: function (msg, xferList) {\n              if (xferList && xferList.length) {\n                globalThis.postMessage(msg, Array.from(xferList));\n                xferList.length = 0;\n              } else {\n                globalThis.postMessage(msg);\n              }\n            },\n\n            dbs: Object.create(null),\n\n            getDb: function (id, require = true) {\n              return (\n                this.dbs[id] ||\n                (require ? toss('Unknown (or closed) DB ID:', id) : undefined)\n              );\n            },\n          };\n\n          const affirmDbOpen = function (db = wState.dbList[0]) {\n            return db && db.pointer ? db : toss('DB is not opened.');\n          };\n\n          const getMsgDb = function (msgData, affirmExists = true) {\n            const db = wState.getDb(msgData.dbId, false) || wState.dbList[0];\n            return affirmExists ? affirmDbOpen(db) : db;\n          };\n\n          const getDefaultDbId = function () {\n            return wState.dbList[0] && getDbId(wState.dbList[0]);\n          };\n\n          const guessVfs = function (filename) {\n            const m = /^file:.+(vfs=(\\w+))/.exec(filename);\n            return sqlite3.capi.sqlite3_vfs_find(m ? m[2] : 0);\n          };\n\n          const isSpecialDbFilename = (n) => {\n            return '' === n || ':' === n[0];\n          };\n\n          const wMsgHandler = {\n            open: function (ev) {\n              const oargs = Object.create(null),\n                args = ev.args || Object.create(null);\n              if (args.simulateError) {\n                toss('Throwing because of simulateError flag.');\n              }\n              const rc = Object.create(null);\n              let byteArray, pVfs;\n              oargs.vfs = args.vfs;\n              if (isSpecialDbFilename(args.filename)) {\n                oargs.filename = args.filename || '';\n              } else {\n                oargs.filename = args.filename;\n                byteArray = args.byteArray;\n                if (byteArray) pVfs = guessVfs(args.filename);\n              }\n              if (pVfs) {\n                let pMem;\n                try {\n                  pMem = sqlite3.wasm.allocFromTypedArray(byteArray);\n                  const rc = sqlite3.wasm.sqlite3_wasm_vfs_create_file(\n                    pVfs,\n                    oargs.filename,\n                    pMem,\n                    byteArray.byteLength,\n                  );\n                  if (rc) sqlite3.SQLite3Error.toss(rc);\n                } catch (e) {\n                  throw new sqlite3.SQLite3Error(\n                    e.name + ' creating ' + args.filename + ': ' + e.message,\n                    {\n                      cause: e,\n                    },\n                  );\n                } finally {\n                  if (pMem) sqlite3.wasm.dealloc(pMem);\n                }\n              }\n              const db = wState.open(oargs);\n              rc.filename = db.filename;\n              rc.persistent = !!sqlite3.capi.sqlite3_js_db_uses_vfs(\n                db.pointer,\n                'opfs',\n              );\n              rc.dbId = getDbId(db);\n              rc.vfs = db.dbVfsName();\n              return rc;\n            },\n\n            close: function (ev) {\n              const db = getMsgDb(ev, false);\n              const response = {\n                filename: db && db.filename,\n              };\n              if (db) {\n                const doUnlink =\n                  ev.args && 'object' === typeof ev.args\n                    ? !!ev.args.unlink\n                    : false;\n                wState.close(db, doUnlink);\n              }\n              return response;\n            },\n\n            exec: function (ev) {\n              const rc =\n                'string' === typeof ev.args\n                  ? { sql: ev.args }\n                  : ev.args || Object.create(null);\n              if ('stmt' === rc.rowMode) {\n                toss(\n                  \"Invalid rowMode for 'exec': stmt mode\",\n                  'does not work in the Worker API.',\n                );\n              } else if (!rc.sql) {\n                toss(\"'exec' requires input SQL.\");\n              }\n              const db = getMsgDb(ev);\n              if (rc.callback || Array.isArray(rc.resultRows)) {\n                db._blobXfer = wState.xfer;\n              }\n              const theCallback = rc.callback;\n              let rowNumber = 0;\n              const hadColNames = !!rc.columnNames;\n              if ('string' === typeof theCallback) {\n                if (!hadColNames) rc.columnNames = [];\n\n                rc.callback = function (row, stmt) {\n                  wState.post(\n                    {\n                      type: theCallback,\n                      columnNames: rc.columnNames,\n                      rowNumber: ++rowNumber,\n                      row: row,\n                    },\n                    wState.xfer,\n                  );\n                };\n              }\n              try {\n                const changeCount = !!rc.countChanges\n                  ? db.changes(true, 64 === rc.countChanges)\n                  : undefined;\n                db.exec(rc);\n                if (undefined !== changeCount) {\n                  rc.changeCount =\n                    db.changes(true, 64 === rc.countChanges) - changeCount;\n                }\n                if (rc.callback instanceof Function) {\n                  rc.callback = theCallback;\n\n                  wState.post({\n                    type: theCallback,\n                    columnNames: rc.columnNames,\n                    rowNumber: null,\n                    row: undefined,\n                  });\n                }\n              } finally {\n                delete db._blobXfer;\n                if (rc.callback) rc.callback = theCallback;\n              }\n              return rc;\n            },\n\n            'config-get': function () {\n              const rc = Object.create(null),\n                src = sqlite3.config;\n              ['bigIntEnabled'].forEach(function (k) {\n                if (Object.getOwnPropertyDescriptor(src, k)) rc[k] = src[k];\n              });\n              rc.version = sqlite3.version;\n              rc.vfsList = sqlite3.capi.sqlite3_js_vfs_list();\n              rc.opfsEnabled = !!sqlite3.opfs;\n              return rc;\n            },\n\n            export: function (ev) {\n              const db = getMsgDb(ev);\n              const response = {\n                byteArray: sqlite3.capi.sqlite3_js_db_export(db.pointer),\n                filename: db.filename,\n                mimetype: 'application/x-sqlite3',\n              };\n              wState.xfer.push(response.byteArray.buffer);\n              return response;\n            },\n\n            toss: function (ev) {\n              toss('Testing worker exception');\n            },\n\n            'opfs-tree': async function (ev) {\n              if (!sqlite3.opfs) toss('OPFS support is unavailable.');\n              const response = await sqlite3.opfs.treeList();\n              return response;\n            },\n          };\n\n          globalThis.onmessage = async function (ev) {\n            ev = ev.data;\n            let result,\n              dbId = ev.dbId,\n              evType = ev.type;\n            const arrivalTime = performance.now();\n            try {\n              if (\n                wMsgHandler.hasOwnProperty(evType) &&\n                wMsgHandler[evType] instanceof Function\n              ) {\n                result = await wMsgHandler[evType](ev);\n              } else {\n                toss('Unknown db worker message type:', ev.type);\n              }\n            } catch (err) {\n              evType = 'error';\n              result = {\n                operation: ev.type,\n                message: err.message,\n                errorClass: err.name,\n                input: ev,\n              };\n              if (err.stack) {\n                result.stack =\n                  'string' === typeof err.stack\n                    ? err.stack.split(/\\n\\s*/)\n                    : err.stack;\n              }\n              if (0)\n                sqlite3.config.warn(\n                  'Worker is propagating an exception to main thread.',\n                  'Reporting it _here_ for the stack trace:',\n                  err,\n                  result,\n                );\n            }\n            if (!dbId) {\n              dbId = result.dbId || getDefaultDbId();\n            }\n\n            wState.post(\n              {\n                type: evType,\n                dbId: dbId,\n                messageId: ev.messageId,\n                workerReceivedTime: arrivalTime,\n                workerRespondTime: performance.now(),\n                departureTime: ev.departureTime,\n\n                result: result,\n              },\n              wState.xfer,\n            );\n          };\n          globalThis.postMessage({\n            type: 'sqlite3-api',\n            result: 'worker1-ready',\n          });\n        }.bind({ self, sqlite3 });\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const wasm = sqlite3.wasm,\n          capi = sqlite3.capi,\n          toss = sqlite3.util.toss3;\n        const vfs = Object.create(null),\n          vtab = Object.create(null);\n\n        const StructBinder = sqlite3.StructBinder;\n        sqlite3.vfs = vfs;\n        sqlite3.vtab = vtab;\n\n        const sii = capi.sqlite3_index_info;\n\n        sii.prototype.nthConstraint = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraint +\n            sii.sqlite3_index_constraint.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint(ptr);\n        };\n\n        sii.prototype.nthConstraintUsage = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraintUsage +\n            sii.sqlite3_index_constraint_usage.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint_usage(ptr);\n        };\n\n        sii.prototype.nthOrderBy = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nOrderBy) return false;\n          const ptr =\n            this.$aOrderBy + sii.sqlite3_index_orderby.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_orderby(ptr);\n        };\n\n        const installMethod = function callee(\n          tgt,\n          name,\n          func,\n          applyArgcCheck = callee.installMethodArgcCheck,\n        ) {\n          if (!(tgt instanceof StructBinder.StructType)) {\n            toss('Usage error: target object is-not-a StructType.');\n          } else if (!(func instanceof Function) && !wasm.isPtr(func)) {\n            toss('Usage errror: expecting a Function or WASM pointer to one.');\n          }\n          if (1 === arguments.length) {\n            return (n, f) => callee(tgt, n, f, applyArgcCheck);\n          }\n          if (!callee.argcProxy) {\n            callee.argcProxy = function (tgt, funcName, func, sig) {\n              return function (...args) {\n                if (func.length !== arguments.length) {\n                  toss(\n                    'Argument mismatch for',\n                    tgt.structInfo.name +\n                      '::' +\n                      funcName +\n                      ': Native signature is:',\n                    sig,\n                  );\n                }\n                return func.apply(this, args);\n              };\n            };\n\n            callee.removeFuncList = function () {\n              if (this.ondispose.__removeFuncList) {\n                this.ondispose.__removeFuncList.forEach((v, ndx) => {\n                  if ('number' === typeof v) {\n                    try {\n                      wasm.uninstallFunction(v);\n                    } catch (e) {}\n                  }\n                });\n                delete this.ondispose.__removeFuncList;\n              }\n            };\n          }\n          const sigN = tgt.memberSignature(name);\n          if (sigN.length < 2) {\n            toss(\n              'Member',\n              name,\n              'does not have a function pointer signature:',\n              sigN,\n            );\n          }\n          const memKey = tgt.memberKey(name);\n          const fProxy =\n            applyArgcCheck && !wasm.isPtr(func)\n              ? callee.argcProxy(tgt, memKey, func, sigN)\n              : func;\n          if (wasm.isPtr(fProxy)) {\n            if (fProxy && !wasm.functionEntry(fProxy)) {\n              toss('Pointer', fProxy, 'is not a WASM function table entry.');\n            }\n            tgt[memKey] = fProxy;\n          } else {\n            const pFunc = wasm.installFunction(\n              fProxy,\n              tgt.memberSignature(name, true),\n            );\n            tgt[memKey] = pFunc;\n            if (!tgt.ondispose || !tgt.ondispose.__removeFuncList) {\n              tgt.addOnDispose(\n                'ondispose.__removeFuncList handler',\n                callee.removeFuncList,\n              );\n              tgt.ondispose.__removeFuncList = [];\n            }\n            tgt.ondispose.__removeFuncList.push(memKey, pFunc);\n          }\n          return (n, f) => callee(tgt, n, f, applyArgcCheck);\n        };\n        installMethod.installMethodArgcCheck = false;\n\n        const installMethods = function (\n          structInstance,\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          const seen = new Map();\n          for (const k of Object.keys(methods)) {\n            const m = methods[k];\n            const prior = seen.get(m);\n            if (prior) {\n              const mkey = structInstance.memberKey(k);\n              structInstance[mkey] =\n                structInstance[structInstance.memberKey(prior)];\n            } else {\n              installMethod(structInstance, k, m, applyArgcCheck);\n              seen.set(m, k);\n            }\n          }\n          return structInstance;\n        };\n\n        StructBinder.StructType.prototype.installMethod = function callee(\n          name,\n          func,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          return arguments.length < 3 && name && 'object' === typeof name\n            ? installMethods(this, ...arguments)\n            : installMethod(this, ...arguments);\n        };\n\n        StructBinder.StructType.prototype.installMethods = function (\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          return installMethods(this, methods, applyArgcCheck);\n        };\n\n        capi.sqlite3_vfs.prototype.registerVfs = function (asDefault = false) {\n          if (!(this instanceof sqlite3.capi.sqlite3_vfs)) {\n            toss('Expecting a sqlite3_vfs-type argument.');\n          }\n          const rc = capi.sqlite3_vfs_register(this, asDefault ? 1 : 0);\n          if (rc) {\n            toss('sqlite3_vfs_register(', this, ') failed with rc', rc);\n          }\n          if (this.pointer !== capi.sqlite3_vfs_find(this.$zName)) {\n            toss(\n              'BUG: sqlite3_vfs_find(vfs.$zName) failed for just-installed VFS',\n              this,\n            );\n          }\n          return this;\n        };\n\n        vfs.installVfs = function (opt) {\n          let count = 0;\n          const propList = ['io', 'vfs'];\n          for (const key of propList) {\n            const o = opt[key];\n            if (o) {\n              ++count;\n              installMethods(o.struct, o.methods, !!o.applyArgcCheck);\n              if ('vfs' === key) {\n                if (!o.struct.$zName && 'string' === typeof o.name) {\n                  o.struct.addOnDispose(\n                    (o.struct.$zName = wasm.allocCString(o.name)),\n                  );\n                }\n                o.struct.registerVfs(!!o.asDefault);\n              }\n            }\n          }\n          if (!count)\n            toss(\n              'Misuse: installVfs() options object requires at least',\n              'one of:',\n              propList,\n            );\n          return this;\n        };\n\n        const __xWrapFactory = function (methodName, StructType) {\n          return function (ptr, removeMapping = false) {\n            if (0 === arguments.length) ptr = new StructType();\n            if (ptr instanceof StructType) {\n              this.set(ptr.pointer, ptr);\n              return ptr;\n            } else if (!wasm.isPtr(ptr)) {\n              sqlite3.SQLite3Error.toss(\n                'Invalid argument to',\n                methodName + '()',\n              );\n            }\n            let rc = this.get(ptr);\n            if (removeMapping) this.delete(ptr);\n            return rc;\n          }.bind(new Map());\n        };\n\n        const StructPtrMapper = function (name, StructType) {\n          const __xWrap = __xWrapFactory(name, StructType);\n\n          return Object.assign(Object.create(null), {\n            StructType,\n\n            create: (ppOut) => {\n              const rc = __xWrap();\n              wasm.pokePtr(ppOut, rc.pointer);\n              return rc;\n            },\n\n            get: (pCObj) => __xWrap(pCObj),\n\n            unget: (pCObj) => __xWrap(pCObj, true),\n\n            dispose: (pCObj) => {\n              const o = __xWrap(pCObj, true);\n              if (o) o.dispose();\n            },\n          });\n        };\n\n        vtab.xVtab = StructPtrMapper('xVtab', capi.sqlite3_vtab);\n\n        vtab.xCursor = StructPtrMapper('xCursor', capi.sqlite3_vtab_cursor);\n\n        vtab.xIndexInfo = (pIdxInfo) => new capi.sqlite3_index_info(pIdxInfo);\n\n        vtab.xError = function f(methodName, err, defaultRc) {\n          if (f.errorReporter instanceof Function) {\n            try {\n              f.errorReporter(\n                'sqlite3_module::' + methodName + '(): ' + err.message,\n              );\n            } catch (e) {}\n          }\n          let rc;\n          if (err instanceof sqlite3.WasmAllocError) rc = capi.SQLITE_NOMEM;\n          else if (arguments.length > 2) rc = defaultRc;\n          else if (err instanceof sqlite3.SQLite3Error) rc = err.resultCode;\n          return rc || capi.SQLITE_ERROR;\n        };\n        vtab.xError.errorReporter = 1 ? console.error.bind(console) : false;\n\n        vtab.xRowid = (ppRowid64, value) => wasm.poke(ppRowid64, value, 'i64');\n\n        vtab.setupModule = function (opt) {\n          let createdMod = false;\n          const mod =\n            this instanceof capi.sqlite3_module\n              ? this\n              : opt.struct || (createdMod = new capi.sqlite3_module());\n          try {\n            const methods = opt.methods || toss(\"Missing 'methods' object.\");\n            for (const e of Object.entries({\n              xConnect: 'xCreate',\n              xDisconnect: 'xDestroy',\n            })) {\n              const k = e[0],\n                v = e[1];\n              if (true === methods[k]) methods[k] = methods[v];\n              else if (true === methods[v]) methods[v] = methods[k];\n            }\n            if (opt.catchExceptions) {\n              const fwrap = function (methodName, func) {\n                if (['xConnect', 'xCreate'].indexOf(methodName) >= 0) {\n                  return function (pDb, pAux, argc, argv, ppVtab, pzErr) {\n                    try {\n                      return func(...arguments) || 0;\n                    } catch (e) {\n                      if (!(e instanceof sqlite3.WasmAllocError)) {\n                        wasm.dealloc(wasm.peekPtr(pzErr));\n                        wasm.pokePtr(pzErr, wasm.allocCString(e.message));\n                      }\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                } else {\n                  return function (...args) {\n                    try {\n                      return func(...args) || 0;\n                    } catch (e) {\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                }\n              };\n              const mnames = [\n                'xCreate',\n                'xConnect',\n                'xBestIndex',\n                'xDisconnect',\n                'xDestroy',\n                'xOpen',\n                'xClose',\n                'xFilter',\n                'xNext',\n                'xEof',\n                'xColumn',\n                'xRowid',\n                'xUpdate',\n                'xBegin',\n                'xSync',\n                'xCommit',\n                'xRollback',\n                'xFindFunction',\n                'xRename',\n                'xSavepoint',\n                'xRelease',\n                'xRollbackTo',\n                'xShadowName',\n              ];\n              const remethods = Object.create(null);\n              for (const k of mnames) {\n                const m = methods[k];\n                if (!(m instanceof Function)) continue;\n                else if ('xConnect' === k && methods.xCreate === m) {\n                  remethods[k] = methods.xCreate;\n                } else if ('xCreate' === k && methods.xConnect === m) {\n                  remethods[k] = methods.xConnect;\n                } else {\n                  remethods[k] = fwrap(k, m);\n                }\n              }\n              installMethods(mod, remethods, false);\n            } else {\n              installMethods(mod, methods, !!opt.applyArgcCheck);\n            }\n            if (0 === mod.$iVersion) {\n              let v;\n              if ('number' === typeof opt.iVersion) v = opt.iVersion;\n              else if (mod.$xShadowName) v = 3;\n              else if (mod.$xSavePoint || mod.$xRelease || mod.$xRollbackTo)\n                v = 2;\n              else v = 1;\n              mod.$iVersion = v;\n            }\n          } catch (e) {\n            if (createdMod) createdMod.dispose();\n            throw e;\n          }\n          return mod;\n        };\n\n        capi.sqlite3_module.prototype.setupModule = function (opt) {\n          return vtab.setupModule.call(this, opt);\n        };\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const installOpfsVfs = function callee(options) {\n          if (!globalThis.SharedArrayBuffer || !globalThis.Atomics) {\n            return Promise.reject(\n              new Error(\n                'Cannot install OPFS: Missing SharedArrayBuffer and/or Atomics. ' +\n                  'The server must emit the COOP/COEP response headers to enable those. ' +\n                  'See https://sqlite.org/wasm/doc/trunk/persistence.md#coop-coep',\n              ),\n            );\n          } else if ('undefined' === typeof WorkerGlobalScope) {\n            return Promise.reject(\n              new Error(\n                'The OPFS sqlite3_vfs cannot run in the main thread ' +\n                  'because it requires Atomics.wait().',\n              ),\n            );\n          } else if (\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle ||\n            !globalThis.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n            !navigator?.storage?.getDirectory\n          ) {\n            return Promise.reject(new Error('Missing required OPFS APIs.'));\n          }\n          if (!options || 'object' !== typeof options) {\n            options = Object.create(null);\n          }\n          const urlParams = new URL(globalThis.location.href).searchParams;\n          if (urlParams.has('opfs-disable')) {\n            return Promise.resolve(sqlite3);\n          }\n          if (undefined === options.verbose) {\n            options.verbose = urlParams.has('opfs-verbose')\n              ? +urlParams.get('opfs-verbose') || 2\n              : 1;\n          }\n          if (undefined === options.sanityChecks) {\n            options.sanityChecks = urlParams.has('opfs-sanity-check');\n          }\n          if (undefined === options.proxyUri) {\n            options.proxyUri = callee.defaultProxyUri;\n          }\n\n          if ('function' === typeof options.proxyUri) {\n            options.proxyUri = options.proxyUri();\n          }\n          const thePromise = new Promise(function (\n            promiseResolve_,\n            promiseReject_,\n          ) {\n            const loggers = [\n              sqlite3.config.error,\n              sqlite3.config.warn,\n              sqlite3.config.log,\n            ];\n            const logImpl = (level, ...args) => {\n              if (options.verbose > level)\n                loggers[level]('OPFS syncer:', ...args);\n            };\n            const log = (...args) => logImpl(2, ...args);\n            const warn = (...args) => logImpl(1, ...args);\n            const error = (...args) => logImpl(0, ...args);\n            const toss = sqlite3.util.toss;\n            const capi = sqlite3.capi;\n            const wasm = sqlite3.wasm;\n            const sqlite3_vfs = capi.sqlite3_vfs;\n            const sqlite3_file = capi.sqlite3_file;\n            const sqlite3_io_methods = capi.sqlite3_io_methods;\n\n            const opfsUtil = Object.create(null);\n\n            const thisThreadHasOPFS = () => {\n              return (\n                globalThis.FileSystemHandle &&\n                globalThis.FileSystemDirectoryHandle &&\n                globalThis.FileSystemFileHandle &&\n                globalThis.FileSystemFileHandle.prototype\n                  .createSyncAccessHandle &&\n                navigator?.storage?.getDirectory\n              );\n            };\n\n            opfsUtil.metrics = {\n              dump: function () {\n                let k,\n                  n = 0,\n                  t = 0,\n                  w = 0;\n                for (k in state.opIds) {\n                  const m = metrics[k];\n                  n += m.count;\n                  t += m.time;\n                  w += m.wait;\n                  m.avgTime = m.count && m.time ? m.time / m.count : 0;\n                  m.avgWait = m.count && m.wait ? m.wait / m.count : 0;\n                }\n                sqlite3.config.log(\n                  globalThis.location.href,\n                  'metrics for',\n                  globalThis.location.href,\n                  ':',\n                  metrics,\n                  '\\nTotal of',\n                  n,\n                  'op(s) for',\n                  t,\n                  'ms (incl. ' + w + ' ms of waiting on the async side)',\n                );\n                sqlite3.config.log('Serialization metrics:', metrics.s11n);\n                W.postMessage({ type: 'opfs-async-metrics' });\n              },\n              reset: function () {\n                let k;\n                const r = (m) => (m.count = m.time = m.wait = 0);\n                for (k in state.opIds) {\n                  r((metrics[k] = Object.create(null)));\n                }\n                let s = (metrics.s11n = Object.create(null));\n                s = s.serialize = Object.create(null);\n                s.count = s.time = 0;\n                s = metrics.s11n.deserialize = Object.create(null);\n                s.count = s.time = 0;\n              },\n            };\n            const opfsIoMethods = new sqlite3_io_methods();\n            const opfsVfs = new sqlite3_vfs().addOnDispose(() =>\n              opfsIoMethods.dispose(),\n            );\n            let promiseWasRejected = undefined;\n            const promiseReject = (err) => {\n              promiseWasRejected = true;\n              opfsVfs.dispose();\n              return promiseReject_(err);\n            };\n            const promiseResolve = () => {\n              promiseWasRejected = false;\n              return promiseResolve_(sqlite3);\n            };\n            const W = new Worker(\n              new URL('sqlite3-opfs-async-proxy.js', import.meta.url),\n            );\n            setTimeout(() => {\n              if (undefined === promiseWasRejected) {\n                promiseReject(\n                  new Error(\n                    'Timeout while waiting for OPFS async proxy worker.',\n                  ),\n                );\n              }\n            }, 4000);\n            W._originalOnError = W.onerror;\n            W.onerror = function (err) {\n              error('Error initializing OPFS asyncer:', err);\n              promiseReject(\n                new Error(\n                  'Loading OPFS async Worker failed for unknown reasons.',\n                ),\n              );\n            };\n            const pDVfs = capi.sqlite3_vfs_find(null);\n            const dVfs = pDVfs ? new sqlite3_vfs(pDVfs) : null;\n            opfsIoMethods.$iVersion = 1;\n            opfsVfs.$iVersion = 2;\n            opfsVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n            opfsVfs.$mxPathname = 1024;\n            opfsVfs.$zName = wasm.allocCString('opfs');\n\n            opfsVfs.$xDlOpen =\n              opfsVfs.$xDlError =\n              opfsVfs.$xDlSym =\n              opfsVfs.$xDlClose =\n                null;\n            opfsVfs.addOnDispose(\n              '$zName',\n              opfsVfs.$zName,\n              'cleanup default VFS wrapper',\n              () => (dVfs ? dVfs.dispose() : null),\n            );\n\n            const state = Object.create(null);\n            state.verbose = options.verbose;\n            state.littleEndian = (() => {\n              const buffer = new ArrayBuffer(2);\n              new DataView(buffer).setInt16(0, 256, true);\n\n              return new Int16Array(buffer)[0] === 256;\n            })();\n\n            state.asyncIdleWaitTime = 150;\n\n            state.asyncS11nExceptions = 1;\n\n            state.fileBufferSize = 1024 * 64;\n            state.sabS11nOffset = state.fileBufferSize;\n\n            state.sabS11nSize = opfsVfs.$mxPathname * 2;\n\n            state.sabIO = new SharedArrayBuffer(\n              state.fileBufferSize + state.sabS11nSize,\n            );\n            state.opIds = Object.create(null);\n            const metrics = Object.create(null);\n            {\n              let i = 0;\n\n              state.opIds.whichOp = i++;\n\n              state.opIds.rc = i++;\n\n              state.opIds.xAccess = i++;\n              state.opIds.xClose = i++;\n              state.opIds.xDelete = i++;\n              state.opIds.xDeleteNoWait = i++;\n              state.opIds.xFileSize = i++;\n              state.opIds.xLock = i++;\n              state.opIds.xOpen = i++;\n              state.opIds.xRead = i++;\n              state.opIds.xSleep = i++;\n              state.opIds.xSync = i++;\n              state.opIds.xTruncate = i++;\n              state.opIds.xUnlock = i++;\n              state.opIds.xWrite = i++;\n              state.opIds.mkdir = i++;\n              state.opIds['opfs-async-metrics'] = i++;\n              state.opIds['opfs-async-shutdown'] = i++;\n\n              state.opIds.retry = i++;\n              state.sabOP = new SharedArrayBuffer(i * 4);\n              opfsUtil.metrics.reset();\n            }\n\n            state.sq3Codes = Object.create(null);\n            [\n              'SQLITE_ACCESS_EXISTS',\n              'SQLITE_ACCESS_READWRITE',\n              'SQLITE_BUSY',\n              'SQLITE_ERROR',\n              'SQLITE_IOERR',\n              'SQLITE_IOERR_ACCESS',\n              'SQLITE_IOERR_CLOSE',\n              'SQLITE_IOERR_DELETE',\n              'SQLITE_IOERR_FSYNC',\n              'SQLITE_IOERR_LOCK',\n              'SQLITE_IOERR_READ',\n              'SQLITE_IOERR_SHORT_READ',\n              'SQLITE_IOERR_TRUNCATE',\n              'SQLITE_IOERR_UNLOCK',\n              'SQLITE_IOERR_WRITE',\n              'SQLITE_LOCK_EXCLUSIVE',\n              'SQLITE_LOCK_NONE',\n              'SQLITE_LOCK_PENDING',\n              'SQLITE_LOCK_RESERVED',\n              'SQLITE_LOCK_SHARED',\n              'SQLITE_LOCKED',\n              'SQLITE_MISUSE',\n              'SQLITE_NOTFOUND',\n              'SQLITE_OPEN_CREATE',\n              'SQLITE_OPEN_DELETEONCLOSE',\n              'SQLITE_OPEN_MAIN_DB',\n              'SQLITE_OPEN_READONLY',\n            ].forEach((k) => {\n              if (undefined === (state.sq3Codes[k] = capi[k])) {\n                toss('Maintenance required: not found:', k);\n              }\n            });\n            state.opfsFlags = Object.assign(Object.create(null), {\n              OPFS_UNLOCK_ASAP: 0x01,\n\n              defaultUnlockAsap: false,\n            });\n\n            const opRun = (op, ...args) => {\n              const opNdx = state.opIds[op] || toss('Invalid op ID:', op);\n              state.s11n.serialize(...args);\n              Atomics.store(state.sabOPView, state.opIds.rc, -1);\n              Atomics.store(state.sabOPView, state.opIds.whichOp, opNdx);\n              Atomics.notify(state.sabOPView, state.opIds.whichOp);\n              const t = performance.now();\n              Atomics.wait(state.sabOPView, state.opIds.rc, -1);\n              const rc = Atomics.load(state.sabOPView, state.opIds.rc);\n              metrics[op].wait += performance.now() - t;\n              if (rc && state.asyncS11nExceptions) {\n                const err = state.s11n.deserialize();\n                if (err) error(op + '() async error:', ...err);\n              }\n              return rc;\n            };\n\n            opfsUtil.debug = {\n              asyncShutdown: () => {\n                warn(\n                  'Shutting down OPFS async listener. The OPFS VFS will no longer work.',\n                );\n                opRun('opfs-async-shutdown');\n              },\n              asyncRestart: () => {\n                warn(\n                  'Attempting to restart OPFS VFS async listener. Might work, might not.',\n                );\n                W.postMessage({ type: 'opfs-async-restart' });\n              },\n            };\n\n            const initS11n = () => {\n              if (state.s11n) return state.s11n;\n              const textDecoder = new TextDecoder(),\n                textEncoder = new TextEncoder('utf-8'),\n                viewU8 = new Uint8Array(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                ),\n                viewDV = new DataView(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                );\n              state.s11n = Object.create(null);\n\n              const TypeIds = Object.create(null);\n              TypeIds.number = {\n                id: 1,\n                size: 8,\n                getter: 'getFloat64',\n                setter: 'setFloat64',\n              };\n              TypeIds.bigint = {\n                id: 2,\n                size: 8,\n                getter: 'getBigInt64',\n                setter: 'setBigInt64',\n              };\n              TypeIds.boolean = {\n                id: 3,\n                size: 4,\n                getter: 'getInt32',\n                setter: 'setInt32',\n              };\n              TypeIds.string = { id: 4 };\n\n              const getTypeId = (v) =>\n                TypeIds[typeof v] ||\n                toss(\n                  'Maintenance required: this value type cannot be serialized.',\n                  v,\n                );\n              const getTypeIdById = (tid) => {\n                switch (tid) {\n                  case TypeIds.number.id:\n                    return TypeIds.number;\n                  case TypeIds.bigint.id:\n                    return TypeIds.bigint;\n                  case TypeIds.boolean.id:\n                    return TypeIds.boolean;\n                  case TypeIds.string.id:\n                    return TypeIds.string;\n                  default:\n                    toss('Invalid type ID:', tid);\n                }\n              };\n\n              state.s11n.deserialize = function (clear = false) {\n                ++metrics.s11n.deserialize.count;\n                const t = performance.now();\n                const argc = viewU8[0];\n                const rc = argc ? [] : null;\n                if (argc) {\n                  const typeIds = [];\n                  let offset = 1,\n                    i,\n                    n,\n                    v;\n                  for (i = 0; i < argc; ++i, ++offset) {\n                    typeIds.push(getTypeIdById(viewU8[offset]));\n                  }\n                  for (i = 0; i < argc; ++i) {\n                    const t = typeIds[i];\n                    if (t.getter) {\n                      v = viewDV[t.getter](offset, state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      n = viewDV.getInt32(offset, state.littleEndian);\n                      offset += 4;\n                      v = textDecoder.decode(viewU8.slice(offset, offset + n));\n                      offset += n;\n                    }\n                    rc.push(v);\n                  }\n                }\n                if (clear) viewU8[0] = 0;\n\n                metrics.s11n.deserialize.time += performance.now() - t;\n                return rc;\n              };\n\n              state.s11n.serialize = function (...args) {\n                const t = performance.now();\n                ++metrics.s11n.serialize.count;\n                if (args.length) {\n                  const typeIds = [];\n                  let i = 0,\n                    offset = 1;\n                  viewU8[0] = args.length & 0xff;\n                  for (; i < args.length; ++i, ++offset) {\n                    typeIds.push(getTypeId(args[i]));\n                    viewU8[offset] = typeIds[i].id;\n                  }\n                  for (i = 0; i < args.length; ++i) {\n                    const t = typeIds[i];\n                    if (t.setter) {\n                      viewDV[t.setter](offset, args[i], state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      const s = textEncoder.encode(args[i]);\n                      viewDV.setInt32(offset, s.byteLength, state.littleEndian);\n                      offset += 4;\n                      viewU8.set(s, offset);\n                      offset += s.byteLength;\n                    }\n                  }\n                } else {\n                  viewU8[0] = 0;\n                }\n                metrics.s11n.serialize.time += performance.now() - t;\n              };\n              return state.s11n;\n            };\n\n            const randomFilename = function f(len = 16) {\n              if (!f._chars) {\n                f._chars =\n                  'abcdefghijklmnopqrstuvwxyz' +\n                  'ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n                  '012346789';\n                f._n = f._chars.length;\n              }\n              const a = [];\n              let i = 0;\n              for (; i < len; ++i) {\n                const ndx = (Math.random() * (f._n * 64)) % f._n | 0;\n                a[i] = f._chars[ndx];\n              }\n              return a.join('');\n            };\n\n            const __openFiles = Object.create(null);\n\n            const opTimer = Object.create(null);\n            opTimer.op = undefined;\n            opTimer.start = undefined;\n            const mTimeStart = (op) => {\n              opTimer.start = performance.now();\n              opTimer.op = op;\n              ++metrics[op].count;\n            };\n            const mTimeEnd = () =>\n              (metrics[opTimer.op].time += performance.now() - opTimer.start);\n\n            const ioSyncWrappers = {\n              xCheckReservedLock: function (pFile, pOut) {\n                const f = __openFiles[pFile];\n                wasm.poke(pOut, f.lockType ? 1 : 0, 'i32');\n                return 0;\n              },\n              xClose: function (pFile) {\n                mTimeStart('xClose');\n                let rc = 0;\n                const f = __openFiles[pFile];\n                if (f) {\n                  delete __openFiles[pFile];\n                  rc = opRun('xClose', pFile);\n                  if (f.sq3File) f.sq3File.dispose();\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xDeviceCharacteristics: function (pFile) {\n                return capi.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n              },\n              xFileControl: function (pFile, opId, pArg) {\n                return capi.SQLITE_NOTFOUND;\n              },\n              xFileSize: function (pFile, pSz64) {\n                mTimeStart('xFileSize');\n                let rc = opRun('xFileSize', pFile);\n                if (0 == rc) {\n                  try {\n                    const sz = state.s11n.deserialize()[0];\n                    wasm.poke(pSz64, sz, 'i64');\n                  } catch (e) {\n                    error('Unexpected error reading xFileSize() result:', e);\n                    rc = state.sq3Codes.SQLITE_IOERR;\n                  }\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xLock: function (pFile, lockType) {\n                mTimeStart('xLock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n\n                if (!f.lockType) {\n                  rc = opRun('xLock', pFile, lockType);\n                  if (0 === rc) f.lockType = lockType;\n                } else {\n                  f.lockType = lockType;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xRead: function (pFile, pDest, n, offset64) {\n                mTimeStart('xRead');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  rc = opRun('xRead', pFile, n, Number(offset64));\n                  if (0 === rc || capi.SQLITE_IOERR_SHORT_READ === rc) {\n                    wasm.heap8u().set(f.sabView.subarray(0, n), pDest);\n                  }\n                } catch (e) {\n                  error('xRead(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_READ;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xSync: function (pFile, flags) {\n                mTimeStart('xSync');\n                ++metrics.xSync.count;\n                const rc = opRun('xSync', pFile, flags);\n                mTimeEnd();\n                return rc;\n              },\n              xTruncate: function (pFile, sz64) {\n                mTimeStart('xTruncate');\n                const rc = opRun('xTruncate', pFile, Number(sz64));\n                mTimeEnd();\n                return rc;\n              },\n              xUnlock: function (pFile, lockType) {\n                mTimeStart('xUnlock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n                if (capi.SQLITE_LOCK_NONE === lockType && f.lockType) {\n                  rc = opRun('xUnlock', pFile, lockType);\n                }\n                if (0 === rc) f.lockType = lockType;\n                mTimeEnd();\n                return rc;\n              },\n              xWrite: function (pFile, pSrc, n, offset64) {\n                mTimeStart('xWrite');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  f.sabView.set(wasm.heap8u().subarray(pSrc, pSrc + n));\n                  rc = opRun('xWrite', pFile, n, Number(offset64));\n                } catch (e) {\n                  error('xWrite(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_WRITE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            const vfsSyncWrappers = {\n              xAccess: function (pVfs, zName, flags, pOut) {\n                mTimeStart('xAccess');\n                const rc = opRun('xAccess', wasm.cstrToJs(zName));\n                wasm.poke(pOut, rc ? 0 : 1, 'i32');\n                mTimeEnd();\n                return 0;\n              },\n              xCurrentTime: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 + new Date().getTime() / 86400000,\n                  'double',\n                );\n                return 0;\n              },\n              xCurrentTimeInt64: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 * 86400000 + new Date().getTime(),\n                  'i64',\n                );\n                return 0;\n              },\n              xDelete: function (pVfs, zName, doSyncDir) {\n                mTimeStart('xDelete');\n                const rc = opRun(\n                  'xDelete',\n                  wasm.cstrToJs(zName),\n                  doSyncDir,\n                  false,\n                );\n                mTimeEnd();\n                return rc;\n              },\n              xFullPathname: function (pVfs, zName, nOut, pOut) {\n                const i = wasm.cstrncpy(pOut, zName, nOut);\n                return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n              },\n              xGetLastError: function (pVfs, nOut, pOut) {\n                warn('OPFS xGetLastError() has nothing sensible to return.');\n                return 0;\n              },\n\n              xOpen: function f(pVfs, zName, pFile, flags, pOutFlags) {\n                mTimeStart('xOpen');\n                let opfsFlags = 0;\n                if (0 === zName) {\n                  zName = randomFilename();\n                } else if ('number' === typeof zName) {\n                  if (capi.sqlite3_uri_boolean(zName, 'opfs-unlock-asap', 0)) {\n                    opfsFlags |= state.opfsFlags.OPFS_UNLOCK_ASAP;\n                  }\n                  zName = wasm.cstrToJs(zName);\n                }\n                const fh = Object.create(null);\n                fh.fid = pFile;\n                fh.filename = zName;\n                fh.sab = new SharedArrayBuffer(state.fileBufferSize);\n                fh.flags = flags;\n                const rc = opRun('xOpen', pFile, zName, flags, opfsFlags);\n                if (!rc) {\n                  if (fh.readOnly) {\n                    wasm.poke(pOutFlags, capi.SQLITE_OPEN_READONLY, 'i32');\n                  }\n                  __openFiles[pFile] = fh;\n                  fh.sabView = state.sabFileBufView;\n                  fh.sq3File = new sqlite3_file(pFile);\n                  fh.sq3File.$pMethods = opfsIoMethods.pointer;\n                  fh.lockType = capi.SQLITE_LOCK_NONE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            if (dVfs) {\n              opfsVfs.$xRandomness = dVfs.$xRandomness;\n              opfsVfs.$xSleep = dVfs.$xSleep;\n            }\n            if (!opfsVfs.$xRandomness) {\n              vfsSyncWrappers.xRandomness = function (pVfs, nOut, pOut) {\n                const heap = wasm.heap8u();\n                let i = 0;\n                for (; i < nOut; ++i)\n                  heap[pOut + i] = (Math.random() * 255000) & 0xff;\n                return i;\n              };\n            }\n            if (!opfsVfs.$xSleep) {\n              vfsSyncWrappers.xSleep = function (pVfs, ms) {\n                Atomics.wait(state.sabOPView, state.opIds.xSleep, 0, ms);\n                return 0;\n              };\n            }\n\n            opfsUtil.getResolvedPath = function (filename, splitIt) {\n              const p = new URL(filename, 'file://irrelevant').pathname;\n              return splitIt ? p.split('/').filter((v) => !!v) : p;\n            };\n\n            opfsUtil.getDirForFilename = async function f(\n              absFilename,\n              createDirs = false,\n            ) {\n              const path = opfsUtil.getResolvedPath(absFilename, true);\n              const filename = path.pop();\n              let dh = opfsUtil.rootDirectory;\n              for (const dirName of path) {\n                if (dirName) {\n                  dh = await dh.getDirectoryHandle(dirName, {\n                    create: !!createDirs,\n                  });\n                }\n              }\n              return [dh, filename];\n            };\n\n            opfsUtil.mkdir = async function (absDirName) {\n              try {\n                await opfsUtil.getDirForFilename(\n                  absDirName + '/filepart',\n                  true,\n                );\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.entryExists = async function (fsEntryName) {\n              try {\n                const [dh, fn] = await opfsUtil.getDirForFilename(fsEntryName);\n                await dh.getFileHandle(fn);\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.randomFilename = randomFilename;\n\n            opfsUtil.registerVfs = (asDefault = false) => {\n              return wasm.exports.sqlite3_vfs_register(\n                opfsVfs.pointer,\n                asDefault ? 1 : 0,\n              );\n            };\n\n            opfsUtil.treeList = async function () {\n              const doDir = async function callee(dirHandle, tgt) {\n                tgt.name = dirHandle.name;\n                tgt.dirs = [];\n                tgt.files = [];\n                for await (const handle of dirHandle.values()) {\n                  if ('directory' === handle.kind) {\n                    const subDir = Object.create(null);\n                    tgt.dirs.push(subDir);\n                    await callee(handle, subDir);\n                  } else {\n                    tgt.files.push(handle.name);\n                  }\n                }\n              };\n              const root = Object.create(null);\n              await doDir(opfsUtil.rootDirectory, root);\n              return root;\n            };\n\n            opfsUtil.rmfr = async function () {\n              const dir = opfsUtil.rootDirectory,\n                opt = { recurse: true };\n              for await (const handle of dir.values()) {\n                dir.removeEntry(handle.name, opt);\n              }\n            };\n\n            opfsUtil.unlink = async function (\n              fsEntryName,\n              recursive = false,\n              throwOnError = false,\n            ) {\n              try {\n                const [hDir, filenamePart] = await opfsUtil.getDirForFilename(\n                  fsEntryName,\n                  false,\n                );\n                await hDir.removeEntry(filenamePart, { recursive });\n                return true;\n              } catch (e) {\n                if (throwOnError) {\n                  throw new Error(\n                    'unlink(',\n                    arguments[0],\n                    ') failed: ' + e.message,\n                    {\n                      cause: e,\n                    },\n                  );\n                }\n                return false;\n              }\n            };\n\n            opfsUtil.traverse = async function (opt) {\n              const defaultOpt = {\n                recursive: true,\n                directory: opfsUtil.rootDirectory,\n              };\n              if ('function' === typeof opt) {\n                opt = { callback: opt };\n              }\n              opt = Object.assign(defaultOpt, opt || {});\n              const doDir = async function callee(dirHandle, depth) {\n                for await (const handle of dirHandle.values()) {\n                  if (false === opt.callback(handle, dirHandle, depth))\n                    return false;\n                  else if (opt.recursive && 'directory' === handle.kind) {\n                    if (false === (await callee(handle, depth + 1))) break;\n                  }\n                }\n              };\n              doDir(opt.directory, 0);\n            };\n\n            opfsUtil.importDb = async function (filename, bytes) {\n              if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n              const n = bytes.byteLength;\n              if (n < 512 || n % 512 != 0) {\n                toss('Byte array size is invalid for an SQLite db.');\n              }\n              const header = 'SQLite format 3';\n              for (let i = 0; i < header.length; ++i) {\n                if (header.charCodeAt(i) !== bytes[i]) {\n                  toss('Input does not contain an SQLite database header.');\n                }\n              }\n              let sah;\n              const [hDir, fnamePart] = await opfsUtil.getDirForFilename(\n                filename,\n                true,\n              );\n              try {\n                const hFile = await hDir.getFileHandle(fnamePart, {\n                  create: true,\n                });\n                sah = await hFile.createSyncAccessHandle();\n                sah.truncate(0);\n                const nWrote = sah.write(bytes, { at: 0 });\n                if (nWrote != n) {\n                  toss(\n                    'Expected to write ' +\n                      n +\n                      ' bytes but wrote ' +\n                      nWrote +\n                      '.',\n                  );\n                }\n                sah.write(new Uint8Array([1, 1]), { at: 18 });\n                return nWrote;\n              } catch (e) {\n                if (sah) {\n                  await sah.close();\n                  sah = undefined;\n                }\n                await hDir.removeEntry(fnamePart).catch(() => {});\n                throw e;\n              } finally {\n                if (sah) await sah.close();\n              }\n            };\n\n            if (sqlite3.oo1) {\n              const OpfsDb = function (...args) {\n                const opt = sqlite3.oo1.DB.dbCtorHelper.normalizeArgs(...args);\n                opt.vfs = opfsVfs.$zName;\n                sqlite3.oo1.DB.dbCtorHelper.call(this, opt);\n              };\n              OpfsDb.prototype = Object.create(sqlite3.oo1.DB.prototype);\n              sqlite3.oo1.OpfsDb = OpfsDb;\n              OpfsDb.importDb = opfsUtil.importDb;\n              sqlite3.oo1.DB.dbCtorHelper.setVfsPostOpenSql(\n                opfsVfs.pointer,\n                function (oo1Db, sqlite3) {\n                  sqlite3.capi.sqlite3_busy_timeout(oo1Db, 10000);\n                  sqlite3.capi.sqlite3_exec(\n                    oo1Db,\n                    [\n                      'pragma journal_mode=DELETE;',\n\n                      'pragma cache_size=-16384;',\n                    ],\n                    0,\n                    0,\n                    0,\n                  );\n                },\n              );\n            }\n\n            const sanityCheck = function () {\n              const scope = wasm.scopedAllocPush();\n              const sq3File = new sqlite3_file();\n              try {\n                const fid = sq3File.pointer;\n                const openFlags =\n                  capi.SQLITE_OPEN_CREATE |\n                  capi.SQLITE_OPEN_READWRITE |\n                  capi.SQLITE_OPEN_MAIN_DB;\n                const pOut = wasm.scopedAlloc(8);\n                const dbFile = '/sanity/check/file' + randomFilename(8);\n                const zDbFile = wasm.scopedAllocCString(dbFile);\n                let rc;\n                state.s11n.serialize('This is ä string.');\n                rc = state.s11n.deserialize();\n                log('deserialize() says:', rc);\n                if ('This is ä string.' !== rc[0]) toss('String d13n error.');\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                log('xAccess(', dbFile, ') exists ?=', rc);\n                rc = vfsSyncWrappers.xOpen(\n                  opfsVfs.pointer,\n                  zDbFile,\n                  fid,\n                  openFlags,\n                  pOut,\n                );\n                log(\n                  'open rc =',\n                  rc,\n                  'state.sabOPView[xOpen] =',\n                  state.sabOPView[state.opIds.xOpen],\n                );\n                if (0 !== rc) {\n                  error('open failed with code', rc);\n                  return;\n                }\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (!rc) toss('xAccess() failed to detect file.');\n                rc = ioSyncWrappers.xSync(sq3File.pointer, 0);\n                if (rc) toss('sync failed w/ rc', rc);\n                rc = ioSyncWrappers.xTruncate(sq3File.pointer, 1024);\n                if (rc) toss('truncate failed w/ rc', rc);\n                wasm.poke(pOut, 0, 'i64');\n                rc = ioSyncWrappers.xFileSize(sq3File.pointer, pOut);\n                if (rc) toss('xFileSize failed w/ rc', rc);\n                log('xFileSize says:', wasm.peek(pOut, 'i64'));\n                rc = ioSyncWrappers.xWrite(sq3File.pointer, zDbFile, 10, 1);\n                if (rc) toss('xWrite() failed!');\n                const readBuf = wasm.scopedAlloc(16);\n                rc = ioSyncWrappers.xRead(sq3File.pointer, readBuf, 6, 2);\n                wasm.poke(readBuf + 6, 0);\n                let jRead = wasm.cstrToJs(readBuf);\n                log('xRead() got:', jRead);\n                if ('sanity' !== jRead) toss('Unexpected xRead() value.');\n                if (vfsSyncWrappers.xSleep) {\n                  log('xSleep()ing before close()ing...');\n                  vfsSyncWrappers.xSleep(opfsVfs.pointer, 2000);\n                  log('waking up from xSleep()');\n                }\n                rc = ioSyncWrappers.xClose(fid);\n                log('xClose rc =', rc, 'sabOPView =', state.sabOPView);\n                log('Deleting file:', dbFile);\n                vfsSyncWrappers.xDelete(opfsVfs.pointer, zDbFile, 0x1234);\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (rc)\n                  toss(\n                    'Expecting 0 from xAccess(',\n                    dbFile,\n                    ') after xDelete().',\n                  );\n                warn('End of OPFS sanity checks.');\n              } finally {\n                sq3File.dispose();\n                wasm.scopedAllocPop(scope);\n              }\n            };\n\n            W.onmessage = function ({ data }) {\n              switch (data.type) {\n                case 'opfs-unavailable':\n                  promiseReject(new Error(data.payload.join(' ')));\n                  break;\n                case 'opfs-async-loaded':\n                  W.postMessage({ type: 'opfs-async-init', args: state });\n                  break;\n                case 'opfs-async-inited': {\n                  if (true === promiseWasRejected) {\n                    break;\n                  }\n                  try {\n                    sqlite3.vfs.installVfs({\n                      io: { struct: opfsIoMethods, methods: ioSyncWrappers },\n                      vfs: { struct: opfsVfs, methods: vfsSyncWrappers },\n                    });\n                    state.sabOPView = new Int32Array(state.sabOP);\n                    state.sabFileBufView = new Uint8Array(\n                      state.sabIO,\n                      0,\n                      state.fileBufferSize,\n                    );\n                    state.sabS11nView = new Uint8Array(\n                      state.sabIO,\n                      state.sabS11nOffset,\n                      state.sabS11nSize,\n                    );\n                    initS11n();\n                    if (options.sanityChecks) {\n                      warn(\n                        'Running sanity checks because of opfs-sanity-check URL arg...',\n                      );\n                      sanityCheck();\n                    }\n                    if (thisThreadHasOPFS()) {\n                      navigator.storage\n                        .getDirectory()\n                        .then((d) => {\n                          W.onerror = W._originalOnError;\n                          delete W._originalOnError;\n                          sqlite3.opfs = opfsUtil;\n                          opfsUtil.rootDirectory = d;\n                          log('End of OPFS sqlite3_vfs setup.', opfsVfs);\n                          promiseResolve();\n                        })\n                        .catch(promiseReject);\n                    } else {\n                      promiseResolve();\n                    }\n                  } catch (e) {\n                    error(e);\n                    promiseReject(e);\n                  }\n                  break;\n                }\n                default: {\n                  const errMsg =\n                    'Unexpected message from the OPFS async worker: ' +\n                    JSON.stringify(data);\n                  error(errMsg);\n                  promiseReject(new Error(errMsg));\n                  break;\n                }\n              }\n            };\n          });\n          return thePromise;\n        };\n        installOpfsVfs.defaultProxyUri = 'sqlite3-opfs-async-proxy.js';\n        globalThis.sqlite3ApiBootstrap.initializersAsync.push(\n          async (sqlite3) => {\n            try {\n              let proxyJs = installOpfsVfs.defaultProxyUri;\n              if (sqlite3.scriptInfo.sqlite3Dir) {\n                installOpfsVfs.defaultProxyUri =\n                  sqlite3.scriptInfo.sqlite3Dir + proxyJs;\n              }\n              return installOpfsVfs().catch((e) => {\n                sqlite3.config.warn(\n                  'Ignoring inability to install OPFS sqlite3_vfs:',\n                  e.message,\n                );\n              });\n            } catch (e) {\n              sqlite3.config.error('installOpfsVfs() exception:', e);\n              return Promise.reject(e);\n            }\n          },\n        );\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        'use strict';\n        const toss = sqlite3.util.toss;\n        const toss3 = sqlite3.util.toss3;\n        const initPromises = Object.create(null);\n        const capi = sqlite3.capi;\n        const wasm = sqlite3.wasm;\n\n        const SECTOR_SIZE = 4096;\n        const HEADER_MAX_PATH_SIZE = 512;\n        const HEADER_FLAGS_SIZE = 4;\n        const HEADER_DIGEST_SIZE = 8;\n        const HEADER_CORPUS_SIZE = HEADER_MAX_PATH_SIZE + HEADER_FLAGS_SIZE;\n        const HEADER_OFFSET_FLAGS = HEADER_MAX_PATH_SIZE;\n        const HEADER_OFFSET_DIGEST = HEADER_CORPUS_SIZE;\n        const HEADER_OFFSET_DATA = SECTOR_SIZE;\n\n        const PERSISTENT_FILE_TYPES =\n          capi.SQLITE_OPEN_MAIN_DB |\n          capi.SQLITE_OPEN_MAIN_JOURNAL |\n          capi.SQLITE_OPEN_SUPER_JOURNAL |\n          capi.SQLITE_OPEN_WAL;\n\n        const OPAQUE_DIR_NAME = '.opaque';\n\n        const getRandomName = () => Math.random().toString(36).slice(2);\n\n        const textDecoder = new TextDecoder();\n        const textEncoder = new TextEncoder();\n\n        const optionDefaults = Object.assign(Object.create(null), {\n          name: 'opfs-sahpool',\n          directory: undefined,\n          initialCapacity: 6,\n          clearOnInit: false,\n\n          verbosity: 2,\n        });\n\n        const loggers = [\n          sqlite3.config.error,\n          sqlite3.config.warn,\n          sqlite3.config.log,\n        ];\n        const log = sqlite3.config.log;\n        const warn = sqlite3.config.warn;\n        const error = sqlite3.config.error;\n\n        const __mapVfsToPool = new Map();\n        const getPoolForVfs = (pVfs) => __mapVfsToPool.get(pVfs);\n        const setPoolForVfs = (pVfs, pool) => {\n          if (pool) __mapVfsToPool.set(pVfs, pool);\n          else __mapVfsToPool.delete(pVfs);\n        };\n\n        const __mapSqlite3File = new Map();\n        const getPoolForPFile = (pFile) => __mapSqlite3File.get(pFile);\n        const setPoolForPFile = (pFile, pool) => {\n          if (pool) __mapSqlite3File.set(pFile, pool);\n          else __mapSqlite3File.delete(pFile);\n        };\n\n        const ioMethods = {\n          xCheckReservedLock: function (pFile, pOut) {\n            const pool = getPoolForPFile(pFile);\n            pool.log('xCheckReservedLock');\n            pool.storeErr();\n            wasm.poke32(pOut, 1);\n            return 0;\n          },\n          xClose: function (pFile) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            if (file) {\n              try {\n                pool.log(`xClose ${file.path}`);\n                pool.mapS3FileToOFile(pFile, false);\n                file.sah.flush();\n                if (file.flags & capi.SQLITE_OPEN_DELETEONCLOSE) {\n                  pool.deletePath(file.path);\n                }\n              } catch (e) {\n                pool.storeErr(e);\n                return capi.SQLITE_IOERR;\n              }\n            }\n            return 0;\n          },\n          xDeviceCharacteristics: function (pFile) {\n            return capi.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n          },\n          xFileControl: function (pFile, opId, pArg) {\n            return capi.SQLITE_NOTFOUND;\n          },\n          xFileSize: function (pFile, pSz64) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xFileSize`);\n            const file = pool.getOFileForS3File(pFile);\n            const size = file.sah.getSize() - HEADER_OFFSET_DATA;\n\n            wasm.poke64(pSz64, BigInt(size));\n            return 0;\n          },\n          xLock: function (pFile, lockType) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xLock ${lockType}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            file.lockType = lockType;\n            return 0;\n          },\n          xRead: function (pFile, pDest, n, offset64) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            pool.log(`xRead ${file.path} ${n} @ ${offset64}`);\n            try {\n              const nRead = file.sah.read(\n                wasm.heap8u().subarray(pDest, pDest + n),\n                { at: HEADER_OFFSET_DATA + Number(offset64) },\n              );\n              if (nRead < n) {\n                wasm.heap8u().fill(0, pDest + nRead, pDest + n);\n                return capi.SQLITE_IOERR_SHORT_READ;\n              }\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_IOERR;\n            }\n          },\n          xSectorSize: function (pFile) {\n            return SECTOR_SIZE;\n          },\n          xSync: function (pFile, flags) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xSync ${flags}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n\n            try {\n              file.sah.flush();\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_IOERR;\n            }\n          },\n          xTruncate: function (pFile, sz64) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xTruncate ${sz64}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n\n            try {\n              file.sah.truncate(HEADER_OFFSET_DATA + Number(sz64));\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_IOERR;\n            }\n          },\n          xUnlock: function (pFile, lockType) {\n            const pool = getPoolForPFile(pFile);\n            pool.log('xUnlock');\n            const file = pool.getOFileForS3File(pFile);\n            file.lockType = lockType;\n            return 0;\n          },\n          xWrite: function (pFile, pSrc, n, offset64) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            pool.log(`xWrite ${file.path} ${n} ${offset64}`);\n            try {\n              const nBytes = file.sah.write(\n                wasm.heap8u().subarray(pSrc, pSrc + n),\n                { at: HEADER_OFFSET_DATA + Number(offset64) },\n              );\n              return nBytes === n ? 0 : capi.SQLITE_IOERR;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_IOERR;\n            }\n          },\n        };\n\n        const opfsIoMethods = new capi.sqlite3_io_methods();\n        opfsIoMethods.$iVersion = 1;\n        sqlite3.vfs.installVfs({\n          io: { struct: opfsIoMethods, methods: ioMethods },\n        });\n\n        const vfsMethods = {\n          xAccess: function (pVfs, zName, flags, pOut) {\n            const pool = getPoolForVfs(pVfs);\n            pool.storeErr();\n            try {\n              const name = pool.getPath(zName);\n              wasm.poke32(pOut, pool.hasFilename(name) ? 1 : 0);\n            } catch (e) {\n              wasm.poke32(pOut, 0);\n            }\n            return 0;\n          },\n          xCurrentTime: function (pVfs, pOut) {\n            wasm.poke(\n              pOut,\n              2440587.5 + new Date().getTime() / 86400000,\n              'double',\n            );\n            return 0;\n          },\n          xCurrentTimeInt64: function (pVfs, pOut) {\n            wasm.poke(pOut, 2440587.5 * 86400000 + new Date().getTime(), 'i64');\n            return 0;\n          },\n          xDelete: function (pVfs, zName, doSyncDir) {\n            const pool = getPoolForVfs(pVfs);\n            pool.log(`xDelete ${wasm.cstrToJs(zName)}`);\n            pool.storeErr();\n            try {\n              pool.deletePath(pool.getPath(zName));\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_IOERR_DELETE;\n            }\n          },\n          xFullPathname: function (pVfs, zName, nOut, pOut) {\n            const i = wasm.cstrncpy(pOut, zName, nOut);\n            return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n          },\n          xGetLastError: function (pVfs, nOut, pOut) {\n            const pool = getPoolForVfs(pVfs);\n            pool.log(`xGetLastError ${nOut}`);\n            const e = pool.popErr();\n            if (e) {\n              const scope = wasm.scopedAllocPush();\n              try {\n                const [cMsg, n] = wasm.scopedAllocCString(e.message, true);\n                wasm.cstrncpy(pOut, cMsg, nOut);\n                if (n > nOut) wasm.poke8(pOut + nOut - 1, 0);\n              } catch (e) {\n                return capi.SQLITE_NOMEM;\n              } finally {\n                wasm.scopedAllocPop(scope);\n              }\n            }\n            return 0;\n          },\n\n          xOpen: function f(pVfs, zName, pFile, flags, pOutFlags) {\n            const pool = getPoolForVfs(pVfs);\n            try {\n              pool.log(`xOpen ${wasm.cstrToJs(zName)} ${flags}`);\n\n              const path =\n                zName && wasm.peek8(zName)\n                  ? pool.getPath(zName)\n                  : getRandomName();\n              let sah = pool.getSAHForPath(path);\n              if (!sah && flags & capi.SQLITE_OPEN_CREATE) {\n                if (pool.getFileCount() < pool.getCapacity()) {\n                  sah = pool.nextAvailableSAH();\n                  pool.setAssociatedPath(sah, path, flags);\n                } else {\n                  toss('SAH pool is full. Cannot create file', path);\n                }\n              }\n              if (!sah) {\n                toss('file not found:', path);\n              }\n\n              const file = { path, flags, sah };\n              pool.mapS3FileToOFile(pFile, file);\n              file.lockType = capi.SQLITE_LOCK_NONE;\n              const sq3File = new capi.sqlite3_file(pFile);\n              sq3File.$pMethods = opfsIoMethods.pointer;\n              sq3File.dispose();\n              wasm.poke32(pOutFlags, flags);\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_CANTOPEN;\n            }\n          },\n        };\n\n        const createOpfsVfs = function (vfsName) {\n          if (sqlite3.capi.sqlite3_vfs_find(vfsName)) {\n            toss3('VFS name is already registered:', vfsName);\n          }\n          const opfsVfs = new capi.sqlite3_vfs();\n\n          const pDVfs = capi.sqlite3_vfs_find(null);\n          const dVfs = pDVfs ? new capi.sqlite3_vfs(pDVfs) : null;\n          opfsVfs.$iVersion = 2;\n          opfsVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n          opfsVfs.$mxPathname = HEADER_MAX_PATH_SIZE;\n          opfsVfs.addOnDispose(\n            (opfsVfs.$zName = wasm.allocCString(vfsName)),\n            () => setPoolForVfs(opfsVfs.pointer, 0),\n          );\n\n          if (dVfs) {\n            opfsVfs.$xRandomness = dVfs.$xRandomness;\n            opfsVfs.$xSleep = dVfs.$xSleep;\n            dVfs.dispose();\n          }\n          if (!opfsVfs.$xRandomness && !vfsMethods.xRandomness) {\n            vfsMethods.xRandomness = function (pVfs, nOut, pOut) {\n              const heap = wasm.heap8u();\n              let i = 0;\n              for (; i < nOut; ++i)\n                heap[pOut + i] = (Math.random() * 255000) & 0xff;\n              return i;\n            };\n          }\n          if (!opfsVfs.$xSleep && !vfsMethods.xSleep) {\n            vfsMethods.xSleep = (pVfs, ms) => 0;\n          }\n          sqlite3.vfs.installVfs({\n            vfs: { struct: opfsVfs, methods: vfsMethods },\n          });\n          return opfsVfs;\n        };\n\n        class OpfsSAHPool {\n          vfsDir;\n\n          #dhVfsRoot;\n\n          #dhOpaque;\n\n          #dhVfsParent;\n\n          #mapSAHToName = new Map();\n\n          #mapFilenameToSAH = new Map();\n\n          #availableSAH = new Set();\n\n          #mapS3FileToOFile_ = new Map();\n\n          #apBody = new Uint8Array(HEADER_CORPUS_SIZE);\n\n          #dvBody;\n\n          #cVfs;\n\n          #verbosity;\n\n          constructor(options = Object.create(null)) {\n            this.#verbosity = options.verbosity ?? optionDefaults.verbosity;\n            this.vfsName = options.name || optionDefaults.name;\n            this.#cVfs = createOpfsVfs(this.vfsName);\n            setPoolForVfs(this.#cVfs.pointer, this);\n            this.vfsDir = options.directory || '.' + this.vfsName;\n            this.#dvBody = new DataView(\n              this.#apBody.buffer,\n              this.#apBody.byteOffset,\n            );\n            this.isReady = this.reset(\n              !!(options.clearOnInit ?? optionDefaults.clearOnInit),\n            ).then(() => {\n              if (this.$error) throw this.$error;\n              return this.getCapacity()\n                ? Promise.resolve(undefined)\n                : this.addCapacity(\n                    options.initialCapacity || optionDefaults.initialCapacity,\n                  );\n            });\n          }\n\n          #logImpl(level, ...args) {\n            if (this.#verbosity > level)\n              loggers[level](this.vfsName + ':', ...args);\n          }\n          log(...args) {\n            this.#logImpl(2, ...args);\n          }\n          warn(...args) {\n            this.#logImpl(1, ...args);\n          }\n          error(...args) {\n            this.#logImpl(0, ...args);\n          }\n\n          getVfs() {\n            return this.#cVfs;\n          }\n\n          getCapacity() {\n            return this.#mapSAHToName.size;\n          }\n\n          getFileCount() {\n            return this.#mapFilenameToSAH.size;\n          }\n\n          getFileNames() {\n            const rc = [];\n            const iter = this.#mapFilenameToSAH.keys();\n            for (const n of iter) rc.push(n);\n            return rc;\n          }\n\n          async addCapacity(n) {\n            for (let i = 0; i < n; ++i) {\n              const name = getRandomName();\n              const h = await this.#dhOpaque.getFileHandle(name, {\n                create: true,\n              });\n              const ah = await h.createSyncAccessHandle();\n              this.#mapSAHToName.set(ah, name);\n              this.setAssociatedPath(ah, '', 0);\n            }\n            return this.getCapacity();\n          }\n\n          async reduceCapacity(n) {\n            let nRm = 0;\n            for (const ah of Array.from(this.#availableSAH)) {\n              if (nRm === n || this.getFileCount() === this.getCapacity()) {\n                break;\n              }\n              const name = this.#mapSAHToName.get(ah);\n\n              ah.close();\n              await this.#dhOpaque.removeEntry(name);\n              this.#mapSAHToName.delete(ah);\n              this.#availableSAH.delete(ah);\n              ++nRm;\n            }\n            return nRm;\n          }\n\n          releaseAccessHandles() {\n            for (const ah of this.#mapSAHToName.keys()) ah.close();\n            this.#mapSAHToName.clear();\n            this.#mapFilenameToSAH.clear();\n            this.#availableSAH.clear();\n          }\n\n          async acquireAccessHandles(clearFiles) {\n            const files = [];\n            for await (const [name, h] of this.#dhOpaque) {\n              if ('file' === h.kind) {\n                files.push([name, h]);\n              }\n            }\n            return Promise.all(\n              files.map(async ([name, h]) => {\n                try {\n                  const ah = await h.createSyncAccessHandle();\n                  this.#mapSAHToName.set(ah, name);\n                  if (clearFiles) {\n                    ah.truncate(HEADER_OFFSET_DATA);\n                    this.setAssociatedPath(ah, '', 0);\n                  } else {\n                    const path = this.getAssociatedPath(ah);\n                    if (path) {\n                      this.#mapFilenameToSAH.set(path, ah);\n                    } else {\n                      this.#availableSAH.add(ah);\n                    }\n                  }\n                } catch (e) {\n                  this.storeErr(e);\n                  this.releaseAccessHandles();\n                  throw e;\n                }\n              }),\n            );\n          }\n\n          getAssociatedPath(sah) {\n            sah.read(this.#apBody, { at: 0 });\n\n            const flags = this.#dvBody.getUint32(HEADER_OFFSET_FLAGS);\n            if (\n              this.#apBody[0] &&\n              (flags & capi.SQLITE_OPEN_DELETEONCLOSE ||\n                (flags & PERSISTENT_FILE_TYPES) === 0)\n            ) {\n              warn(\n                `Removing file with unexpected flags ${flags.toString(16)}`,\n                this.#apBody,\n              );\n              this.setAssociatedPath(sah, '', 0);\n              return '';\n            }\n\n            const fileDigest = new Uint32Array(HEADER_DIGEST_SIZE / 4);\n            sah.read(fileDigest, { at: HEADER_OFFSET_DIGEST });\n            const compDigest = this.computeDigest(this.#apBody);\n            if (fileDigest.every((v, i) => v === compDigest[i])) {\n              const pathBytes = this.#apBody.findIndex((v) => 0 === v);\n              if (0 === pathBytes) {\n                sah.truncate(HEADER_OFFSET_DATA);\n              }\n              return pathBytes\n                ? textDecoder.decode(this.#apBody.subarray(0, pathBytes))\n                : '';\n            } else {\n              warn('Disassociating file with bad digest.');\n              this.setAssociatedPath(sah, '', 0);\n              return '';\n            }\n          }\n\n          setAssociatedPath(sah, path, flags) {\n            const enc = textEncoder.encodeInto(path, this.#apBody);\n            if (HEADER_MAX_PATH_SIZE <= enc.written + 1) {\n              toss('Path too long:', path);\n            }\n            this.#apBody.fill(0, enc.written, HEADER_MAX_PATH_SIZE);\n            this.#dvBody.setUint32(HEADER_OFFSET_FLAGS, flags);\n\n            const digest = this.computeDigest(this.#apBody);\n            sah.write(this.#apBody, { at: 0 });\n            sah.write(digest, { at: HEADER_OFFSET_DIGEST });\n            sah.flush();\n\n            if (path) {\n              this.#mapFilenameToSAH.set(path, sah);\n              this.#availableSAH.delete(sah);\n            } else {\n              sah.truncate(HEADER_OFFSET_DATA);\n              this.#availableSAH.add(sah);\n            }\n          }\n\n          computeDigest(byteArray) {\n            let h1 = 0xdeadbeef;\n            let h2 = 0x41c6ce57;\n            for (const v of byteArray) {\n              h1 = 31 * h1 + v * 307;\n              h2 = 31 * h2 + v * 307;\n            }\n            return new Uint32Array([h1 >>> 0, h2 >>> 0]);\n          }\n\n          async reset(clearFiles) {\n            await this.isReady;\n            let h = await navigator.storage.getDirectory();\n            let prev, prevName;\n            for (const d of this.vfsDir.split('/')) {\n              if (d) {\n                prev = h;\n                h = await h.getDirectoryHandle(d, { create: true });\n              }\n            }\n            this.#dhVfsRoot = h;\n            this.#dhVfsParent = prev;\n            this.#dhOpaque = await this.#dhVfsRoot.getDirectoryHandle(\n              OPAQUE_DIR_NAME,\n              { create: true },\n            );\n            this.releaseAccessHandles();\n            return this.acquireAccessHandles(clearFiles);\n          }\n\n          getPath(arg) {\n            if (wasm.isPtr(arg)) arg = wasm.cstrToJs(arg);\n            return (\n              arg instanceof URL ? arg : new URL(arg, 'file://localhost/')\n            ).pathname;\n          }\n\n          deletePath(path) {\n            const sah = this.#mapFilenameToSAH.get(path);\n            if (sah) {\n              this.#mapFilenameToSAH.delete(path);\n              this.setAssociatedPath(sah, '', 0);\n            }\n            return !!sah;\n          }\n\n          storeErr(e) {\n            if (e) this.error(e);\n            return (this.$error = e);\n          }\n\n          popErr() {\n            const rc = this.$error;\n            this.$error = undefined;\n            return rc;\n          }\n\n          nextAvailableSAH() {\n            const [rc] = this.#availableSAH.keys();\n            return rc;\n          }\n\n          getOFileForS3File(pFile) {\n            return this.#mapS3FileToOFile_.get(pFile);\n          }\n\n          mapS3FileToOFile(pFile, file) {\n            if (file) {\n              this.#mapS3FileToOFile_.set(pFile, file);\n              setPoolForPFile(pFile, this);\n            } else {\n              this.#mapS3FileToOFile_.delete(pFile);\n              setPoolForPFile(pFile, false);\n            }\n          }\n\n          hasFilename(name) {\n            return this.#mapFilenameToSAH.has(name);\n          }\n\n          getSAHForPath(path) {\n            return this.#mapFilenameToSAH.get(path);\n          }\n\n          async removeVfs() {\n            if (!this.#cVfs.pointer || !this.#dhOpaque) return false;\n            capi.sqlite3_vfs_unregister(this.#cVfs.pointer);\n            this.#cVfs.dispose();\n            try {\n              this.releaseAccessHandles();\n              await this.#dhVfsRoot.removeEntry(OPAQUE_DIR_NAME, {\n                recursive: true,\n              });\n              this.#dhOpaque = undefined;\n              await this.#dhVfsParent.removeEntry(this.#dhVfsRoot.name, {\n                recursive: true,\n              });\n              this.#dhVfsRoot = this.#dhVfsParent = undefined;\n            } catch (e) {\n              sqlite3.config.error(this.vfsName, 'removeVfs() failed:', e);\n            }\n            return true;\n          }\n\n          exportFile(name) {\n            const sah =\n              this.#mapFilenameToSAH.get(name) || toss('File not found:', name);\n            const n = sah.getSize() - HEADER_OFFSET_DATA;\n            const b = new Uint8Array(n > 0 ? n : 0);\n            if (n > 0) {\n              const nRead = sah.read(b, { at: HEADER_OFFSET_DATA });\n              if (nRead != n) {\n                toss(\n                  'Expected to read ' + n + ' bytes but read ' + nRead + '.',\n                );\n              }\n            }\n            return b;\n          }\n\n          importDb(name, bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            const n = bytes.byteLength;\n            if (n < 512 || n % 512 != 0) {\n              toss('Byte array size is invalid for an SQLite db.');\n            }\n            const header = 'SQLite format 3';\n            for (let i = 0; i < header.length; ++i) {\n              if (header.charCodeAt(i) !== bytes[i]) {\n                toss('Input does not contain an SQLite database header.');\n              }\n            }\n            const sah =\n              this.#mapFilenameToSAH.get(name) ||\n              this.nextAvailableSAH() ||\n              toss('No available handles to import to.');\n            const nWrote = sah.write(bytes, { at: HEADER_OFFSET_DATA });\n            if (nWrote != n) {\n              this.setAssociatedPath(sah, '', 0);\n              toss(\n                'Expected to write ' + n + ' bytes but wrote ' + nWrote + '.',\n              );\n            } else {\n              sah.write(new Uint8Array([1, 1]), {\n                at: HEADER_OFFSET_DATA + 18,\n              });\n              this.setAssociatedPath(sah, name, capi.SQLITE_OPEN_MAIN_DB);\n            }\n          }\n        }\n\n        class OpfsSAHPoolUtil {\n          #p;\n\n          constructor(sahPool) {\n            this.#p = sahPool;\n            this.vfsName = sahPool.vfsName;\n          }\n\n          async addCapacity(n) {\n            return this.#p.addCapacity(n);\n          }\n\n          async reduceCapacity(n) {\n            return this.#p.reduceCapacity(n);\n          }\n\n          getCapacity() {\n            return this.#p.getCapacity(this.#p);\n          }\n\n          getFileCount() {\n            return this.#p.getFileCount();\n          }\n          getFileNames() {\n            return this.#p.getFileNames();\n          }\n\n          async reserveMinimumCapacity(min) {\n            const c = this.#p.getCapacity();\n            return c < min ? this.#p.addCapacity(min - c) : c;\n          }\n\n          exportFile(name) {\n            return this.#p.exportFile(name);\n          }\n\n          importDb(name, bytes) {\n            return this.#p.importDb(name, bytes);\n          }\n\n          async wipeFiles() {\n            return this.#p.reset(true);\n          }\n\n          unlink(filename) {\n            return this.#p.deletePath(filename);\n          }\n\n          async removeVfs() {\n            return this.#p.removeVfs();\n          }\n        }\n\n        const apiVersionCheck = async () => {\n          const dh = await navigator.storage.getDirectory();\n          const fn = '.opfs-sahpool-sync-check-' + getRandomName();\n          const fh = await dh.getFileHandle(fn, { create: true });\n          const ah = await fh.createSyncAccessHandle();\n          const close = ah.close();\n          await close;\n          await dh.removeEntry(fn);\n          if (close?.then) {\n            toss(\n              'The local OPFS API is too old for opfs-sahpool:',\n              'it has an async FileSystemSyncAccessHandle.close() method.',\n            );\n          }\n          return true;\n        };\n\n        let instanceCounter = 0;\n\n        sqlite3.installOpfsSAHPoolVfs = async function (\n          options = Object.create(null),\n        ) {\n          const vfsName = options.name || optionDefaults.name;\n          if (0 && 2 === ++instanceCounter) {\n            throw new Error('Just testing rejection.');\n          }\n          if (initPromises[vfsName]) {\n            return initPromises[vfsName];\n          }\n          if (\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle ||\n            !globalThis.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n            !navigator?.storage?.getDirectory\n          ) {\n            return (initPromises[vfsName] = Promise.reject(\n              new Error('Missing required OPFS APIs.'),\n            ));\n          }\n\n          return (initPromises[vfsName] = apiVersionCheck()\n            .then(async function () {\n              if (options.$testThrowInInit) {\n                throw options.$testThrowInInit;\n              }\n              const thePool = new OpfsSAHPool(options);\n              return thePool.isReady\n                .then(async () => {\n                  const poolUtil = new OpfsSAHPoolUtil(thePool);\n                  if (sqlite3.oo1) {\n                    const oo1 = sqlite3.oo1;\n                    const theVfs = thePool.getVfs();\n                    const OpfsSAHPoolDb = function (...args) {\n                      const opt = oo1.DB.dbCtorHelper.normalizeArgs(...args);\n                      opt.vfs = theVfs.$zName;\n                      oo1.DB.dbCtorHelper.call(this, opt);\n                    };\n                    OpfsSAHPoolDb.prototype = Object.create(oo1.DB.prototype);\n\n                    poolUtil.OpfsSAHPoolDb = OpfsSAHPoolDb;\n                    oo1.DB.dbCtorHelper.setVfsPostOpenSql(\n                      theVfs.pointer,\n                      function (oo1Db, sqlite3) {\n                        sqlite3.capi.sqlite3_exec(\n                          oo1Db,\n                          [\n                            'pragma journal_mode=DELETE;',\n                            'pragma cache_size=-16384;',\n                          ],\n                          0,\n                          0,\n                          0,\n                        );\n                      },\n                    );\n                  }\n                  thePool.log('VFS initialized.');\n                  return poolUtil;\n                })\n                .catch(async (e) => {\n                  await thePool.removeVfs().catch(() => {});\n                  return e;\n                });\n            })\n            .catch((err) => {\n              return (initPromises[vfsName] = Promise.reject(err));\n            }));\n        };\n      });\n\n      ('use strict');\n      if ('undefined' !== typeof Module) {\n        const SABC = Object.assign(\n          Object.create(null),\n          {\n            exports:\n              'undefined' === typeof wasmExports ? Module['asm'] : wasmExports,\n            memory: Module.wasmMemory,\n          },\n          globalThis.sqlite3ApiConfig || {},\n        );\n\n        globalThis.sqlite3ApiConfig = SABC;\n        let sqlite3;\n        try {\n          sqlite3 = globalThis.sqlite3ApiBootstrap();\n        } catch (e) {\n          console.error('sqlite3ApiBootstrap() error:', e);\n          throw e;\n        } finally {\n          delete globalThis.sqlite3ApiBootstrap;\n          delete globalThis.sqlite3ApiConfig;\n        }\n\n        Module.sqlite3 = sqlite3;\n      } else {\n        console.warn(\n          'This is not running in an Emscripten module context, so',\n          'globalThis.sqlite3ApiBootstrap() is _not_ being called due to lack',\n          'of config info for the WASM environment.',\n          'It must be called manually.',\n        );\n      }\n    });\n\n    return sqlite3InitModule.ready;\n  };\n})();\n\nconst toExportForESM = (function () {\n  const originalInit = sqlite3InitModule;\n  if (!originalInit) {\n    throw new Error(\n      'Expecting globalThis.sqlite3InitModule to be defined by the Emscripten build.',\n    );\n  }\n\n  const initModuleState = (globalThis.sqlite3InitModuleState = Object.assign(\n    Object.create(null),\n    {\n      moduleScript: globalThis?.document?.currentScript,\n      isWorker: 'undefined' !== typeof WorkerGlobalScope,\n      location: globalThis.location,\n      urlParams: globalThis?.location?.href\n        ? new URL(globalThis.location.href).searchParams\n        : new URLSearchParams(),\n    },\n  ));\n  initModuleState.debugModule = initModuleState.urlParams.has(\n    'sqlite3.debugModule',\n  )\n    ? (...args) => console.warn('sqlite3.debugModule:', ...args)\n    : () => {};\n\n  if (initModuleState.urlParams.has('sqlite3.dir')) {\n    initModuleState.sqlite3Dir =\n      initModuleState.urlParams.get('sqlite3.dir') + '/';\n  } else if (initModuleState.moduleScript) {\n    const li = initModuleState.moduleScript.src.split('/');\n    li.pop();\n    initModuleState.sqlite3Dir = li.join('/') + '/';\n  }\n\n  globalThis.sqlite3InitModule = function ff(...args) {\n    return originalInit(...args)\n      .then((EmscriptenModule) => {\n        const s = EmscriptenModule.sqlite3;\n        s.scriptInfo = initModuleState;\n\n        if (ff.__isUnderTest) s.__isUnderTest = true;\n        const f = s.asyncPostInit;\n        delete s.asyncPostInit;\n        return f();\n      })\n      .catch((e) => {\n        console.error('Exception loading sqlite3 module:', e);\n        throw e;\n      });\n  };\n  globalThis.sqlite3InitModule.ready = originalInit.ready;\n\n  if (globalThis.sqlite3InitModuleState.moduleScript) {\n    const sim = globalThis.sqlite3InitModuleState;\n    let src = sim.moduleScript.src.split('/');\n    src.pop();\n    sim.scriptDir = src.join('/') + '/';\n  }\n  initModuleState.debugModule('sqlite3InitModuleState =', initModuleState);\n  if (0) {\n    console.warn('Replaced sqlite3InitModule()');\n    console.warn('globalThis.location.href =', globalThis.location.href);\n    if ('undefined' !== typeof document) {\n      console.warn(\n        'document.currentScript.src =',\n        document?.currentScript?.src,\n      );\n    }\n  }\n  return globalThis.sqlite3InitModule;\n})();\nsqlite3InitModule = toExportForESM;\nexport default sqlite3InitModule;\n","import { default as sqlite3InitModule } from './sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs';\n\nexport default sqlite3InitModule;\n","/* eslint-env worker */\n/* eslint-disable no-restricted-globals */\nimport { getFile, removeEntry, removeAllEntries } from '@webui-one/core/utils/opfs';\nimport { getFilenameFromUrl } from '@webui-one/core/utils/path';\nimport { expose } from '@webui-one/core/utils/worker';\nimport sqlite3InitModule from '@sqlite.org/sqlite-wasm';\n\nconst getMemoryDb = async (sqlite3, location) => {\n    const response = await fetch(location);\n    const arrayBuffer = await response.arrayBuffer();\n    const p = sqlite3.wasm.allocFromTypedArray(arrayBuffer);\n    const db = new sqlite3.oo1.DB();\n    const rc = sqlite3.capi.sqlite3_deserialize(\n        db.pointer,\n        'main',\n        p,\n        arrayBuffer.byteLength,\n        arrayBuffer.byteLength,\n        sqlite3.capi.SQLITE_DESERIALIZE_FREEONCLOSE,\n        // Optionally:\n        // | sqlite3.capi.SQLITE_DESERIALIZE_RESIZEABLE\n    );\n    db.checkRc(rc);\n    return db;\n};\n\nfunction formatSqliteError(cause) {\n    const index = cause.message.indexOf(':');\n\n    if (cause.message.startsWith('sqlite3') && index > 0) {\n        // NOTE: Strip \"sqlite3 result code xx:\" from the\n        // error message before rethrowing it.\n        return cause.message.substring(index + 1).trim();\n    }\n\n    return 'Unspecified database error';\n}\n\nconst getOpfsDb = async (sqlite3, dbUrl) => {\n    const filename = getFilenameFromUrl(dbUrl);\n    let retries = 1;\n    while (retries >= 0) {\n        /* eslint-disable no-await-in-loop */\n        try {\n            await getFile({ location: dbUrl, filename });\n            const db = new sqlite3.oo1.OpfsDb(filename);\n            const resultRows = [];\n            const sql = 'SELECT name FROM sqlite_master;';\n            db.exec({\n                sql,\n                rowMode: 'object',\n                resultRows,\n            });\n            return db;\n        } catch (cause) {\n            // NOTE: If we fail to load the database we remove the file\n            // and try again.\n            //\n            // If we fail too many times, we throw an error that we can\n            // show to the user.\n\n            if (retries === 0) {\n                const message = formatSqliteError(cause);\n                throw new TypeError(message, { cause });\n            }\n\n            await removeEntry({ filename });\n            retries -= 1;\n        }\n        /* eslint-enable no-await-in-loop */\n    }\n    return Promise.resolve();\n};\n\n\nconst getDb = async (sqlite3, dbUrl) => {\n    if ('opfs' in sqlite3) {\n        return getOpfsDb(sqlite3, dbUrl);\n    }\n    return getMemoryDb(sqlite3, dbUrl);\n};\n\n// eslint-disable-next-line no-console\nconst print = (...args) => console.log(...args);\n// eslint-disable-next-line no-console\nconst printErr = (...args) => console.error(...args);\n\nclass ComplianceWorker {\n    constructor() {\n        this.db = null;\n        this.sqlite3 = null;\n    }\n\n    async initialize(dbUrl) {\n        this.sqlite3 = await sqlite3InitModule({\n            print,\n            printErr,\n        });\n        this.db = await getDb(this.sqlite3, dbUrl);\n        return ({\n            sqlite3Version: this.sqlite3.version.libVersion,\n            opfs: 'opfs' in this.sqlite3,\n        });\n    }\n\n    async query(sql, indexedParams) {\n        try {\n            const resultRows = [];\n            this.db.exec({\n                sql,\n                rowMode: 'object',\n                resultRows,\n                bind: indexedParams,\n            });\n            return { result: resultRows };\n        } catch (e) {\n            return { result: [], error: e.message };\n        }\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    async cleanup() {\n        const result = await removeAllEntries();\n        return {\n            result,\n        };\n    }\n\n    async close() {\n        this.db.close();\n        return {};\n    }\n}\n\nexpose(new ComplianceWorker());\n"],"mappings":"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","names":["require_key","__commonJSMin","exports","module","quoteChars","quoteKey","key","forceQuotes","needQuote","escapeChars","str","buf","char","fileExists","opfsDir","filename","e","downloadFile","opfsRoot","destinationFile","location","fetchFn","arrayBuffer","syncAccessHandle","dataview","getFile","forceReload","navigator_","fileExists_","downloadFile_","shouldFetch","removeEntry","entries","removed","value","removeAllEntries","EMPTYOBJECT","environment","isFunction","func","EMPTY_OBJECT","import_key","isEmpty","a","isEmptyArray","getFilenameFromUrl","url","pathname","workerMessage","initAckMessage","methods","workerMessage","getMethods","obj","acc","propertyName","callMethod","exposedObject","method","params","port","workerMethod","isFunction","result","error","expose","methods","isEmptyArray","data","workerMessage","initAckMessage","sqlite3InitModule","_scriptDir","config","Module","readyPromiseResolve","readyPromiseReject","resolve","reject","sqlite3InitModuleState","xNameOfInstantiateWasm","callee","imports","onSuccess","uri","scriptDirectory","wfetch","arg","response","bytes","moduleOverrides","arguments_","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","locateFile","path","read_","readAsync","readBinary","setWindowTitle","url","xhr","onload","onerror","title","out","err","STACK_ALIGN","POINTER_SIZE","getNativeTypeSize","type","bits","assert","wasmBinary","noExitRuntime","abort","wasmMemory","ABORT","EXITSTATUS","condition","text","UTF8Decoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","str","u0","u1","u2","ch","UTF8ToString","ptr","HEAPU8","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","i","u","stringToUTF8","outPtr","lengthBytesUTF8","len","c","HEAP","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAP64","HEAPU64","HEAPF64","updateMemoryViews","b","STACK_SIZE","INITIAL_MEMORY","wasmTable","__ATPRERUN__","__ATINIT__","__ATEXIT__","__ATPOSTRUN__","runtimeInitialized","keepRuntimeAlive","preRun","addOnPreRun","callRuntimeCallbacks","initRuntime","FS","TTY","postRun","addOnPostRun","cb","addOnInit","addOnExit","runDependencies","runDependencyWatcher","dependenciesFulfilled","getUniqueRunDependency","id","addRunDependency","removeRunDependency","callback","what","dataURIPrefix","isDataURI","filename","isFileURI","wasmBinaryFile","getBinary","file","getBinaryPromise","createWasm","info","asmLibraryArg","receiveInstance","instance","module","exports","receiveInstantiationResult","result","instantiateArrayBuffer","receiver","binary","reason","instantiateAsync","e","tempDouble","tempI64","ASM_CONSTS","ExitStatus","callbacks","getValue","setValue","value","PATH","splitPathRe","parts","allowAboveRoot","up","last","isAbsolute","trailingSlash","p","root","dir","lastSlash","paths","l","r","getRandomDevice","randomBuffer","PATH_FS","resolvedPath","resolvedAbsolute","from","to","trim","arr","start","end","fromParts","toParts","length","samePartsLength","outputParts","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","dev","ops","stream","tty","buffer","offset","pos","bytesRead","val","zeroMemory","address","size","alignMemory","alignment","mmapAlloc","_emscripten_builtin_memalign","MEMFS","mount","parent","name","mode","node","newCapacity","prevCapacity","CAPACITY_DOUBLING_MAX","oldContents","newSize","attr","old_node","new_dir","new_name","new_node","entries","key","newname","oldpath","position","contents","canOwn","whence","prot","flags","allocated","mmapFlags","asyncLoad","noRunDep","dep","arrayBuffer","event","opts","defaults","current","current_path","islast","count","link","lookup","parentid","hash","errCode","nodeName","rdev","flag","perms","isdir","fd_start","fd_end","fd","device","ma","mi","mounts","check","m","populate","completed","doCallback","done","mountpoint","pseudo","mountRoot","next","dirs","d","newpath","old_path","new_path","old_dirname","new_dirname","old_name","old_dir","relative","dontFollow","uid","gid","atime","mtime","created","seeking","bytesWritten","cmd","ret","stat","buf","data","actualNumBytes","random_device","proc_self","stdin","stdout","stderr","errno","code","input","output","error","canRead","canWrite","dontResolveLastLink","part","properties","obj","LazyUint8Array","chunkOffset","chunkNum","getter","datalength","header","hasByteServing","usesGzip","chunkSize","doXHR","lazyArray","stream_ops","keys","fn","writeChunks","dontCreateFile","preFinish","fullname","processData","byteArray","finish","indexedDB","openRequest","db","transaction","files","ok","fail","total","putRequest","getRequest","SYSCALLS","dirfd","allowEmpty","dirstream","func","ctime","addr","___syscall_chmod","___syscall_faccessat","amode","___syscall_fchmod","___syscall_fchown32","owner","group","setErrNo","___errno_location","___syscall_fcntl64","varargs","newStream","___syscall_fstat64","MAX_INT53","MIN_INT53","bigintToI53Checked","num","___syscall_ftruncate64","___syscall_getcwd","cwd","cwdLengthInBytes","___syscall_ioctl","op","argp","___syscall_lstat64","___syscall_mkdirat","___syscall_newfstatat","nofollow","___syscall_openat","___syscall_readlinkat","bufsize","endChar","___syscall_rmdir","___syscall_stat64","___syscall_unlinkat","readI53FromI64","___syscall_utimensat","times","seconds","nanoseconds","nowIsMonotonic","__emscripten_get_now_is_monotonic","__isLeapYear","year","__MONTH_DAYS_LEAP_CUMULATIVE","__MONTH_DAYS_REGULAR_CUMULATIVE","__yday_from_date","date","isLeapYear","monthDaysCumulative","yday","__localtime_js","time","tmPtr","summerOffset","winterOffset","dst","__mmap_js","off","res","__munmap_js","allocateUTF8","_malloc","__tzset_js","timezone","daylight","tzname","currentYear","winter","summer","stdTimezoneOffset","extractZone","match","winterName","summerName","winterNamePtr","summerNamePtr","_emscripten_date_now","_emscripten_get_now","getHeapMax","emscripten_realloc_buffer","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","alignUp","x","multiple","cutDown","overGrownHeapSize","replacement","ENV","getExecutableName","getEnvStrings","lang","env","strings","writeAsciiToMemory","_environ_get","__environ","environ_buf","bufSize","string","_environ_sizes_get","penviron_count","penviron_buf_size","_fd_close","_fd_fdstat_get","pbuf","doReadv","iov","iovcnt","curr","_fd_read","pnum","_fd_seek","newOffset","_fd_sync","doWritev","_fd_write","FSNode","readMode","writeMode","ASSERTIONS","asm","___wasm_call_ctors","_sqlite3_status64","_sqlite3_status","_sqlite3_db_status","_sqlite3_msize","_sqlite3_vfs_find","_sqlite3_initialize","_sqlite3_malloc","_sqlite3_free","_sqlite3_vfs_register","_sqlite3_vfs_unregister","_sqlite3_malloc64","_sqlite3_realloc","_sqlite3_realloc64","_sqlite3_value_text","_sqlite3_randomness","_sqlite3_stricmp","_sqlite3_strnicmp","_sqlite3_uri_parameter","_sqlite3_uri_boolean","_sqlite3_serialize","_sqlite3_prepare_v2","_sqlite3_step","_sqlite3_column_int64","_sqlite3_column_int","_sqlite3_finalize","_sqlite3_file_control","_sqlite3_reset","_sqlite3_deserialize","_sqlite3_clear_bindings","_sqlite3_value_blob","_sqlite3_value_bytes","_sqlite3_value_double","_sqlite3_value_int","_sqlite3_value_int64","_sqlite3_value_subtype","_sqlite3_value_pointer","_sqlite3_value_type","_sqlite3_value_nochange","_sqlite3_value_frombind","_sqlite3_value_dup","_sqlite3_value_free","_sqlite3_result_blob","_sqlite3_result_error_nomem","_sqlite3_result_error_toobig","_sqlite3_result_double","_sqlite3_result_error","_sqlite3_result_int","_sqlite3_result_int64","_sqlite3_result_null","_sqlite3_result_pointer","_sqlite3_result_subtype","_sqlite3_result_text","_sqlite3_result_zeroblob","_sqlite3_result_zeroblob64","_sqlite3_result_error_code","_sqlite3_user_data","_sqlite3_context_db_handle","_sqlite3_vtab_nochange","_sqlite3_vtab_in_first","_sqlite3_vtab_in_next","_sqlite3_aggregate_context","_sqlite3_get_auxdata","_sqlite3_set_auxdata","_sqlite3_column_count","_sqlite3_data_count","_sqlite3_column_blob","_sqlite3_column_bytes","_sqlite3_column_double","_sqlite3_column_text","_sqlite3_column_value","_sqlite3_column_type","_sqlite3_column_name","_sqlite3_bind_blob","_sqlite3_bind_double","_sqlite3_bind_int","_sqlite3_bind_int64","_sqlite3_bind_null","_sqlite3_bind_pointer","_sqlite3_bind_text","_sqlite3_bind_parameter_count","_sqlite3_bind_parameter_index","_sqlite3_db_handle","_sqlite3_stmt_readonly","_sqlite3_stmt_isexplain","_sqlite3_stmt_status","_sqlite3_sql","_sqlite3_expanded_sql","_sqlite3_preupdate_old","_sqlite3_preupdate_count","_sqlite3_preupdate_depth","_sqlite3_preupdate_blobwrite","_sqlite3_preupdate_new","_sqlite3_value_numeric_type","_sqlite3_errmsg","_sqlite3_set_authorizer","_sqlite3_strglob","_sqlite3_strlike","_sqlite3_exec","_sqlite3_auto_extension","_sqlite3_cancel_auto_extension","_sqlite3_reset_auto_extension","_sqlite3_prepare_v3","_sqlite3_create_module","_sqlite3_create_module_v2","_sqlite3_drop_modules","_sqlite3_declare_vtab","_sqlite3_vtab_on_conflict","_sqlite3_vtab_collation","_sqlite3_vtab_in","_sqlite3_vtab_rhs_value","_sqlite3_vtab_distinct","_sqlite3_keyword_name","_sqlite3_keyword_count","_sqlite3_keyword_check","_sqlite3_complete","_sqlite3_libversion","_sqlite3_libversion_number","_sqlite3_shutdown","_sqlite3_last_insert_rowid","_sqlite3_set_last_insert_rowid","_sqlite3_changes64","_sqlite3_changes","_sqlite3_total_changes64","_sqlite3_total_changes","_sqlite3_txn_state","_sqlite3_close_v2","_sqlite3_busy_handler","_sqlite3_progress_handler","_sqlite3_busy_timeout","_sqlite3_create_function","_sqlite3_create_function_v2","_sqlite3_create_window_function","_sqlite3_overload_function","_sqlite3_trace_v2","_sqlite3_commit_hook","_sqlite3_update_hook","_sqlite3_rollback_hook","_sqlite3_preupdate_hook","_sqlite3_error_offset","_sqlite3_errcode","_sqlite3_extended_errcode","_sqlite3_errstr","_sqlite3_limit","_sqlite3_open","_sqlite3_open_v2","_sqlite3_create_collation","_sqlite3_create_collation_v2","_sqlite3_collation_needed","_sqlite3_table_column_metadata","_sqlite3_extended_result_codes","_sqlite3_uri_key","_sqlite3_uri_int64","_sqlite3_db_name","_sqlite3_db_filename","_sqlite3_compileoption_used","_sqlite3_compileoption_get","_sqlite3session_diff","_sqlite3session_attach","_sqlite3session_create","_sqlite3session_delete","_sqlite3session_table_filter","_sqlite3session_changeset","_sqlite3session_changeset_strm","_sqlite3session_patchset_strm","_sqlite3session_patchset","_sqlite3session_enable","_sqlite3session_indirect","_sqlite3session_isempty","_sqlite3session_memory_used","_sqlite3session_object_config","_sqlite3session_changeset_size","_sqlite3changeset_start","_sqlite3changeset_start_v2","_sqlite3changeset_start_strm","_sqlite3changeset_start_v2_strm","_sqlite3changeset_next","_sqlite3changeset_op","_sqlite3changeset_pk","_sqlite3changeset_old","_sqlite3changeset_new","_sqlite3changeset_conflict","_sqlite3changeset_fk_conflicts","_sqlite3changeset_finalize","_sqlite3changeset_invert","_sqlite3changeset_invert_strm","_sqlite3changeset_apply_v2","_sqlite3changeset_apply","_sqlite3changeset_apply_v2_strm","_sqlite3changeset_apply_strm","_sqlite3changegroup_new","_sqlite3changegroup_add","_sqlite3changegroup_output","_sqlite3changegroup_add_strm","_sqlite3changegroup_output_strm","_sqlite3changegroup_delete","_sqlite3changeset_concat","_sqlite3changeset_concat_strm","_sqlite3session_config","_sqlite3_sourceid","_sqlite3_wasm_pstack_ptr","_sqlite3_wasm_pstack_restore","_sqlite3_wasm_pstack_alloc","_sqlite3_wasm_pstack_remaining","_sqlite3_wasm_pstack_quota","_sqlite3_wasm_db_error","_sqlite3_wasm_test_struct","_sqlite3_wasm_enum_json","_sqlite3_wasm_vfs_unlink","_sqlite3_wasm_db_vfs","_sqlite3_wasm_db_reset","_sqlite3_wasm_db_export_chunked","_sqlite3_wasm_db_serialize","_sqlite3_wasm_vfs_create_file","_sqlite3_wasm_posix_create_file","_sqlite3_wasm_kvvfsMakeKeyOnPstack","_sqlite3_wasm_kvvfs_methods","_sqlite3_wasm_vtab_config","_sqlite3_wasm_db_config_ip","_sqlite3_wasm_db_config_pii","_sqlite3_wasm_db_config_s","_sqlite3_wasm_config_i","_sqlite3_wasm_config_ii","_sqlite3_wasm_config_j","_sqlite3_wasm_init_wasmfs","_sqlite3_wasm_test_intptr","_sqlite3_wasm_test_voidptr","_sqlite3_wasm_test_int64_max","_sqlite3_wasm_test_int64_min","_sqlite3_wasm_test_int64_times2","_sqlite3_wasm_test_int64_minmax","_sqlite3_wasm_test_int64ptr","_sqlite3_wasm_test_stack_overflow","_sqlite3_wasm_test_str_hello","_free","_realloc","stackSave","stackRestore","stackAlloc","calledRun","runCaller","run","args","doRun","sqlite3ApiBootstrap","apiConfig","k","capi","wasm","__rcStr","rc","__isInt","n","SQLite3Error","rcStr","toss3","isInt32","bigIntFits64","f","bigIntFits32","bigIntFitsDouble","isTypedArray","v","__SAB","isSharedTypedArray","aTypedArray","typedArrayPart","begin","isBindableTypedArray","isSQLableTypedArray","affirmBindableTypedArray","utf8Decoder","typedArrayToString","typedArray","flexibleString","WasmAllocError","pDb","funcName","nArg","eTextRep","pApp","xFunc","xStep","xFinal","xDestroy","xValue","xInverse","dbPtr","sql","sqlByteLen","prepFlags","stmtPtrPtr","strPtrPtr","pVoid","pErrMsg","util","srcTypedArray","pRet","keyAlloc","keyDealloc","keyRealloc","m2","optName","opt","rv","ov","sz","mem","safePtrSize","ta","stack","nAlloc","j","__wasmfsOpfsDir","pdir","vfsName","dbName","pK","pVfs","oVfs","schema","scope","pOut","pSize","ppOut","zSchema","sqlite3","nOut","dbPointer","pCtx","dataLen","pData","vfs","__kvvfsInfo","which","kvinfo","s","toRm","kk","pVal","throwIfCannotConvert","valType","pBlob","argc","pArgv","tgt","pStmt","iCol","__newOldValue","pObj","impl","pv","pChangesetIter","ff","lia","postInit","catcher","target","toss","ptrIR","ptrSizeof","cache","heapWrappers","unsigned","ctor","fptr","ft","sig","method","dest","letter","sigParams","wasmCode","__installFunction","scoped","oldLen","fi","list","h","__utf8Decode","jstr","maxBytes","addNul","max","tgtPtr","srcPtr","__affirmAlloc","__allocCStr","returnWithLength","allocator","a","state","__allocMainArgv","isScoped","pList","__allocPtr","howMany","pIr","__argcMismatch","fname","xArg","xResult","__xArgPtr","copyToResult","adaptPtr","t","__xArgString","AbstractArgAdapter","argv","argIndex","FuncPtrAdapter","cm","pair","fp","__xArgAdapterCheck","__xResultAdapterCheck","fArg","resultType","argTypes","fIsFunc","xf","cxw","__xAdapter","typeName","adapter","modeName","xcvPart","wui","finalThen","StructBinderFactory","SBF","alloc","dealloc","log","memberPrefix","memberSuffix","bigIntEnabled","BigInt","BigInt64Array","deriveFrom","isLittleEndian","isFuncSig","isPtrSig","isAutoPtrSig","sigLetter","sigIR","affirmBigIntArray","sigDVGetter","sigDVSetter","sigDVSetWrapper","sPropName","__propThrowOnSet","structName","propName","__instancePointerMap","xPtrPropName","__freeStruct","StructType","rop","__allocStruct","fill","__memoryDump","__memberKeyProp","__lookupMember","structInfo","memberName","tossIfNotFound","__memberSignature","emscriptenFormat","__ptrPropDescriptor","__structMemberKeys","__utf8Decoder","__utf8Encoder","__memberIsString","__affirmCStringSignature","member","__memberToJsString","__addOnDispose","__allocCString","__setMemberCString","isNumericValue","makeMemberWrapper","descr","rxSig1","rxSig2","sigGlyph","xPropName","dbg","prop","StructBinder","lastMember","debugFlags","StructCtor","externalMemory","mKey","aNames","nCols","pColVals","pColNames","aVals","pV","iCode","s0","s1","s2","s3","zDb","zTbl","iKey1","iKey2","z0","z1","rowid","__ipsProxy","__xString","nilType","__xRcPtr","fI64Disabled","__db_err","resultCode","message","msg","cJson","defineGroups","__rcMap","notThese","__dbArgcMismatch","__errEncoding","__argPDb","__argStr","__dbCleanupMap","arity","map","closeArgs","fmap","arities","fargs","__sqlite3CloseV2","__sqlite3SessionDelete","pSession","contextKey","__sqlite3CreateCollationV2","zName","pArg","xCompare","__cfProxy","__sqlite3CreateFunction","__sqlite3CreateWindowFunction","__flexiString","__prepare","sqlLen","ppStmt","pzTail","xSql","xSqlLen","__bindText","__bindBlob","nText","pMem","nMem","__autoExtFptr","fPtr","pKvvfs","kvvfsMethods","kvvfsMakeKey","pstack","kvvfsStorage","zClass","kvvfsImpls","zKey","zBuf","nBuf","astack","zXKey","jKey","jV","nV","zV","zData","__ptrMap","__stmtMap","getOwnOption","dflt","checkSqlite3Rc","sqliteResultCode","DB","__dbTraceToConsole","__vfsPostOpenSql","dbCtorHelper","isWorkerThread","flagsStr","fnJs","vfsCheck","oflags","pPtr","postInitSql","BindTypes","Stmt","affirmDbOpen","affirmColIndex","stmt","ndx","parseExecArgs","$colName","__selectFirstRow","bind","getArgs","__selectAll","rowMode","sixtyFour","dbNumber","resultRows","evalFirstResult","saveSql","isTA","pSql","pSqlEnd","gotColNames","row","isFunc","isWindow","fFlags","xArity","arityArg","asType","opener","affirmStmtOpen","isSupportedBindType","affirmSupportedBindType","affirmParamIndex","affirmNotLockedByExec","currentOpName","bindOne","bindType","asBlob","pStr","alsoClearBinds","storageName","jdb","self","getDbId","wState","alsoUnlink","ddNdx","xferList","require","getMsgDb","msgData","affirmExists","getDefaultDbId","guessVfs","isSpecialDbFilename","wMsgHandler","ev","oargs","doUnlink","theCallback","rowNumber","hadColNames","changeCount","src","dbId","evType","arrivalTime","vtab","sii","asPtr","installMethod","applyArgcCheck","sigN","memKey","fProxy","pFunc","installMethods","structInstance","methods","seen","prior","mkey","asDefault","propList","o","__xWrapFactory","methodName","removeMapping","StructPtrMapper","__xWrap","pCObj","pIdxInfo","defaultRc","ppRowid64","createdMod","mod","fwrap","pAux","ppVtab","pzErr","mnames","remethods","installOpfsVfs","options","urlParams","promiseResolve_","promiseReject_","loggers","logImpl","level","warn","sqlite3_vfs","sqlite3_file","sqlite3_io_methods","opfsUtil","thisThreadHasOPFS","w","metrics","W","opfsIoMethods","opfsVfs","promiseWasRejected","promiseReject","promiseResolve","pDVfs","dVfs","opRun","opNdx","initS11n","textDecoder","textEncoder","viewU8","viewDV","TypeIds","getTypeId","getTypeIdById","tid","clear","typeIds","randomFilename","__openFiles","opTimer","mTimeStart","mTimeEnd","ioSyncWrappers","pFile","opId","pSz64","lockType","pDest","offset64","sz64","pSrc","vfsSyncWrappers","doSyncDir","pOutFlags","opfsFlags","fh","ms","splitIt","absFilename","createDirs","dh","dirName","absDirName","fsEntryName","doDir","dirHandle","handle","subDir","recursive","throwOnError","hDir","filenamePart","defaultOpt","depth","sah","fnamePart","nWrote","OpfsDb","oo1Db","sanityCheck","sq3File","fid","openFlags","dbFile","zDbFile","readBuf","jRead","errMsg","proxyJs","initPromises","SECTOR_SIZE","HEADER_MAX_PATH_SIZE","HEADER_FLAGS_SIZE","HEADER_DIGEST_SIZE","HEADER_CORPUS_SIZE","HEADER_OFFSET_FLAGS","HEADER_OFFSET_DIGEST","HEADER_OFFSET_DATA","PERSISTENT_FILE_TYPES","OPAQUE_DIR_NAME","getRandomName","optionDefaults","__mapVfsToPool","getPoolForVfs","setPoolForVfs","pool","__mapSqlite3File","getPoolForPFile","setPoolForPFile","ioMethods","nRead","vfsMethods","cMsg","createOpfsVfs","OpfsSAHPool","#dhVfsRoot","#dhOpaque","#dhVfsParent","#mapSAHToName","#mapFilenameToSAH","#availableSAH","#mapS3FileToOFile_","#apBody","#dvBody","#cVfs","#verbosity","#logImpl","iter","ah","nRm","clearFiles","fileDigest","compDigest","pathBytes","enc","digest","h1","h2","prev","prevName","OpfsSAHPoolUtil","#p","sahPool","min","apiVersionCheck","close","instanceCounter","thePool","poolUtil","oo1","theVfs","OpfsSAHPoolDb","SABC","toExportForESM","originalInit","initModuleState","li","EmscriptenModule","sim","sqlite3_bundler_friendly_default","sqlite_wasm_default","sqlite3_bundler_friendly_default","getMemoryDb","sqlite3","location","arrayBuffer","p","db","rc","formatSqliteError","cause","index","getOpfsDb","dbUrl","filename","getFilenameFromUrl","retries","getFile","resultRows","sql","message","removeEntry","getDb","print","args","printErr","ComplianceWorker","sqlite_wasm_default","indexedParams","e","removeAllEntries","expose"]}